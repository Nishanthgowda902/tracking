import {
  __commonJS
} from "./chunk-G3PMV62Z.js";

// node_modules/precompiled-mqtt/dist/mqtt.browser.js
var require_mqtt_browser = __commonJS({
  "node_modules/precompiled-mqtt/dist/mqtt.browser.js"(exports, module) {
    !function() {
      var e = { 9742: function(e2, t2) {
        "use strict";
        t2.byteLength = function(e3) {
          var t3 = u(e3), r3 = t3[0], n3 = t3[1];
          return 3 * (r3 + n3) / 4 - n3;
        }, t2.toByteArray = function(e3) {
          var t3, r3, o2 = u(e3), s2 = o2[0], a2 = o2[1], l2 = new i(function(e4, t4, r4) {
            return 3 * (t4 + r4) / 4 - r4;
          }(0, s2, a2)), c = 0, h = a2 > 0 ? s2 - 4 : s2;
          for (r3 = 0; r3 < h; r3 += 4) t3 = n2[e3.charCodeAt(r3)] << 18 | n2[e3.charCodeAt(r3 + 1)] << 12 | n2[e3.charCodeAt(r3 + 2)] << 6 | n2[e3.charCodeAt(r3 + 3)], l2[c++] = t3 >> 16 & 255, l2[c++] = t3 >> 8 & 255, l2[c++] = 255 & t3;
          return 2 === a2 && (t3 = n2[e3.charCodeAt(r3)] << 2 | n2[e3.charCodeAt(r3 + 1)] >> 4, l2[c++] = 255 & t3), 1 === a2 && (t3 = n2[e3.charCodeAt(r3)] << 10 | n2[e3.charCodeAt(r3 + 1)] << 4 | n2[e3.charCodeAt(r3 + 2)] >> 2, l2[c++] = t3 >> 8 & 255, l2[c++] = 255 & t3), l2;
        }, t2.fromByteArray = function(e3) {
          for (var t3, n3 = e3.length, i2 = n3 % 3, o2 = [], s2 = 16383, a2 = 0, u2 = n3 - i2; a2 < u2; a2 += s2) o2.push(l(e3, a2, a2 + s2 > u2 ? u2 : a2 + s2));
          return 1 === i2 ? (t3 = e3[n3 - 1], o2.push(r2[t3 >> 2] + r2[t3 << 4 & 63] + "==")) : 2 === i2 && (t3 = (e3[n3 - 2] << 8) + e3[n3 - 1], o2.push(r2[t3 >> 10] + r2[t3 >> 4 & 63] + r2[t3 << 2 & 63] + "=")), o2.join("");
        };
        for (var r2 = [], n2 = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, a = o.length; s < a; ++s) r2[s] = o[s], n2[o.charCodeAt(s)] = s;
        function u(e3) {
          var t3 = e3.length;
          if (t3 % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var r3 = e3.indexOf("=");
          return -1 === r3 && (r3 = t3), [r3, r3 === t3 ? 0 : 4 - r3 % 4];
        }
        function l(e3, t3, n3) {
          for (var i2, o2, s2 = [], a2 = t3; a2 < n3; a2 += 3) i2 = (e3[a2] << 16 & 16711680) + (e3[a2 + 1] << 8 & 65280) + (255 & e3[a2 + 2]), s2.push(r2[(o2 = i2) >> 18 & 63] + r2[o2 >> 12 & 63] + r2[o2 >> 6 & 63] + r2[63 & o2]);
          return s2.join("");
        }
        n2["-".charCodeAt(0)] = 62, n2["_".charCodeAt(0)] = 63;
      }, 9668: function(e2, t2, r2) {
        "use strict";
        const { Buffer: n2 } = r2(8478), i = Symbol.for("BufferList");
        function o(e3) {
          if (!(this instanceof o)) return new o(e3);
          o._init.call(this, e3);
        }
        o._init = function(e3) {
          Object.defineProperty(this, i, { value: true }), this._bufs = [], this.length = 0, e3 && this.append(e3);
        }, o.prototype._new = function(e3) {
          return new o(e3);
        }, o.prototype._offset = function(e3) {
          if (0 === e3) return [0, 0];
          let t3 = 0;
          for (let r3 = 0; r3 < this._bufs.length; r3++) {
            const n3 = t3 + this._bufs[r3].length;
            if (e3 < n3 || r3 === this._bufs.length - 1) return [r3, e3 - t3];
            t3 = n3;
          }
        }, o.prototype._reverseOffset = function(e3) {
          const t3 = e3[0];
          let r3 = e3[1];
          for (let e4 = 0; e4 < t3; e4++) r3 += this._bufs[e4].length;
          return r3;
        }, o.prototype.get = function(e3) {
          if (e3 > this.length || e3 < 0) return;
          const t3 = this._offset(e3);
          return this._bufs[t3[0]][t3[1]];
        }, o.prototype.slice = function(e3, t3) {
          return "number" == typeof e3 && e3 < 0 && (e3 += this.length), "number" == typeof t3 && t3 < 0 && (t3 += this.length), this.copy(null, 0, e3, t3);
        }, o.prototype.copy = function(e3, t3, r3, i2) {
          if (("number" != typeof r3 || r3 < 0) && (r3 = 0), ("number" != typeof i2 || i2 > this.length) && (i2 = this.length), r3 >= this.length) return e3 || n2.alloc(0);
          if (i2 <= 0) return e3 || n2.alloc(0);
          const o2 = !!e3, s = this._offset(r3), a = i2 - r3;
          let u = a, l = o2 && t3 || 0, c = s[1];
          if (0 === r3 && i2 === this.length) {
            if (!o2) return 1 === this._bufs.length ? this._bufs[0] : n2.concat(this._bufs, this.length);
            for (let t4 = 0; t4 < this._bufs.length; t4++) this._bufs[t4].copy(e3, l), l += this._bufs[t4].length;
            return e3;
          }
          if (u <= this._bufs[s[0]].length - c) return o2 ? this._bufs[s[0]].copy(e3, t3, c, c + u) : this._bufs[s[0]].slice(c, c + u);
          o2 || (e3 = n2.allocUnsafe(a));
          for (let t4 = s[0]; t4 < this._bufs.length; t4++) {
            const r4 = this._bufs[t4].length - c;
            if (!(u > r4)) {
              this._bufs[t4].copy(e3, l, c, c + u), l += r4;
              break;
            }
            this._bufs[t4].copy(e3, l, c), l += r4, u -= r4, c && (c = 0);
          }
          return e3.length > l ? e3.slice(0, l) : e3;
        }, o.prototype.shallowSlice = function(e3, t3) {
          if (e3 = e3 || 0, t3 = "number" != typeof t3 ? this.length : t3, e3 < 0 && (e3 += this.length), t3 < 0 && (t3 += this.length), e3 === t3) return this._new();
          const r3 = this._offset(e3), n3 = this._offset(t3), i2 = this._bufs.slice(r3[0], n3[0] + 1);
          return 0 === n3[1] ? i2.pop() : i2[i2.length - 1] = i2[i2.length - 1].slice(0, n3[1]), 0 !== r3[1] && (i2[0] = i2[0].slice(r3[1])), this._new(i2);
        }, o.prototype.toString = function(e3, t3, r3) {
          return this.slice(t3, r3).toString(e3);
        }, o.prototype.consume = function(e3) {
          if (e3 = Math.trunc(e3), Number.isNaN(e3) || e3 <= 0) return this;
          for (; this._bufs.length; ) {
            if (!(e3 >= this._bufs[0].length)) {
              this._bufs[0] = this._bufs[0].slice(e3), this.length -= e3;
              break;
            }
            e3 -= this._bufs[0].length, this.length -= this._bufs[0].length, this._bufs.shift();
          }
          return this;
        }, o.prototype.duplicate = function() {
          const e3 = this._new();
          for (let t3 = 0; t3 < this._bufs.length; t3++) e3.append(this._bufs[t3]);
          return e3;
        }, o.prototype.append = function(e3) {
          if (null == e3) return this;
          if (e3.buffer) this._appendBuffer(n2.from(e3.buffer, e3.byteOffset, e3.byteLength));
          else if (Array.isArray(e3)) for (let t3 = 0; t3 < e3.length; t3++) this.append(e3[t3]);
          else if (this._isBufferList(e3)) for (let t3 = 0; t3 < e3._bufs.length; t3++) this.append(e3._bufs[t3]);
          else "number" == typeof e3 && (e3 = e3.toString()), this._appendBuffer(n2.from(e3));
          return this;
        }, o.prototype._appendBuffer = function(e3) {
          this._bufs.push(e3), this.length += e3.length;
        }, o.prototype.indexOf = function(e3, t3, r3) {
          if (void 0 === r3 && "string" == typeof t3 && (r3 = t3, t3 = void 0), "function" == typeof e3 || Array.isArray(e3)) throw new TypeError('The "value" argument must be one of type string, Buffer, BufferList, or Uint8Array.');
          if ("number" == typeof e3 ? e3 = n2.from([e3]) : "string" == typeof e3 ? e3 = n2.from(e3, r3) : this._isBufferList(e3) ? e3 = e3.slice() : Array.isArray(e3.buffer) ? e3 = n2.from(e3.buffer, e3.byteOffset, e3.byteLength) : n2.isBuffer(e3) || (e3 = n2.from(e3)), t3 = Number(t3 || 0), isNaN(t3) && (t3 = 0), t3 < 0 && (t3 = this.length + t3), t3 < 0 && (t3 = 0), 0 === e3.length) return t3 > this.length ? this.length : t3;
          const i2 = this._offset(t3);
          let o2 = i2[0], s = i2[1];
          for (; o2 < this._bufs.length; o2++) {
            const t4 = this._bufs[o2];
            for (; s < t4.length; ) if (t4.length - s >= e3.length) {
              const r4 = t4.indexOf(e3, s);
              if (-1 !== r4) return this._reverseOffset([o2, r4]);
              s = t4.length - e3.length + 1;
            } else {
              const t5 = this._reverseOffset([o2, s]);
              if (this._match(t5, e3)) return t5;
              s++;
            }
            s = 0;
          }
          return -1;
        }, o.prototype._match = function(e3, t3) {
          if (this.length - e3 < t3.length) return false;
          for (let r3 = 0; r3 < t3.length; r3++) if (this.get(e3 + r3) !== t3[r3]) return false;
          return true;
        }, function() {
          const e3 = { readDoubleBE: 8, readDoubleLE: 8, readFloatBE: 4, readFloatLE: 4, readInt32BE: 4, readInt32LE: 4, readUInt32BE: 4, readUInt32LE: 4, readInt16BE: 2, readInt16LE: 2, readUInt16BE: 2, readUInt16LE: 2, readInt8: 1, readUInt8: 1, readIntBE: null, readIntLE: null, readUIntBE: null, readUIntLE: null };
          for (const t3 in e3) !function(t4) {
            o.prototype[t4] = null === e3[t4] ? function(e4, r3) {
              return this.slice(e4, e4 + r3)[t4](0, r3);
            } : function(r3 = 0) {
              return this.slice(r3, r3 + e3[t4])[t4](0);
            };
          }(t3);
        }(), o.prototype._isBufferList = function(e3) {
          return e3 instanceof o || o.isBufferList(e3);
        }, o.isBufferList = function(e3) {
          return null != e3 && e3[i];
        }, e2.exports = o;
      }, 22: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(8473).Duplex, i = r2(5717), o = r2(9668);
        function s(e3) {
          if (!(this instanceof s)) return new s(e3);
          if ("function" == typeof e3) {
            this._callback = e3;
            const t3 = (function(e4) {
              this._callback && (this._callback(e4), this._callback = null);
            }).bind(this);
            this.on("pipe", function(e4) {
              e4.on("error", t3);
            }), this.on("unpipe", function(e4) {
              e4.removeListener("error", t3);
            }), e3 = null;
          }
          o._init.call(this, e3), n2.call(this);
        }
        i(s, n2), Object.assign(s.prototype, o.prototype), s.prototype._new = function(e3) {
          return new s(e3);
        }, s.prototype._write = function(e3, t3, r3) {
          this._appendBuffer(e3), "function" == typeof r3 && r3();
        }, s.prototype._read = function(e3) {
          if (!this.length) return this.push(null);
          e3 = Math.min(e3, this.length), this.push(this.slice(0, e3)), this.consume(e3);
        }, s.prototype.end = function(e3) {
          n2.prototype.end.call(this, e3), this._callback && (this._callback(null, this.slice()), this._callback = null);
        }, s.prototype._destroy = function(e3, t3) {
          this._bufs.length = 0, this.length = 0, t3(e3);
        }, s.prototype._isBufferList = function(e3) {
          return e3 instanceof s || e3 instanceof o || s.isBufferList(e3);
        }, s.isBufferList = o.isBufferList, e2.exports = s, e2.exports.BufferListStream = s, e2.exports.BufferList = o;
      }, 8478: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(9742), i = r2(645), o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        t2.Buffer = u, t2.SlowBuffer = function(e3) {
          return +e3 != e3 && (e3 = 0), u.alloc(+e3);
        }, t2.INSPECT_MAX_BYTES = 50;
        var s = 2147483647;
        function a(e3) {
          if (e3 > s) throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
          var t3 = new Uint8Array(e3);
          return Object.setPrototypeOf(t3, u.prototype), t3;
        }
        function u(e3, t3, r3) {
          if ("number" == typeof e3) {
            if ("string" == typeof t3) throw new TypeError('The "string" argument must be of type string. Received type number');
            return h(e3);
          }
          return l(e3, t3, r3);
        }
        function l(e3, t3, r3) {
          if ("string" == typeof e3) return function(e4, t4) {
            if ("string" == typeof t4 && "" !== t4 || (t4 = "utf8"), !u.isEncoding(t4)) throw new TypeError("Unknown encoding: " + t4);
            var r4 = 0 | y(e4, t4), n4 = a(r4), i3 = n4.write(e4, t4);
            return i3 !== r4 && (n4 = n4.slice(0, i3)), n4;
          }(e3, t3);
          if (ArrayBuffer.isView(e3)) return function(e4) {
            if (D(e4, Uint8Array)) {
              var t4 = new Uint8Array(e4);
              return p(t4.buffer, t4.byteOffset, t4.byteLength);
            }
            return f(e4);
          }(e3);
          if (null == e3) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
          if (D(e3, ArrayBuffer) || e3 && D(e3.buffer, ArrayBuffer)) return p(e3, t3, r3);
          if ("undefined" != typeof SharedArrayBuffer && (D(e3, SharedArrayBuffer) || e3 && D(e3.buffer, SharedArrayBuffer))) return p(e3, t3, r3);
          if ("number" == typeof e3) throw new TypeError('The "value" argument must not be of type number. Received type number');
          var n3 = e3.valueOf && e3.valueOf();
          if (null != n3 && n3 !== e3) return u.from(n3, t3, r3);
          var i2 = function(e4) {
            if (u.isBuffer(e4)) {
              var t4 = 0 | d(e4.length), r4 = a(t4);
              return 0 === r4.length || e4.copy(r4, 0, 0, t4), r4;
            }
            return void 0 !== e4.length ? "number" != typeof e4.length || F(e4.length) ? a(0) : f(e4) : "Buffer" === e4.type && Array.isArray(e4.data) ? f(e4.data) : void 0;
          }(e3);
          if (i2) return i2;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e3[Symbol.toPrimitive]) return u.from(e3[Symbol.toPrimitive]("string"), t3, r3);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
        }
        function c(e3) {
          if ("number" != typeof e3) throw new TypeError('"size" argument must be of type number');
          if (e3 < 0) throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
        }
        function h(e3) {
          return c(e3), a(e3 < 0 ? 0 : 0 | d(e3));
        }
        function f(e3) {
          for (var t3 = e3.length < 0 ? 0 : 0 | d(e3.length), r3 = a(t3), n3 = 0; n3 < t3; n3 += 1) r3[n3] = 255 & e3[n3];
          return r3;
        }
        function p(e3, t3, r3) {
          if (t3 < 0 || e3.byteLength < t3) throw new RangeError('"offset" is outside of buffer bounds');
          if (e3.byteLength < t3 + (r3 || 0)) throw new RangeError('"length" is outside of buffer bounds');
          var n3;
          return n3 = void 0 === t3 && void 0 === r3 ? new Uint8Array(e3) : void 0 === r3 ? new Uint8Array(e3, t3) : new Uint8Array(e3, t3, r3), Object.setPrototypeOf(n3, u.prototype), n3;
        }
        function d(e3) {
          if (e3 >= s) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
          return 0 | e3;
        }
        function y(e3, t3) {
          if (u.isBuffer(e3)) return e3.length;
          if (ArrayBuffer.isView(e3) || D(e3, ArrayBuffer)) return e3.byteLength;
          if ("string" != typeof e3) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e3);
          var r3 = e3.length, n3 = arguments.length > 2 && true === arguments[2];
          if (!n3 && 0 === r3) return 0;
          for (var i2 = false; ; ) switch (t3) {
            case "ascii":
            case "latin1":
            case "binary":
              return r3;
            case "utf8":
            case "utf-8":
              return j(e3).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r3;
            case "hex":
              return r3 >>> 1;
            case "base64":
              return q(e3).length;
            default:
              if (i2) return n3 ? -1 : j(e3).length;
              t3 = ("" + t3).toLowerCase(), i2 = true;
          }
        }
        function g(e3, t3, r3) {
          var n3 = false;
          if ((void 0 === t3 || t3 < 0) && (t3 = 0), t3 > this.length) return "";
          if ((void 0 === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0) return "";
          if ((r3 >>>= 0) <= (t3 >>>= 0)) return "";
          for (e3 || (e3 = "utf8"); ; ) switch (e3) {
            case "hex":
              return B(this, t3, r3);
            case "utf8":
            case "utf-8":
              return T(this, t3, r3);
            case "ascii":
              return I(this, t3, r3);
            case "latin1":
            case "binary":
              return x(this, t3, r3);
            case "base64":
              return C(this, t3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return R(this, t3, r3);
            default:
              if (n3) throw new TypeError("Unknown encoding: " + e3);
              e3 = (e3 + "").toLowerCase(), n3 = true;
          }
        }
        function b(e3, t3, r3) {
          var n3 = e3[t3];
          e3[t3] = e3[r3], e3[r3] = n3;
        }
        function m(e3, t3, r3, n3, i2) {
          if (0 === e3.length) return -1;
          if ("string" == typeof r3 ? (n3 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), F(r3 = +r3) && (r3 = i2 ? 0 : e3.length - 1), r3 < 0 && (r3 = e3.length + r3), r3 >= e3.length) {
            if (i2) return -1;
            r3 = e3.length - 1;
          } else if (r3 < 0) {
            if (!i2) return -1;
            r3 = 0;
          }
          if ("string" == typeof t3 && (t3 = u.from(t3, n3)), u.isBuffer(t3)) return 0 === t3.length ? -1 : v(e3, t3, r3, n3, i2);
          if ("number" == typeof t3) return t3 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e3, t3, r3) : Uint8Array.prototype.lastIndexOf.call(e3, t3, r3) : v(e3, [t3], r3, n3, i2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function v(e3, t3, r3, n3, i2) {
          var o2, s2 = 1, a2 = e3.length, u2 = t3.length;
          if (void 0 !== n3 && ("ucs2" === (n3 = String(n3).toLowerCase()) || "ucs-2" === n3 || "utf16le" === n3 || "utf-16le" === n3)) {
            if (e3.length < 2 || t3.length < 2) return -1;
            s2 = 2, a2 /= 2, u2 /= 2, r3 /= 2;
          }
          function l2(e4, t4) {
            return 1 === s2 ? e4[t4] : e4.readUInt16BE(t4 * s2);
          }
          if (i2) {
            var c2 = -1;
            for (o2 = r3; o2 < a2; o2++) if (l2(e3, o2) === l2(t3, -1 === c2 ? 0 : o2 - c2)) {
              if (-1 === c2 && (c2 = o2), o2 - c2 + 1 === u2) return c2 * s2;
            } else -1 !== c2 && (o2 -= o2 - c2), c2 = -1;
          } else for (r3 + u2 > a2 && (r3 = a2 - u2), o2 = r3; o2 >= 0; o2--) {
            for (var h2 = true, f2 = 0; f2 < u2; f2++) if (l2(e3, o2 + f2) !== l2(t3, f2)) {
              h2 = false;
              break;
            }
            if (h2) return o2;
          }
          return -1;
        }
        function w(e3, t3, r3, n3) {
          r3 = Number(r3) || 0;
          var i2 = e3.length - r3;
          n3 ? (n3 = Number(n3)) > i2 && (n3 = i2) : n3 = i2;
          var o2 = t3.length;
          n3 > o2 / 2 && (n3 = o2 / 2);
          for (var s2 = 0; s2 < n3; ++s2) {
            var a2 = parseInt(t3.substr(2 * s2, 2), 16);
            if (F(a2)) return s2;
            e3[r3 + s2] = a2;
          }
          return s2;
        }
        function _(e3, t3, r3, n3) {
          return z(j(t3, e3.length - r3), e3, r3, n3);
        }
        function E(e3, t3, r3, n3) {
          return z(function(e4) {
            for (var t4 = [], r4 = 0; r4 < e4.length; ++r4) t4.push(255 & e4.charCodeAt(r4));
            return t4;
          }(t3), e3, r3, n3);
        }
        function k(e3, t3, r3, n3) {
          return z(q(t3), e3, r3, n3);
        }
        function S(e3, t3, r3, n3) {
          return z(function(e4, t4) {
            for (var r4, n4, i2, o2 = [], s2 = 0; s2 < e4.length && !((t4 -= 2) < 0); ++s2) n4 = (r4 = e4.charCodeAt(s2)) >> 8, i2 = r4 % 256, o2.push(i2), o2.push(n4);
            return o2;
          }(t3, e3.length - r3), e3, r3, n3);
        }
        function C(e3, t3, r3) {
          return 0 === t3 && r3 === e3.length ? n2.fromByteArray(e3) : n2.fromByteArray(e3.slice(t3, r3));
        }
        function T(e3, t3, r3) {
          r3 = Math.min(e3.length, r3);
          for (var n3 = [], i2 = t3; i2 < r3; ) {
            var o2, s2, a2, u2, l2 = e3[i2], c2 = null, h2 = l2 > 239 ? 4 : l2 > 223 ? 3 : l2 > 191 ? 2 : 1;
            if (i2 + h2 <= r3) switch (h2) {
              case 1:
                l2 < 128 && (c2 = l2);
                break;
              case 2:
                128 == (192 & (o2 = e3[i2 + 1])) && (u2 = (31 & l2) << 6 | 63 & o2) > 127 && (c2 = u2);
                break;
              case 3:
                o2 = e3[i2 + 1], s2 = e3[i2 + 2], 128 == (192 & o2) && 128 == (192 & s2) && (u2 = (15 & l2) << 12 | (63 & o2) << 6 | 63 & s2) > 2047 && (u2 < 55296 || u2 > 57343) && (c2 = u2);
                break;
              case 4:
                o2 = e3[i2 + 1], s2 = e3[i2 + 2], a2 = e3[i2 + 3], 128 == (192 & o2) && 128 == (192 & s2) && 128 == (192 & a2) && (u2 = (15 & l2) << 18 | (63 & o2) << 12 | (63 & s2) << 6 | 63 & a2) > 65535 && u2 < 1114112 && (c2 = u2);
            }
            null === c2 ? (c2 = 65533, h2 = 1) : c2 > 65535 && (c2 -= 65536, n3.push(c2 >>> 10 & 1023 | 55296), c2 = 56320 | 1023 & c2), n3.push(c2), i2 += h2;
          }
          return function(e4) {
            var t4 = e4.length;
            if (t4 <= A) return String.fromCharCode.apply(String, e4);
            for (var r4 = "", n4 = 0; n4 < t4; ) r4 += String.fromCharCode.apply(String, e4.slice(n4, n4 += A));
            return r4;
          }(n3);
        }
        t2.kMaxLength = s, u.TYPED_ARRAY_SUPPORT = function() {
          try {
            var e3 = new Uint8Array(1), t3 = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(t3, Uint8Array.prototype), Object.setPrototypeOf(e3, t3), 42 === e3.foo();
          } catch (e4) {
            return false;
          }
        }(), u.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u.prototype, "parent", { enumerable: true, get: function() {
          if (u.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(u.prototype, "offset", { enumerable: true, get: function() {
          if (u.isBuffer(this)) return this.byteOffset;
        } }), u.poolSize = 8192, u.from = function(e3, t3, r3) {
          return l(e3, t3, r3);
        }, Object.setPrototypeOf(u.prototype, Uint8Array.prototype), Object.setPrototypeOf(u, Uint8Array), u.alloc = function(e3, t3, r3) {
          return function(e4, t4, r4) {
            return c(e4), e4 <= 0 ? a(e4) : void 0 !== t4 ? "string" == typeof r4 ? a(e4).fill(t4, r4) : a(e4).fill(t4) : a(e4);
          }(e3, t3, r3);
        }, u.allocUnsafe = function(e3) {
          return h(e3);
        }, u.allocUnsafeSlow = function(e3) {
          return h(e3);
        }, u.isBuffer = function(e3) {
          return null != e3 && true === e3._isBuffer && e3 !== u.prototype;
        }, u.compare = function(e3, t3) {
          if (D(e3, Uint8Array) && (e3 = u.from(e3, e3.offset, e3.byteLength)), D(t3, Uint8Array) && (t3 = u.from(t3, t3.offset, t3.byteLength)), !u.isBuffer(e3) || !u.isBuffer(t3)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e3 === t3) return 0;
          for (var r3 = e3.length, n3 = t3.length, i2 = 0, o2 = Math.min(r3, n3); i2 < o2; ++i2) if (e3[i2] !== t3[i2]) {
            r3 = e3[i2], n3 = t3[i2];
            break;
          }
          return r3 < n3 ? -1 : n3 < r3 ? 1 : 0;
        }, u.isEncoding = function(e3) {
          switch (String(e3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, u.concat = function(e3, t3) {
          if (!Array.isArray(e3)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e3.length) return u.alloc(0);
          var r3;
          if (void 0 === t3) for (t3 = 0, r3 = 0; r3 < e3.length; ++r3) t3 += e3[r3].length;
          var n3 = u.allocUnsafe(t3), i2 = 0;
          for (r3 = 0; r3 < e3.length; ++r3) {
            var o2 = e3[r3];
            if (D(o2, Uint8Array)) i2 + o2.length > n3.length ? u.from(o2).copy(n3, i2) : Uint8Array.prototype.set.call(n3, o2, i2);
            else {
              if (!u.isBuffer(o2)) throw new TypeError('"list" argument must be an Array of Buffers');
              o2.copy(n3, i2);
            }
            i2 += o2.length;
          }
          return n3;
        }, u.byteLength = y, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
          var e3 = this.length;
          if (e3 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t3 = 0; t3 < e3; t3 += 2) b(this, t3, t3 + 1);
          return this;
        }, u.prototype.swap32 = function() {
          var e3 = this.length;
          if (e3 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t3 = 0; t3 < e3; t3 += 4) b(this, t3, t3 + 3), b(this, t3 + 1, t3 + 2);
          return this;
        }, u.prototype.swap64 = function() {
          var e3 = this.length;
          if (e3 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t3 = 0; t3 < e3; t3 += 8) b(this, t3, t3 + 7), b(this, t3 + 1, t3 + 6), b(this, t3 + 2, t3 + 5), b(this, t3 + 3, t3 + 4);
          return this;
        }, u.prototype.toString = function() {
          var e3 = this.length;
          return 0 === e3 ? "" : 0 === arguments.length ? T(this, 0, e3) : g.apply(this, arguments);
        }, u.prototype.toLocaleString = u.prototype.toString, u.prototype.equals = function(e3) {
          if (!u.isBuffer(e3)) throw new TypeError("Argument must be a Buffer");
          return this === e3 || 0 === u.compare(this, e3);
        }, u.prototype.inspect = function() {
          var e3 = "", r3 = t2.INSPECT_MAX_BYTES;
          return e3 = this.toString("hex", 0, r3).replace(/(.{2})/g, "$1 ").trim(), this.length > r3 && (e3 += " ... "), "<Buffer " + e3 + ">";
        }, o && (u.prototype[o] = u.prototype.inspect), u.prototype.compare = function(e3, t3, r3, n3, i2) {
          if (D(e3, Uint8Array) && (e3 = u.from(e3, e3.offset, e3.byteLength)), !u.isBuffer(e3)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e3);
          if (void 0 === t3 && (t3 = 0), void 0 === r3 && (r3 = e3 ? e3.length : 0), void 0 === n3 && (n3 = 0), void 0 === i2 && (i2 = this.length), t3 < 0 || r3 > e3.length || n3 < 0 || i2 > this.length) throw new RangeError("out of range index");
          if (n3 >= i2 && t3 >= r3) return 0;
          if (n3 >= i2) return -1;
          if (t3 >= r3) return 1;
          if (this === e3) return 0;
          for (var o2 = (i2 >>>= 0) - (n3 >>>= 0), s2 = (r3 >>>= 0) - (t3 >>>= 0), a2 = Math.min(o2, s2), l2 = this.slice(n3, i2), c2 = e3.slice(t3, r3), h2 = 0; h2 < a2; ++h2) if (l2[h2] !== c2[h2]) {
            o2 = l2[h2], s2 = c2[h2];
            break;
          }
          return o2 < s2 ? -1 : s2 < o2 ? 1 : 0;
        }, u.prototype.includes = function(e3, t3, r3) {
          return -1 !== this.indexOf(e3, t3, r3);
        }, u.prototype.indexOf = function(e3, t3, r3) {
          return m(this, e3, t3, r3, true);
        }, u.prototype.lastIndexOf = function(e3, t3, r3) {
          return m(this, e3, t3, r3, false);
        }, u.prototype.write = function(e3, t3, r3, n3) {
          if (void 0 === t3) n3 = "utf8", r3 = this.length, t3 = 0;
          else if (void 0 === r3 && "string" == typeof t3) n3 = t3, r3 = this.length, t3 = 0;
          else {
            if (!isFinite(t3)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, void 0 === n3 && (n3 = "utf8")) : (n3 = r3, r3 = void 0);
          }
          var i2 = this.length - t3;
          if ((void 0 === r3 || r3 > i2) && (r3 = i2), e3.length > 0 && (r3 < 0 || t3 < 0) || t3 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          n3 || (n3 = "utf8");
          for (var o2 = false; ; ) switch (n3) {
            case "hex":
              return w(this, e3, t3, r3);
            case "utf8":
            case "utf-8":
              return _(this, e3, t3, r3);
            case "ascii":
            case "latin1":
            case "binary":
              return E(this, e3, t3, r3);
            case "base64":
              return k(this, e3, t3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return S(this, e3, t3, r3);
            default:
              if (o2) throw new TypeError("Unknown encoding: " + n3);
              n3 = ("" + n3).toLowerCase(), o2 = true;
          }
        }, u.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        var A = 4096;
        function I(e3, t3, r3) {
          var n3 = "";
          r3 = Math.min(e3.length, r3);
          for (var i2 = t3; i2 < r3; ++i2) n3 += String.fromCharCode(127 & e3[i2]);
          return n3;
        }
        function x(e3, t3, r3) {
          var n3 = "";
          r3 = Math.min(e3.length, r3);
          for (var i2 = t3; i2 < r3; ++i2) n3 += String.fromCharCode(e3[i2]);
          return n3;
        }
        function B(e3, t3, r3) {
          var n3 = e3.length;
          (!t3 || t3 < 0) && (t3 = 0), (!r3 || r3 < 0 || r3 > n3) && (r3 = n3);
          for (var i2 = "", o2 = t3; o2 < r3; ++o2) i2 += V[e3[o2]];
          return i2;
        }
        function R(e3, t3, r3) {
          for (var n3 = e3.slice(t3, r3), i2 = "", o2 = 0; o2 < n3.length - 1; o2 += 2) i2 += String.fromCharCode(n3[o2] + 256 * n3[o2 + 1]);
          return i2;
        }
        function O(e3, t3, r3) {
          if (e3 % 1 != 0 || e3 < 0) throw new RangeError("offset is not uint");
          if (e3 + t3 > r3) throw new RangeError("Trying to access beyond buffer length");
        }
        function P(e3, t3, r3, n3, i2, o2) {
          if (!u.isBuffer(e3)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t3 > i2 || t3 < o2) throw new RangeError('"value" argument is out of bounds');
          if (r3 + n3 > e3.length) throw new RangeError("Index out of range");
        }
        function N(e3, t3, r3, n3, i2, o2) {
          if (r3 + n3 > e3.length) throw new RangeError("Index out of range");
          if (r3 < 0) throw new RangeError("Index out of range");
        }
        function M(e3, t3, r3, n3, o2) {
          return t3 = +t3, r3 >>>= 0, o2 || N(e3, 0, r3, 4), i.write(e3, t3, r3, n3, 23, 4), r3 + 4;
        }
        function L(e3, t3, r3, n3, o2) {
          return t3 = +t3, r3 >>>= 0, o2 || N(e3, 0, r3, 8), i.write(e3, t3, r3, n3, 52, 8), r3 + 8;
        }
        u.prototype.slice = function(e3, t3) {
          var r3 = this.length;
          (e3 = ~~e3) < 0 ? (e3 += r3) < 0 && (e3 = 0) : e3 > r3 && (e3 = r3), (t3 = void 0 === t3 ? r3 : ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : t3 > r3 && (t3 = r3), t3 < e3 && (t3 = e3);
          var n3 = this.subarray(e3, t3);
          return Object.setPrototypeOf(n3, u.prototype), n3;
        }, u.prototype.readUintLE = u.prototype.readUIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          for (var n3 = this[e3], i2 = 1, o2 = 0; ++o2 < t3 && (i2 *= 256); ) n3 += this[e3 + o2] * i2;
          return n3;
        }, u.prototype.readUintBE = u.prototype.readUIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          for (var n3 = this[e3 + --t3], i2 = 1; t3 > 0 && (i2 *= 256); ) n3 += this[e3 + --t3] * i2;
          return n3;
        }, u.prototype.readUint8 = u.prototype.readUInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 1, this.length), this[e3];
        }, u.prototype.readUint16LE = u.prototype.readUInt16LE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
        }, u.prototype.readUint16BE = u.prototype.readUInt16BE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
        }, u.prototype.readUint32LE = u.prototype.readUInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
        }, u.prototype.readUint32BE = u.prototype.readUInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
        }, u.prototype.readIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          for (var n3 = this[e3], i2 = 1, o2 = 0; ++o2 < t3 && (i2 *= 256); ) n3 += this[e3 + o2] * i2;
          return n3 >= (i2 *= 128) && (n3 -= Math.pow(2, 8 * t3)), n3;
        }, u.prototype.readIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          for (var n3 = t3, i2 = 1, o2 = this[e3 + --n3]; n3 > 0 && (i2 *= 256); ) o2 += this[e3 + --n3] * i2;
          return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * t3)), o2;
        }, u.prototype.readInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
        }, u.prototype.readInt16LE = function(e3, t3) {
          e3 >>>= 0, t3 || O(e3, 2, this.length);
          var r3 = this[e3] | this[e3 + 1] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, u.prototype.readInt16BE = function(e3, t3) {
          e3 >>>= 0, t3 || O(e3, 2, this.length);
          var r3 = this[e3 + 1] | this[e3] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, u.prototype.readInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
        }, u.prototype.readInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
        }, u.prototype.readFloatLE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), i.read(this, e3, true, 23, 4);
        }, u.prototype.readFloatBE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), i.read(this, e3, false, 23, 4);
        }, u.prototype.readDoubleLE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 8, this.length), i.read(this, e3, true, 52, 8);
        }, u.prototype.readDoubleBE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 8, this.length), i.read(this, e3, false, 52, 8);
        }, u.prototype.writeUintLE = u.prototype.writeUIntLE = function(e3, t3, r3, n3) {
          e3 = +e3, t3 >>>= 0, r3 >>>= 0, n3 || P(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var i2 = 1, o2 = 0;
          for (this[t3] = 255 & e3; ++o2 < r3 && (i2 *= 256); ) this[t3 + o2] = e3 / i2 & 255;
          return t3 + r3;
        }, u.prototype.writeUintBE = u.prototype.writeUIntBE = function(e3, t3, r3, n3) {
          e3 = +e3, t3 >>>= 0, r3 >>>= 0, n3 || P(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          var i2 = r3 - 1, o2 = 1;
          for (this[t3 + i2] = 255 & e3; --i2 >= 0 && (o2 *= 256); ) this[t3 + i2] = e3 / o2 & 255;
          return t3 + r3;
        }, u.prototype.writeUint8 = u.prototype.writeUInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 1, 255, 0), this[t3] = 255 & e3, t3 + 1;
        }, u.prototype.writeUint16LE = u.prototype.writeUInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 65535, 0), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, u.prototype.writeUint16BE = u.prototype.writeUInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 65535, 0), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, u.prototype.writeUint32LE = u.prototype.writeUInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 4294967295, 0), this[t3 + 3] = e3 >>> 24, this[t3 + 2] = e3 >>> 16, this[t3 + 1] = e3 >>> 8, this[t3] = 255 & e3, t3 + 4;
        }, u.prototype.writeUint32BE = u.prototype.writeUInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 4294967295, 0), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, u.prototype.writeIntLE = function(e3, t3, r3, n3) {
          if (e3 = +e3, t3 >>>= 0, !n3) {
            var i2 = Math.pow(2, 8 * r3 - 1);
            P(this, e3, t3, r3, i2 - 1, -i2);
          }
          var o2 = 0, s2 = 1, a2 = 0;
          for (this[t3] = 255 & e3; ++o2 < r3 && (s2 *= 256); ) e3 < 0 && 0 === a2 && 0 !== this[t3 + o2 - 1] && (a2 = 1), this[t3 + o2] = (e3 / s2 >> 0) - a2 & 255;
          return t3 + r3;
        }, u.prototype.writeIntBE = function(e3, t3, r3, n3) {
          if (e3 = +e3, t3 >>>= 0, !n3) {
            var i2 = Math.pow(2, 8 * r3 - 1);
            P(this, e3, t3, r3, i2 - 1, -i2);
          }
          var o2 = r3 - 1, s2 = 1, a2 = 0;
          for (this[t3 + o2] = 255 & e3; --o2 >= 0 && (s2 *= 256); ) e3 < 0 && 0 === a2 && 0 !== this[t3 + o2 + 1] && (a2 = 1), this[t3 + o2] = (e3 / s2 >> 0) - a2 & 255;
          return t3 + r3;
        }, u.prototype.writeInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 1, 127, -128), e3 < 0 && (e3 = 255 + e3 + 1), this[t3] = 255 & e3, t3 + 1;
        }, u.prototype.writeInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 32767, -32768), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, u.prototype.writeInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 32767, -32768), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, u.prototype.writeInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 2147483647, -2147483648), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, this[t3 + 2] = e3 >>> 16, this[t3 + 3] = e3 >>> 24, t3 + 4;
        }, u.prototype.writeInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, u.prototype.writeFloatLE = function(e3, t3, r3) {
          return M(this, e3, t3, true, r3);
        }, u.prototype.writeFloatBE = function(e3, t3, r3) {
          return M(this, e3, t3, false, r3);
        }, u.prototype.writeDoubleLE = function(e3, t3, r3) {
          return L(this, e3, t3, true, r3);
        }, u.prototype.writeDoubleBE = function(e3, t3, r3) {
          return L(this, e3, t3, false, r3);
        }, u.prototype.copy = function(e3, t3, r3, n3) {
          if (!u.isBuffer(e3)) throw new TypeError("argument should be a Buffer");
          if (r3 || (r3 = 0), n3 || 0 === n3 || (n3 = this.length), t3 >= e3.length && (t3 = e3.length), t3 || (t3 = 0), n3 > 0 && n3 < r3 && (n3 = r3), n3 === r3) return 0;
          if (0 === e3.length || 0 === this.length) return 0;
          if (t3 < 0) throw new RangeError("targetStart out of bounds");
          if (r3 < 0 || r3 >= this.length) throw new RangeError("Index out of range");
          if (n3 < 0) throw new RangeError("sourceEnd out of bounds");
          n3 > this.length && (n3 = this.length), e3.length - t3 < n3 - r3 && (n3 = e3.length - t3 + r3);
          var i2 = n3 - r3;
          return this === e3 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t3, r3, n3) : Uint8Array.prototype.set.call(e3, this.subarray(r3, n3), t3), i2;
        }, u.prototype.fill = function(e3, t3, r3, n3) {
          if ("string" == typeof e3) {
            if ("string" == typeof t3 ? (n3 = t3, t3 = 0, r3 = this.length) : "string" == typeof r3 && (n3 = r3, r3 = this.length), void 0 !== n3 && "string" != typeof n3) throw new TypeError("encoding must be a string");
            if ("string" == typeof n3 && !u.isEncoding(n3)) throw new TypeError("Unknown encoding: " + n3);
            if (1 === e3.length) {
              var i2 = e3.charCodeAt(0);
              ("utf8" === n3 && i2 < 128 || "latin1" === n3) && (e3 = i2);
            }
          } else "number" == typeof e3 ? e3 &= 255 : "boolean" == typeof e3 && (e3 = Number(e3));
          if (t3 < 0 || this.length < t3 || this.length < r3) throw new RangeError("Out of range index");
          if (r3 <= t3) return this;
          var o2;
          if (t3 >>>= 0, r3 = void 0 === r3 ? this.length : r3 >>> 0, e3 || (e3 = 0), "number" == typeof e3) for (o2 = t3; o2 < r3; ++o2) this[o2] = e3;
          else {
            var s2 = u.isBuffer(e3) ? e3 : u.from(e3, n3), a2 = s2.length;
            if (0 === a2) throw new TypeError('The value "' + e3 + '" is invalid for argument "value"');
            for (o2 = 0; o2 < r3 - t3; ++o2) this[o2 + t3] = s2[o2 % a2];
          }
          return this;
        };
        var U = /[^+/0-9A-Za-z-_]/g;
        function j(e3, t3) {
          var r3;
          t3 = t3 || 1 / 0;
          for (var n3 = e3.length, i2 = null, o2 = [], s2 = 0; s2 < n3; ++s2) {
            if ((r3 = e3.charCodeAt(s2)) > 55295 && r3 < 57344) {
              if (!i2) {
                if (r3 > 56319) {
                  (t3 -= 3) > -1 && o2.push(239, 191, 189);
                  continue;
                }
                if (s2 + 1 === n3) {
                  (t3 -= 3) > -1 && o2.push(239, 191, 189);
                  continue;
                }
                i2 = r3;
                continue;
              }
              if (r3 < 56320) {
                (t3 -= 3) > -1 && o2.push(239, 191, 189), i2 = r3;
                continue;
              }
              r3 = 65536 + (i2 - 55296 << 10 | r3 - 56320);
            } else i2 && (t3 -= 3) > -1 && o2.push(239, 191, 189);
            if (i2 = null, r3 < 128) {
              if ((t3 -= 1) < 0) break;
              o2.push(r3);
            } else if (r3 < 2048) {
              if ((t3 -= 2) < 0) break;
              o2.push(r3 >> 6 | 192, 63 & r3 | 128);
            } else if (r3 < 65536) {
              if ((t3 -= 3) < 0) break;
              o2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            } else {
              if (!(r3 < 1114112)) throw new Error("Invalid code point");
              if ((t3 -= 4) < 0) break;
              o2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            }
          }
          return o2;
        }
        function q(e3) {
          return n2.toByteArray(function(e4) {
            if ((e4 = (e4 = e4.split("=")[0]).trim().replace(U, "")).length < 2) return "";
            for (; e4.length % 4 != 0; ) e4 += "=";
            return e4;
          }(e3));
        }
        function z(e3, t3, r3, n3) {
          for (var i2 = 0; i2 < n3 && !(i2 + r3 >= t3.length || i2 >= e3.length); ++i2) t3[i2 + r3] = e3[i2];
          return i2;
        }
        function D(e3, t3) {
          return e3 instanceof t3 || null != e3 && null != e3.constructor && null != e3.constructor.name && e3.constructor.name === t3.name;
        }
        function F(e3) {
          return e3 != e3;
        }
        var V = function() {
          for (var e3 = "0123456789abcdef", t3 = new Array(256), r3 = 0; r3 < 16; ++r3) for (var n3 = 16 * r3, i2 = 0; i2 < 16; ++i2) t3[n3 + i2] = e3[r3] + e3[i2];
          return t3;
        }();
      }, 8764: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(9742), i = r2(645), o = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
        t2.Buffer = u, t2.SlowBuffer = function(e3) {
          return +e3 != e3 && (e3 = 0), u.alloc(+e3);
        }, t2.INSPECT_MAX_BYTES = 50;
        const s = 2147483647;
        function a(e3) {
          if (e3 > s) throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
          const t3 = new Uint8Array(e3);
          return Object.setPrototypeOf(t3, u.prototype), t3;
        }
        function u(e3, t3, r3) {
          if ("number" == typeof e3) {
            if ("string" == typeof t3) throw new TypeError('The "string" argument must be of type string. Received type number');
            return h(e3);
          }
          return l(e3, t3, r3);
        }
        function l(e3, t3, r3) {
          if ("string" == typeof e3) return function(e4, t4) {
            if ("string" == typeof t4 && "" !== t4 || (t4 = "utf8"), !u.isEncoding(t4)) throw new TypeError("Unknown encoding: " + t4);
            const r4 = 0 | y(e4, t4);
            let n4 = a(r4);
            const i3 = n4.write(e4, t4);
            return i3 !== r4 && (n4 = n4.slice(0, i3)), n4;
          }(e3, t3);
          if (ArrayBuffer.isView(e3)) return function(e4) {
            if (Y(e4, Uint8Array)) {
              const t4 = new Uint8Array(e4);
              return p(t4.buffer, t4.byteOffset, t4.byteLength);
            }
            return f(e4);
          }(e3);
          if (null == e3) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
          if (Y(e3, ArrayBuffer) || e3 && Y(e3.buffer, ArrayBuffer)) return p(e3, t3, r3);
          if ("undefined" != typeof SharedArrayBuffer && (Y(e3, SharedArrayBuffer) || e3 && Y(e3.buffer, SharedArrayBuffer))) return p(e3, t3, r3);
          if ("number" == typeof e3) throw new TypeError('The "value" argument must not be of type number. Received type number');
          const n3 = e3.valueOf && e3.valueOf();
          if (null != n3 && n3 !== e3) return u.from(n3, t3, r3);
          const i2 = function(e4) {
            if (u.isBuffer(e4)) {
              const t4 = 0 | d(e4.length), r4 = a(t4);
              return 0 === r4.length || e4.copy(r4, 0, 0, t4), r4;
            }
            return void 0 !== e4.length ? "number" != typeof e4.length || G(e4.length) ? a(0) : f(e4) : "Buffer" === e4.type && Array.isArray(e4.data) ? f(e4.data) : void 0;
          }(e3);
          if (i2) return i2;
          if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e3[Symbol.toPrimitive]) return u.from(e3[Symbol.toPrimitive]("string"), t3, r3);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e3);
        }
        function c(e3) {
          if ("number" != typeof e3) throw new TypeError('"size" argument must be of type number');
          if (e3 < 0) throw new RangeError('The value "' + e3 + '" is invalid for option "size"');
        }
        function h(e3) {
          return c(e3), a(e3 < 0 ? 0 : 0 | d(e3));
        }
        function f(e3) {
          const t3 = e3.length < 0 ? 0 : 0 | d(e3.length), r3 = a(t3);
          for (let n3 = 0; n3 < t3; n3 += 1) r3[n3] = 255 & e3[n3];
          return r3;
        }
        function p(e3, t3, r3) {
          if (t3 < 0 || e3.byteLength < t3) throw new RangeError('"offset" is outside of buffer bounds');
          if (e3.byteLength < t3 + (r3 || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let n3;
          return n3 = void 0 === t3 && void 0 === r3 ? new Uint8Array(e3) : void 0 === r3 ? new Uint8Array(e3, t3) : new Uint8Array(e3, t3, r3), Object.setPrototypeOf(n3, u.prototype), n3;
        }
        function d(e3) {
          if (e3 >= s) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
          return 0 | e3;
        }
        function y(e3, t3) {
          if (u.isBuffer(e3)) return e3.length;
          if (ArrayBuffer.isView(e3) || Y(e3, ArrayBuffer)) return e3.byteLength;
          if ("string" != typeof e3) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e3);
          const r3 = e3.length, n3 = arguments.length > 2 && true === arguments[2];
          if (!n3 && 0 === r3) return 0;
          let i2 = false;
          for (; ; ) switch (t3) {
            case "ascii":
            case "latin1":
            case "binary":
              return r3;
            case "utf8":
            case "utf-8":
              return K(e3).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r3;
            case "hex":
              return r3 >>> 1;
            case "base64":
              return $(e3).length;
            default:
              if (i2) return n3 ? -1 : K(e3).length;
              t3 = ("" + t3).toLowerCase(), i2 = true;
          }
        }
        function g(e3, t3, r3) {
          let n3 = false;
          if ((void 0 === t3 || t3 < 0) && (t3 = 0), t3 > this.length) return "";
          if ((void 0 === r3 || r3 > this.length) && (r3 = this.length), r3 <= 0) return "";
          if ((r3 >>>= 0) <= (t3 >>>= 0)) return "";
          for (e3 || (e3 = "utf8"); ; ) switch (e3) {
            case "hex":
              return B(this, t3, r3);
            case "utf8":
            case "utf-8":
              return T(this, t3, r3);
            case "ascii":
              return I(this, t3, r3);
            case "latin1":
            case "binary":
              return x(this, t3, r3);
            case "base64":
              return C(this, t3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return R(this, t3, r3);
            default:
              if (n3) throw new TypeError("Unknown encoding: " + e3);
              e3 = (e3 + "").toLowerCase(), n3 = true;
          }
        }
        function b(e3, t3, r3) {
          const n3 = e3[t3];
          e3[t3] = e3[r3], e3[r3] = n3;
        }
        function m(e3, t3, r3, n3, i2) {
          if (0 === e3.length) return -1;
          if ("string" == typeof r3 ? (n3 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), G(r3 = +r3) && (r3 = i2 ? 0 : e3.length - 1), r3 < 0 && (r3 = e3.length + r3), r3 >= e3.length) {
            if (i2) return -1;
            r3 = e3.length - 1;
          } else if (r3 < 0) {
            if (!i2) return -1;
            r3 = 0;
          }
          if ("string" == typeof t3 && (t3 = u.from(t3, n3)), u.isBuffer(t3)) return 0 === t3.length ? -1 : v(e3, t3, r3, n3, i2);
          if ("number" == typeof t3) return t3 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? i2 ? Uint8Array.prototype.indexOf.call(e3, t3, r3) : Uint8Array.prototype.lastIndexOf.call(e3, t3, r3) : v(e3, [t3], r3, n3, i2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function v(e3, t3, r3, n3, i2) {
          let o2, s2 = 1, a2 = e3.length, u2 = t3.length;
          if (void 0 !== n3 && ("ucs2" === (n3 = String(n3).toLowerCase()) || "ucs-2" === n3 || "utf16le" === n3 || "utf-16le" === n3)) {
            if (e3.length < 2 || t3.length < 2) return -1;
            s2 = 2, a2 /= 2, u2 /= 2, r3 /= 2;
          }
          function l2(e4, t4) {
            return 1 === s2 ? e4[t4] : e4.readUInt16BE(t4 * s2);
          }
          if (i2) {
            let n4 = -1;
            for (o2 = r3; o2 < a2; o2++) if (l2(e3, o2) === l2(t3, -1 === n4 ? 0 : o2 - n4)) {
              if (-1 === n4 && (n4 = o2), o2 - n4 + 1 === u2) return n4 * s2;
            } else -1 !== n4 && (o2 -= o2 - n4), n4 = -1;
          } else for (r3 + u2 > a2 && (r3 = a2 - u2), o2 = r3; o2 >= 0; o2--) {
            let r4 = true;
            for (let n4 = 0; n4 < u2; n4++) if (l2(e3, o2 + n4) !== l2(t3, n4)) {
              r4 = false;
              break;
            }
            if (r4) return o2;
          }
          return -1;
        }
        function w(e3, t3, r3, n3) {
          r3 = Number(r3) || 0;
          const i2 = e3.length - r3;
          n3 ? (n3 = Number(n3)) > i2 && (n3 = i2) : n3 = i2;
          const o2 = t3.length;
          let s2;
          for (n3 > o2 / 2 && (n3 = o2 / 2), s2 = 0; s2 < n3; ++s2) {
            const n4 = parseInt(t3.substr(2 * s2, 2), 16);
            if (G(n4)) return s2;
            e3[r3 + s2] = n4;
          }
          return s2;
        }
        function _(e3, t3, r3, n3) {
          return Q(K(t3, e3.length - r3), e3, r3, n3);
        }
        function E(e3, t3, r3, n3) {
          return Q(function(e4) {
            const t4 = [];
            for (let r4 = 0; r4 < e4.length; ++r4) t4.push(255 & e4.charCodeAt(r4));
            return t4;
          }(t3), e3, r3, n3);
        }
        function k(e3, t3, r3, n3) {
          return Q($(t3), e3, r3, n3);
        }
        function S(e3, t3, r3, n3) {
          return Q(function(e4, t4) {
            let r4, n4, i2;
            const o2 = [];
            for (let s2 = 0; s2 < e4.length && !((t4 -= 2) < 0); ++s2) r4 = e4.charCodeAt(s2), n4 = r4 >> 8, i2 = r4 % 256, o2.push(i2), o2.push(n4);
            return o2;
          }(t3, e3.length - r3), e3, r3, n3);
        }
        function C(e3, t3, r3) {
          return 0 === t3 && r3 === e3.length ? n2.fromByteArray(e3) : n2.fromByteArray(e3.slice(t3, r3));
        }
        function T(e3, t3, r3) {
          r3 = Math.min(e3.length, r3);
          const n3 = [];
          let i2 = t3;
          for (; i2 < r3; ) {
            const t4 = e3[i2];
            let o2 = null, s2 = t4 > 239 ? 4 : t4 > 223 ? 3 : t4 > 191 ? 2 : 1;
            if (i2 + s2 <= r3) {
              let r4, n4, a2, u2;
              switch (s2) {
                case 1:
                  t4 < 128 && (o2 = t4);
                  break;
                case 2:
                  r4 = e3[i2 + 1], 128 == (192 & r4) && (u2 = (31 & t4) << 6 | 63 & r4, u2 > 127 && (o2 = u2));
                  break;
                case 3:
                  r4 = e3[i2 + 1], n4 = e3[i2 + 2], 128 == (192 & r4) && 128 == (192 & n4) && (u2 = (15 & t4) << 12 | (63 & r4) << 6 | 63 & n4, u2 > 2047 && (u2 < 55296 || u2 > 57343) && (o2 = u2));
                  break;
                case 4:
                  r4 = e3[i2 + 1], n4 = e3[i2 + 2], a2 = e3[i2 + 3], 128 == (192 & r4) && 128 == (192 & n4) && 128 == (192 & a2) && (u2 = (15 & t4) << 18 | (63 & r4) << 12 | (63 & n4) << 6 | 63 & a2, u2 > 65535 && u2 < 1114112 && (o2 = u2));
              }
            }
            null === o2 ? (o2 = 65533, s2 = 1) : o2 > 65535 && (o2 -= 65536, n3.push(o2 >>> 10 & 1023 | 55296), o2 = 56320 | 1023 & o2), n3.push(o2), i2 += s2;
          }
          return function(e4) {
            const t4 = e4.length;
            if (t4 <= A) return String.fromCharCode.apply(String, e4);
            let r4 = "", n4 = 0;
            for (; n4 < t4; ) r4 += String.fromCharCode.apply(String, e4.slice(n4, n4 += A));
            return r4;
          }(n3);
        }
        t2.kMaxLength = s, u.TYPED_ARRAY_SUPPORT = function() {
          try {
            const e3 = new Uint8Array(1), t3 = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(t3, Uint8Array.prototype), Object.setPrototypeOf(e3, t3), 42 === e3.foo();
          } catch (e3) {
            return false;
          }
        }(), u.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u.prototype, "parent", { enumerable: true, get: function() {
          if (u.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(u.prototype, "offset", { enumerable: true, get: function() {
          if (u.isBuffer(this)) return this.byteOffset;
        } }), u.poolSize = 8192, u.from = function(e3, t3, r3) {
          return l(e3, t3, r3);
        }, Object.setPrototypeOf(u.prototype, Uint8Array.prototype), Object.setPrototypeOf(u, Uint8Array), u.alloc = function(e3, t3, r3) {
          return function(e4, t4, r4) {
            return c(e4), e4 <= 0 ? a(e4) : void 0 !== t4 ? "string" == typeof r4 ? a(e4).fill(t4, r4) : a(e4).fill(t4) : a(e4);
          }(e3, t3, r3);
        }, u.allocUnsafe = function(e3) {
          return h(e3);
        }, u.allocUnsafeSlow = function(e3) {
          return h(e3);
        }, u.isBuffer = function(e3) {
          return null != e3 && true === e3._isBuffer && e3 !== u.prototype;
        }, u.compare = function(e3, t3) {
          if (Y(e3, Uint8Array) && (e3 = u.from(e3, e3.offset, e3.byteLength)), Y(t3, Uint8Array) && (t3 = u.from(t3, t3.offset, t3.byteLength)), !u.isBuffer(e3) || !u.isBuffer(t3)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e3 === t3) return 0;
          let r3 = e3.length, n3 = t3.length;
          for (let i2 = 0, o2 = Math.min(r3, n3); i2 < o2; ++i2) if (e3[i2] !== t3[i2]) {
            r3 = e3[i2], n3 = t3[i2];
            break;
          }
          return r3 < n3 ? -1 : n3 < r3 ? 1 : 0;
        }, u.isEncoding = function(e3) {
          switch (String(e3).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, u.concat = function(e3, t3) {
          if (!Array.isArray(e3)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e3.length) return u.alloc(0);
          let r3;
          if (void 0 === t3) for (t3 = 0, r3 = 0; r3 < e3.length; ++r3) t3 += e3[r3].length;
          const n3 = u.allocUnsafe(t3);
          let i2 = 0;
          for (r3 = 0; r3 < e3.length; ++r3) {
            let t4 = e3[r3];
            if (Y(t4, Uint8Array)) i2 + t4.length > n3.length ? (u.isBuffer(t4) || (t4 = u.from(t4)), t4.copy(n3, i2)) : Uint8Array.prototype.set.call(n3, t4, i2);
            else {
              if (!u.isBuffer(t4)) throw new TypeError('"list" argument must be an Array of Buffers');
              t4.copy(n3, i2);
            }
            i2 += t4.length;
          }
          return n3;
        }, u.byteLength = y, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
          const e3 = this.length;
          if (e3 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let t3 = 0; t3 < e3; t3 += 2) b(this, t3, t3 + 1);
          return this;
        }, u.prototype.swap32 = function() {
          const e3 = this.length;
          if (e3 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let t3 = 0; t3 < e3; t3 += 4) b(this, t3, t3 + 3), b(this, t3 + 1, t3 + 2);
          return this;
        }, u.prototype.swap64 = function() {
          const e3 = this.length;
          if (e3 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let t3 = 0; t3 < e3; t3 += 8) b(this, t3, t3 + 7), b(this, t3 + 1, t3 + 6), b(this, t3 + 2, t3 + 5), b(this, t3 + 3, t3 + 4);
          return this;
        }, u.prototype.toString = function() {
          const e3 = this.length;
          return 0 === e3 ? "" : 0 === arguments.length ? T(this, 0, e3) : g.apply(this, arguments);
        }, u.prototype.toLocaleString = u.prototype.toString, u.prototype.equals = function(e3) {
          if (!u.isBuffer(e3)) throw new TypeError("Argument must be a Buffer");
          return this === e3 || 0 === u.compare(this, e3);
        }, u.prototype.inspect = function() {
          let e3 = "";
          const r3 = t2.INSPECT_MAX_BYTES;
          return e3 = this.toString("hex", 0, r3).replace(/(.{2})/g, "$1 ").trim(), this.length > r3 && (e3 += " ... "), "<Buffer " + e3 + ">";
        }, o && (u.prototype[o] = u.prototype.inspect), u.prototype.compare = function(e3, t3, r3, n3, i2) {
          if (Y(e3, Uint8Array) && (e3 = u.from(e3, e3.offset, e3.byteLength)), !u.isBuffer(e3)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e3);
          if (void 0 === t3 && (t3 = 0), void 0 === r3 && (r3 = e3 ? e3.length : 0), void 0 === n3 && (n3 = 0), void 0 === i2 && (i2 = this.length), t3 < 0 || r3 > e3.length || n3 < 0 || i2 > this.length) throw new RangeError("out of range index");
          if (n3 >= i2 && t3 >= r3) return 0;
          if (n3 >= i2) return -1;
          if (t3 >= r3) return 1;
          if (this === e3) return 0;
          let o2 = (i2 >>>= 0) - (n3 >>>= 0), s2 = (r3 >>>= 0) - (t3 >>>= 0);
          const a2 = Math.min(o2, s2), l2 = this.slice(n3, i2), c2 = e3.slice(t3, r3);
          for (let e4 = 0; e4 < a2; ++e4) if (l2[e4] !== c2[e4]) {
            o2 = l2[e4], s2 = c2[e4];
            break;
          }
          return o2 < s2 ? -1 : s2 < o2 ? 1 : 0;
        }, u.prototype.includes = function(e3, t3, r3) {
          return -1 !== this.indexOf(e3, t3, r3);
        }, u.prototype.indexOf = function(e3, t3, r3) {
          return m(this, e3, t3, r3, true);
        }, u.prototype.lastIndexOf = function(e3, t3, r3) {
          return m(this, e3, t3, r3, false);
        }, u.prototype.write = function(e3, t3, r3, n3) {
          if (void 0 === t3) n3 = "utf8", r3 = this.length, t3 = 0;
          else if (void 0 === r3 && "string" == typeof t3) n3 = t3, r3 = this.length, t3 = 0;
          else {
            if (!isFinite(t3)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, void 0 === n3 && (n3 = "utf8")) : (n3 = r3, r3 = void 0);
          }
          const i2 = this.length - t3;
          if ((void 0 === r3 || r3 > i2) && (r3 = i2), e3.length > 0 && (r3 < 0 || t3 < 0) || t3 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          n3 || (n3 = "utf8");
          let o2 = false;
          for (; ; ) switch (n3) {
            case "hex":
              return w(this, e3, t3, r3);
            case "utf8":
            case "utf-8":
              return _(this, e3, t3, r3);
            case "ascii":
            case "latin1":
            case "binary":
              return E(this, e3, t3, r3);
            case "base64":
              return k(this, e3, t3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return S(this, e3, t3, r3);
            default:
              if (o2) throw new TypeError("Unknown encoding: " + n3);
              n3 = ("" + n3).toLowerCase(), o2 = true;
          }
        }, u.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const A = 4096;
        function I(e3, t3, r3) {
          let n3 = "";
          r3 = Math.min(e3.length, r3);
          for (let i2 = t3; i2 < r3; ++i2) n3 += String.fromCharCode(127 & e3[i2]);
          return n3;
        }
        function x(e3, t3, r3) {
          let n3 = "";
          r3 = Math.min(e3.length, r3);
          for (let i2 = t3; i2 < r3; ++i2) n3 += String.fromCharCode(e3[i2]);
          return n3;
        }
        function B(e3, t3, r3) {
          const n3 = e3.length;
          (!t3 || t3 < 0) && (t3 = 0), (!r3 || r3 < 0 || r3 > n3) && (r3 = n3);
          let i2 = "";
          for (let n4 = t3; n4 < r3; ++n4) i2 += Z[e3[n4]];
          return i2;
        }
        function R(e3, t3, r3) {
          const n3 = e3.slice(t3, r3);
          let i2 = "";
          for (let e4 = 0; e4 < n3.length - 1; e4 += 2) i2 += String.fromCharCode(n3[e4] + 256 * n3[e4 + 1]);
          return i2;
        }
        function O(e3, t3, r3) {
          if (e3 % 1 != 0 || e3 < 0) throw new RangeError("offset is not uint");
          if (e3 + t3 > r3) throw new RangeError("Trying to access beyond buffer length");
        }
        function P(e3, t3, r3, n3, i2, o2) {
          if (!u.isBuffer(e3)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t3 > i2 || t3 < o2) throw new RangeError('"value" argument is out of bounds');
          if (r3 + n3 > e3.length) throw new RangeError("Index out of range");
        }
        function N(e3, t3, r3, n3, i2) {
          F(t3, n3, i2, e3, r3, 7);
          let o2 = Number(t3 & BigInt(4294967295));
          e3[r3++] = o2, o2 >>= 8, e3[r3++] = o2, o2 >>= 8, e3[r3++] = o2, o2 >>= 8, e3[r3++] = o2;
          let s2 = Number(t3 >> BigInt(32) & BigInt(4294967295));
          return e3[r3++] = s2, s2 >>= 8, e3[r3++] = s2, s2 >>= 8, e3[r3++] = s2, s2 >>= 8, e3[r3++] = s2, r3;
        }
        function M(e3, t3, r3, n3, i2) {
          F(t3, n3, i2, e3, r3, 7);
          let o2 = Number(t3 & BigInt(4294967295));
          e3[r3 + 7] = o2, o2 >>= 8, e3[r3 + 6] = o2, o2 >>= 8, e3[r3 + 5] = o2, o2 >>= 8, e3[r3 + 4] = o2;
          let s2 = Number(t3 >> BigInt(32) & BigInt(4294967295));
          return e3[r3 + 3] = s2, s2 >>= 8, e3[r3 + 2] = s2, s2 >>= 8, e3[r3 + 1] = s2, s2 >>= 8, e3[r3] = s2, r3 + 8;
        }
        function L(e3, t3, r3, n3, i2, o2) {
          if (r3 + n3 > e3.length) throw new RangeError("Index out of range");
          if (r3 < 0) throw new RangeError("Index out of range");
        }
        function U(e3, t3, r3, n3, o2) {
          return t3 = +t3, r3 >>>= 0, o2 || L(e3, 0, r3, 4), i.write(e3, t3, r3, n3, 23, 4), r3 + 4;
        }
        function j(e3, t3, r3, n3, o2) {
          return t3 = +t3, r3 >>>= 0, o2 || L(e3, 0, r3, 8), i.write(e3, t3, r3, n3, 52, 8), r3 + 8;
        }
        u.prototype.slice = function(e3, t3) {
          const r3 = this.length;
          (e3 = ~~e3) < 0 ? (e3 += r3) < 0 && (e3 = 0) : e3 > r3 && (e3 = r3), (t3 = void 0 === t3 ? r3 : ~~t3) < 0 ? (t3 += r3) < 0 && (t3 = 0) : t3 > r3 && (t3 = r3), t3 < e3 && (t3 = e3);
          const n3 = this.subarray(e3, t3);
          return Object.setPrototypeOf(n3, u.prototype), n3;
        }, u.prototype.readUintLE = u.prototype.readUIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          let n3 = this[e3], i2 = 1, o2 = 0;
          for (; ++o2 < t3 && (i2 *= 256); ) n3 += this[e3 + o2] * i2;
          return n3;
        }, u.prototype.readUintBE = u.prototype.readUIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          let n3 = this[e3 + --t3], i2 = 1;
          for (; t3 > 0 && (i2 *= 256); ) n3 += this[e3 + --t3] * i2;
          return n3;
        }, u.prototype.readUint8 = u.prototype.readUInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 1, this.length), this[e3];
        }, u.prototype.readUint16LE = u.prototype.readUInt16LE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 2, this.length), this[e3] | this[e3 + 1] << 8;
        }, u.prototype.readUint16BE = u.prototype.readUInt16BE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 2, this.length), this[e3] << 8 | this[e3 + 1];
        }, u.prototype.readUint32LE = u.prototype.readUInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), (this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16) + 16777216 * this[e3 + 3];
        }, u.prototype.readUint32BE = u.prototype.readUInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), 16777216 * this[e3] + (this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3]);
        }, u.prototype.readBigUInt64LE = J(function(e3) {
          V(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || W(e3, this.length - 8);
          const n3 = t3 + 256 * this[++e3] + 65536 * this[++e3] + this[++e3] * 2 ** 24, i2 = this[++e3] + 256 * this[++e3] + 65536 * this[++e3] + r3 * 2 ** 24;
          return BigInt(n3) + (BigInt(i2) << BigInt(32));
        }), u.prototype.readBigUInt64BE = J(function(e3) {
          V(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || W(e3, this.length - 8);
          const n3 = t3 * 2 ** 24 + 65536 * this[++e3] + 256 * this[++e3] + this[++e3], i2 = this[++e3] * 2 ** 24 + 65536 * this[++e3] + 256 * this[++e3] + r3;
          return (BigInt(n3) << BigInt(32)) + BigInt(i2);
        }), u.prototype.readIntLE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          let n3 = this[e3], i2 = 1, o2 = 0;
          for (; ++o2 < t3 && (i2 *= 256); ) n3 += this[e3 + o2] * i2;
          return i2 *= 128, n3 >= i2 && (n3 -= Math.pow(2, 8 * t3)), n3;
        }, u.prototype.readIntBE = function(e3, t3, r3) {
          e3 >>>= 0, t3 >>>= 0, r3 || O(e3, t3, this.length);
          let n3 = t3, i2 = 1, o2 = this[e3 + --n3];
          for (; n3 > 0 && (i2 *= 256); ) o2 += this[e3 + --n3] * i2;
          return i2 *= 128, o2 >= i2 && (o2 -= Math.pow(2, 8 * t3)), o2;
        }, u.prototype.readInt8 = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 1, this.length), 128 & this[e3] ? -1 * (255 - this[e3] + 1) : this[e3];
        }, u.prototype.readInt16LE = function(e3, t3) {
          e3 >>>= 0, t3 || O(e3, 2, this.length);
          const r3 = this[e3] | this[e3 + 1] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, u.prototype.readInt16BE = function(e3, t3) {
          e3 >>>= 0, t3 || O(e3, 2, this.length);
          const r3 = this[e3 + 1] | this[e3] << 8;
          return 32768 & r3 ? 4294901760 | r3 : r3;
        }, u.prototype.readInt32LE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), this[e3] | this[e3 + 1] << 8 | this[e3 + 2] << 16 | this[e3 + 3] << 24;
        }, u.prototype.readInt32BE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), this[e3] << 24 | this[e3 + 1] << 16 | this[e3 + 2] << 8 | this[e3 + 3];
        }, u.prototype.readBigInt64LE = J(function(e3) {
          V(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || W(e3, this.length - 8);
          const n3 = this[e3 + 4] + 256 * this[e3 + 5] + 65536 * this[e3 + 6] + (r3 << 24);
          return (BigInt(n3) << BigInt(32)) + BigInt(t3 + 256 * this[++e3] + 65536 * this[++e3] + this[++e3] * 2 ** 24);
        }), u.prototype.readBigInt64BE = J(function(e3) {
          V(e3 >>>= 0, "offset");
          const t3 = this[e3], r3 = this[e3 + 7];
          void 0 !== t3 && void 0 !== r3 || W(e3, this.length - 8);
          const n3 = (t3 << 24) + 65536 * this[++e3] + 256 * this[++e3] + this[++e3];
          return (BigInt(n3) << BigInt(32)) + BigInt(this[++e3] * 2 ** 24 + 65536 * this[++e3] + 256 * this[++e3] + r3);
        }), u.prototype.readFloatLE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), i.read(this, e3, true, 23, 4);
        }, u.prototype.readFloatBE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 4, this.length), i.read(this, e3, false, 23, 4);
        }, u.prototype.readDoubleLE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 8, this.length), i.read(this, e3, true, 52, 8);
        }, u.prototype.readDoubleBE = function(e3, t3) {
          return e3 >>>= 0, t3 || O(e3, 8, this.length), i.read(this, e3, false, 52, 8);
        }, u.prototype.writeUintLE = u.prototype.writeUIntLE = function(e3, t3, r3, n3) {
          e3 = +e3, t3 >>>= 0, r3 >>>= 0, n3 || P(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          let i2 = 1, o2 = 0;
          for (this[t3] = 255 & e3; ++o2 < r3 && (i2 *= 256); ) this[t3 + o2] = e3 / i2 & 255;
          return t3 + r3;
        }, u.prototype.writeUintBE = u.prototype.writeUIntBE = function(e3, t3, r3, n3) {
          e3 = +e3, t3 >>>= 0, r3 >>>= 0, n3 || P(this, e3, t3, r3, Math.pow(2, 8 * r3) - 1, 0);
          let i2 = r3 - 1, o2 = 1;
          for (this[t3 + i2] = 255 & e3; --i2 >= 0 && (o2 *= 256); ) this[t3 + i2] = e3 / o2 & 255;
          return t3 + r3;
        }, u.prototype.writeUint8 = u.prototype.writeUInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 1, 255, 0), this[t3] = 255 & e3, t3 + 1;
        }, u.prototype.writeUint16LE = u.prototype.writeUInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 65535, 0), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, u.prototype.writeUint16BE = u.prototype.writeUInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 65535, 0), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, u.prototype.writeUint32LE = u.prototype.writeUInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 4294967295, 0), this[t3 + 3] = e3 >>> 24, this[t3 + 2] = e3 >>> 16, this[t3 + 1] = e3 >>> 8, this[t3] = 255 & e3, t3 + 4;
        }, u.prototype.writeUint32BE = u.prototype.writeUInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 4294967295, 0), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, u.prototype.writeBigUInt64LE = J(function(e3, t3 = 0) {
          return N(this, e3, t3, BigInt(0), BigInt("0xffffffffffffffff"));
        }), u.prototype.writeBigUInt64BE = J(function(e3, t3 = 0) {
          return M(this, e3, t3, BigInt(0), BigInt("0xffffffffffffffff"));
        }), u.prototype.writeIntLE = function(e3, t3, r3, n3) {
          if (e3 = +e3, t3 >>>= 0, !n3) {
            const n4 = Math.pow(2, 8 * r3 - 1);
            P(this, e3, t3, r3, n4 - 1, -n4);
          }
          let i2 = 0, o2 = 1, s2 = 0;
          for (this[t3] = 255 & e3; ++i2 < r3 && (o2 *= 256); ) e3 < 0 && 0 === s2 && 0 !== this[t3 + i2 - 1] && (s2 = 1), this[t3 + i2] = (e3 / o2 >> 0) - s2 & 255;
          return t3 + r3;
        }, u.prototype.writeIntBE = function(e3, t3, r3, n3) {
          if (e3 = +e3, t3 >>>= 0, !n3) {
            const n4 = Math.pow(2, 8 * r3 - 1);
            P(this, e3, t3, r3, n4 - 1, -n4);
          }
          let i2 = r3 - 1, o2 = 1, s2 = 0;
          for (this[t3 + i2] = 255 & e3; --i2 >= 0 && (o2 *= 256); ) e3 < 0 && 0 === s2 && 0 !== this[t3 + i2 + 1] && (s2 = 1), this[t3 + i2] = (e3 / o2 >> 0) - s2 & 255;
          return t3 + r3;
        }, u.prototype.writeInt8 = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 1, 127, -128), e3 < 0 && (e3 = 255 + e3 + 1), this[t3] = 255 & e3, t3 + 1;
        }, u.prototype.writeInt16LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 32767, -32768), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, t3 + 2;
        }, u.prototype.writeInt16BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 2, 32767, -32768), this[t3] = e3 >>> 8, this[t3 + 1] = 255 & e3, t3 + 2;
        }, u.prototype.writeInt32LE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 2147483647, -2147483648), this[t3] = 255 & e3, this[t3 + 1] = e3 >>> 8, this[t3 + 2] = e3 >>> 16, this[t3 + 3] = e3 >>> 24, t3 + 4;
        }, u.prototype.writeInt32BE = function(e3, t3, r3) {
          return e3 = +e3, t3 >>>= 0, r3 || P(this, e3, t3, 4, 2147483647, -2147483648), e3 < 0 && (e3 = 4294967295 + e3 + 1), this[t3] = e3 >>> 24, this[t3 + 1] = e3 >>> 16, this[t3 + 2] = e3 >>> 8, this[t3 + 3] = 255 & e3, t3 + 4;
        }, u.prototype.writeBigInt64LE = J(function(e3, t3 = 0) {
          return N(this, e3, t3, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), u.prototype.writeBigInt64BE = J(function(e3, t3 = 0) {
          return M(this, e3, t3, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), u.prototype.writeFloatLE = function(e3, t3, r3) {
          return U(this, e3, t3, true, r3);
        }, u.prototype.writeFloatBE = function(e3, t3, r3) {
          return U(this, e3, t3, false, r3);
        }, u.prototype.writeDoubleLE = function(e3, t3, r3) {
          return j(this, e3, t3, true, r3);
        }, u.prototype.writeDoubleBE = function(e3, t3, r3) {
          return j(this, e3, t3, false, r3);
        }, u.prototype.copy = function(e3, t3, r3, n3) {
          if (!u.isBuffer(e3)) throw new TypeError("argument should be a Buffer");
          if (r3 || (r3 = 0), n3 || 0 === n3 || (n3 = this.length), t3 >= e3.length && (t3 = e3.length), t3 || (t3 = 0), n3 > 0 && n3 < r3 && (n3 = r3), n3 === r3) return 0;
          if (0 === e3.length || 0 === this.length) return 0;
          if (t3 < 0) throw new RangeError("targetStart out of bounds");
          if (r3 < 0 || r3 >= this.length) throw new RangeError("Index out of range");
          if (n3 < 0) throw new RangeError("sourceEnd out of bounds");
          n3 > this.length && (n3 = this.length), e3.length - t3 < n3 - r3 && (n3 = e3.length - t3 + r3);
          const i2 = n3 - r3;
          return this === e3 && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t3, r3, n3) : Uint8Array.prototype.set.call(e3, this.subarray(r3, n3), t3), i2;
        }, u.prototype.fill = function(e3, t3, r3, n3) {
          if ("string" == typeof e3) {
            if ("string" == typeof t3 ? (n3 = t3, t3 = 0, r3 = this.length) : "string" == typeof r3 && (n3 = r3, r3 = this.length), void 0 !== n3 && "string" != typeof n3) throw new TypeError("encoding must be a string");
            if ("string" == typeof n3 && !u.isEncoding(n3)) throw new TypeError("Unknown encoding: " + n3);
            if (1 === e3.length) {
              const t4 = e3.charCodeAt(0);
              ("utf8" === n3 && t4 < 128 || "latin1" === n3) && (e3 = t4);
            }
          } else "number" == typeof e3 ? e3 &= 255 : "boolean" == typeof e3 && (e3 = Number(e3));
          if (t3 < 0 || this.length < t3 || this.length < r3) throw new RangeError("Out of range index");
          if (r3 <= t3) return this;
          let i2;
          if (t3 >>>= 0, r3 = void 0 === r3 ? this.length : r3 >>> 0, e3 || (e3 = 0), "number" == typeof e3) for (i2 = t3; i2 < r3; ++i2) this[i2] = e3;
          else {
            const o2 = u.isBuffer(e3) ? e3 : u.from(e3, n3), s2 = o2.length;
            if (0 === s2) throw new TypeError('The value "' + e3 + '" is invalid for argument "value"');
            for (i2 = 0; i2 < r3 - t3; ++i2) this[i2 + t3] = o2[i2 % s2];
          }
          return this;
        };
        const q = {};
        function z(e3, t3, r3) {
          q[e3] = class extends r3 {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: t3.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e3}]`, this.stack, delete this.name;
            }
            get code() {
              return e3;
            }
            set code(e4) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: e4, writable: true });
            }
            toString() {
              return `${this.name} [${e3}]: ${this.message}`;
            }
          };
        }
        function D(e3) {
          let t3 = "", r3 = e3.length;
          const n3 = "-" === e3[0] ? 1 : 0;
          for (; r3 >= n3 + 4; r3 -= 3) t3 = `_${e3.slice(r3 - 3, r3)}${t3}`;
          return `${e3.slice(0, r3)}${t3}`;
        }
        function F(e3, t3, r3, n3, i2, o2) {
          if (e3 > r3 || e3 < t3) {
            const n4 = "bigint" == typeof t3 ? "n" : "";
            let i3;
            throw i3 = o2 > 3 ? 0 === t3 || t3 === BigInt(0) ? `>= 0${n4} and < 2${n4} ** ${8 * (o2 + 1)}${n4}` : `>= -(2${n4} ** ${8 * (o2 + 1) - 1}${n4}) and < 2 ** ${8 * (o2 + 1) - 1}${n4}` : `>= ${t3}${n4} and <= ${r3}${n4}`, new q.ERR_OUT_OF_RANGE("value", i3, e3);
          }
          !function(e4, t4, r4) {
            V(t4, "offset"), void 0 !== e4[t4] && void 0 !== e4[t4 + r4] || W(t4, e4.length - (r4 + 1));
          }(n3, i2, o2);
        }
        function V(e3, t3) {
          if ("number" != typeof e3) throw new q.ERR_INVALID_ARG_TYPE(t3, "number", e3);
        }
        function W(e3, t3, r3) {
          if (Math.floor(e3) !== e3) throw V(e3, r3), new q.ERR_OUT_OF_RANGE(r3 || "offset", "an integer", e3);
          if (t3 < 0) throw new q.ERR_BUFFER_OUT_OF_BOUNDS();
          throw new q.ERR_OUT_OF_RANGE(r3 || "offset", `>= ${r3 ? 1 : 0} and <= ${t3}`, e3);
        }
        z("ERR_BUFFER_OUT_OF_BOUNDS", function(e3) {
          return e3 ? `${e3} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }, RangeError), z("ERR_INVALID_ARG_TYPE", function(e3, t3) {
          return `The "${e3}" argument must be of type number. Received type ${typeof t3}`;
        }, TypeError), z("ERR_OUT_OF_RANGE", function(e3, t3, r3) {
          let n3 = `The value of "${e3}" is out of range.`, i2 = r3;
          return Number.isInteger(r3) && Math.abs(r3) > 2 ** 32 ? i2 = D(String(r3)) : "bigint" == typeof r3 && (i2 = String(r3), (r3 > BigInt(2) ** BigInt(32) || r3 < -(BigInt(2) ** BigInt(32))) && (i2 = D(i2)), i2 += "n"), n3 += ` It must be ${t3}. Received ${i2}`, n3;
        }, RangeError);
        const H = /[^+/0-9A-Za-z-_]/g;
        function K(e3, t3) {
          let r3;
          t3 = t3 || 1 / 0;
          const n3 = e3.length;
          let i2 = null;
          const o2 = [];
          for (let s2 = 0; s2 < n3; ++s2) {
            if (r3 = e3.charCodeAt(s2), r3 > 55295 && r3 < 57344) {
              if (!i2) {
                if (r3 > 56319) {
                  (t3 -= 3) > -1 && o2.push(239, 191, 189);
                  continue;
                }
                if (s2 + 1 === n3) {
                  (t3 -= 3) > -1 && o2.push(239, 191, 189);
                  continue;
                }
                i2 = r3;
                continue;
              }
              if (r3 < 56320) {
                (t3 -= 3) > -1 && o2.push(239, 191, 189), i2 = r3;
                continue;
              }
              r3 = 65536 + (i2 - 55296 << 10 | r3 - 56320);
            } else i2 && (t3 -= 3) > -1 && o2.push(239, 191, 189);
            if (i2 = null, r3 < 128) {
              if ((t3 -= 1) < 0) break;
              o2.push(r3);
            } else if (r3 < 2048) {
              if ((t3 -= 2) < 0) break;
              o2.push(r3 >> 6 | 192, 63 & r3 | 128);
            } else if (r3 < 65536) {
              if ((t3 -= 3) < 0) break;
              o2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            } else {
              if (!(r3 < 1114112)) throw new Error("Invalid code point");
              if ((t3 -= 4) < 0) break;
              o2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
            }
          }
          return o2;
        }
        function $(e3) {
          return n2.toByteArray(function(e4) {
            if ((e4 = (e4 = e4.split("=")[0]).trim().replace(H, "")).length < 2) return "";
            for (; e4.length % 4 != 0; ) e4 += "=";
            return e4;
          }(e3));
        }
        function Q(e3, t3, r3, n3) {
          let i2;
          for (i2 = 0; i2 < n3 && !(i2 + r3 >= t3.length || i2 >= e3.length); ++i2) t3[i2 + r3] = e3[i2];
          return i2;
        }
        function Y(e3, t3) {
          return e3 instanceof t3 || null != e3 && null != e3.constructor && null != e3.constructor.name && e3.constructor.name === t3.name;
        }
        function G(e3) {
          return e3 != e3;
        }
        const Z = function() {
          const e3 = "0123456789abcdef", t3 = new Array(256);
          for (let r3 = 0; r3 < 16; ++r3) {
            const n3 = 16 * r3;
            for (let i2 = 0; i2 < 16; ++i2) t3[n3 + i2] = e3[r3] + e3[i2];
          }
          return t3;
        }();
        function J(e3) {
          return "undefined" == typeof BigInt ? X : e3;
        }
        function X() {
          throw new Error("BigInt not supported");
        }
      }, 1227: function(e2, t2, r2) {
        var n2 = r2(4155);
        t2.formatArgs = function(t3) {
          if (t3[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t3[0] + (this.useColors ? "%c " : " ") + "+" + e2.exports.humanize(this.diff), !this.useColors) return;
          const r3 = "color: " + this.color;
          t3.splice(1, 0, r3, "color: inherit");
          let n3 = 0, i2 = 0;
          t3[0].replace(/%[a-zA-Z%]/g, (e3) => {
            "%%" !== e3 && (n3++, "%c" === e3 && (i2 = n3));
          }), t3.splice(i2, 0, r3);
        }, t2.save = function(e3) {
          try {
            e3 ? t2.storage.setItem("debug", e3) : t2.storage.removeItem("debug");
          } catch (e4) {
          }
        }, t2.load = function() {
          let e3;
          try {
            e3 = t2.storage.getItem("debug");
          } catch (e4) {
          }
          return !e3 && void 0 !== n2 && "env" in n2 && (e3 = n2.env.DEBUG), e3;
        }, t2.useColors = function() {
          return !("undefined" == typeof window || !window.process || "renderer" !== window.process.type && !window.process.__nwjs) || ("undefined" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) && ("undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
        }, t2.storage = function() {
          try {
            return localStorage;
          } catch (e3) {
          }
        }(), t2.destroy = /* @__PURE__ */ (() => {
          let e3 = false;
          return () => {
            e3 || (e3 = true, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
          };
        })(), t2.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], t2.log = console.debug || console.log || (() => {
        }), e2.exports = r2(2447)(t2);
        const { formatters: i } = e2.exports;
        i.j = function(e3) {
          try {
            return JSON.stringify(e3);
          } catch (e4) {
            return "[UnexpectedJSONParseError]: " + e4.message;
          }
        };
      }, 2447: function(e2, t2, r2) {
        e2.exports = function(e3) {
          function t3(e4) {
            let r3, i2, o, s = null;
            function a(...e5) {
              if (!a.enabled) return;
              const n3 = a, i3 = Number(/* @__PURE__ */ new Date()), o2 = i3 - (r3 || i3);
              n3.diff = o2, n3.prev = r3, n3.curr = i3, r3 = i3, e5[0] = t3.coerce(e5[0]), "string" != typeof e5[0] && e5.unshift("%O");
              let s2 = 0;
              e5[0] = e5[0].replace(/%([a-zA-Z%])/g, (r4, i4) => {
                if ("%%" === r4) return "%";
                s2++;
                const o3 = t3.formatters[i4];
                if ("function" == typeof o3) {
                  const t4 = e5[s2];
                  r4 = o3.call(n3, t4), e5.splice(s2, 1), s2--;
                }
                return r4;
              }), t3.formatArgs.call(n3, e5), (n3.log || t3.log).apply(n3, e5);
            }
            return a.namespace = e4, a.useColors = t3.useColors(), a.color = t3.selectColor(e4), a.extend = n2, a.destroy = t3.destroy, Object.defineProperty(a, "enabled", { enumerable: true, configurable: false, get: () => null !== s ? s : (i2 !== t3.namespaces && (i2 = t3.namespaces, o = t3.enabled(e4)), o), set: (e5) => {
              s = e5;
            } }), "function" == typeof t3.init && t3.init(a), a;
          }
          function n2(e4, r3) {
            const n3 = t3(this.namespace + (void 0 === r3 ? ":" : r3) + e4);
            return n3.log = this.log, n3;
          }
          function i(e4) {
            return e4.toString().substring(2, e4.toString().length - 2).replace(/\.\*\?$/, "*");
          }
          return t3.debug = t3, t3.default = t3, t3.coerce = function(e4) {
            return e4 instanceof Error ? e4.stack || e4.message : e4;
          }, t3.disable = function() {
            const e4 = [...t3.names.map(i), ...t3.skips.map(i).map((e5) => "-" + e5)].join(",");
            return t3.enable(""), e4;
          }, t3.enable = function(e4) {
            let r3;
            t3.save(e4), t3.namespaces = e4, t3.names = [], t3.skips = [];
            const n3 = ("string" == typeof e4 ? e4 : "").split(/[\s,]+/), i2 = n3.length;
            for (r3 = 0; r3 < i2; r3++) n3[r3] && ("-" === (e4 = n3[r3].replace(/\*/g, ".*?"))[0] ? t3.skips.push(new RegExp("^" + e4.slice(1) + "$")) : t3.names.push(new RegExp("^" + e4 + "$")));
          }, t3.enabled = function(e4) {
            if ("*" === e4[e4.length - 1]) return true;
            let r3, n3;
            for (r3 = 0, n3 = t3.skips.length; r3 < n3; r3++) if (t3.skips[r3].test(e4)) return false;
            for (r3 = 0, n3 = t3.names.length; r3 < n3; r3++) if (t3.names[r3].test(e4)) return true;
            return false;
          }, t3.humanize = r2(7824), t3.destroy = function() {
            console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
          }, Object.keys(e3).forEach((r3) => {
            t3[r3] = e3[r3];
          }), t3.names = [], t3.skips = [], t3.formatters = {}, t3.selectColor = function(e4) {
            let r3 = 0;
            for (let t4 = 0; t4 < e4.length; t4++) r3 = (r3 << 5) - r3 + e4.charCodeAt(t4), r3 |= 0;
            return t3.colors[Math.abs(r3) % t3.colors.length];
          }, t3.enable(t3.load()), t3;
        };
      }, 5981: function(e2, t2, r2) {
        var n2 = r2(8764).Buffer, i = r2(4155), o = r2(8473), s = r2(2840), a = r2(5717), u = r2(1852), l = n2.from && n2.from !== Uint8Array.from ? n2.from([0]) : new n2([0]), c = function(e3, t3) {
          e3._corked ? e3.once("uncork", t3) : t3();
        }, h = function(e3, t3) {
          return function(r3) {
            r3 ? function(e4, t4) {
              e4._autoDestroy && e4.destroy(t4);
            }(e3, "premature close" === r3.message ? null : r3) : t3 && !e3._ended && e3.end();
          };
        }, f = function() {
        }, p = function(e3, t3, r3) {
          if (!(this instanceof p)) return new p(e3, t3, r3);
          o.Duplex.call(this, r3), this._writable = null, this._readable = null, this._readable2 = null, this._autoDestroy = !r3 || false !== r3.autoDestroy, this._forwardDestroy = !r3 || false !== r3.destroy, this._forwardEnd = !r3 || false !== r3.end, this._corked = 1, this._ondrain = null, this._drained = false, this._forwarding = false, this._unwrite = null, this._unread = null, this._ended = false, this.destroyed = false, e3 && this.setWritable(e3), t3 && this.setReadable(t3);
        };
        a(p, o.Duplex), p.obj = function(e3, t3, r3) {
          return r3 || (r3 = {}), r3.objectMode = true, r3.highWaterMark = 16, new p(e3, t3, r3);
        }, p.prototype.cork = function() {
          1 == ++this._corked && this.emit("cork");
        }, p.prototype.uncork = function() {
          this._corked && 0 == --this._corked && this.emit("uncork");
        }, p.prototype.setWritable = function(e3) {
          if (this._unwrite && this._unwrite(), this.destroyed) e3 && e3.destroy && e3.destroy();
          else if (null !== e3 && false !== e3) {
            var t3 = this, r3 = s(e3, { writable: true, readable: false }, h(this, this._forwardEnd)), n3 = function() {
              var e4 = t3._ondrain;
              t3._ondrain = null, e4 && e4();
            };
            this._unwrite && i.nextTick(n3), this._writable = e3, this._writable.on("drain", n3), this._unwrite = function() {
              t3._writable.removeListener("drain", n3), r3();
            }, this.uncork();
          } else this.end();
        }, p.prototype.setReadable = function(e3) {
          if (this._unread && this._unread(), this.destroyed) e3 && e3.destroy && e3.destroy();
          else {
            if (null === e3 || false === e3) return this.push(null), void this.resume();
            var t3, r3 = this, n3 = s(e3, { writable: false, readable: true }, h(this)), i2 = function() {
              r3._forward();
            }, a2 = function() {
              r3.push(null);
            };
            this._drained = true, this._readable = e3, this._readable2 = e3._readableState ? e3 : (t3 = e3, new o.Readable({ objectMode: true, highWaterMark: 16 }).wrap(t3)), this._readable2.on("readable", i2), this._readable2.on("end", a2), this._unread = function() {
              r3._readable2.removeListener("readable", i2), r3._readable2.removeListener("end", a2), n3();
            }, this._forward();
          }
        }, p.prototype._read = function() {
          this._drained = true, this._forward();
        }, p.prototype._forward = function() {
          if (!this._forwarding && this._readable2 && this._drained) {
            var e3;
            for (this._forwarding = true; this._drained && null !== (e3 = u(this._readable2)); ) this.destroyed || (this._drained = this.push(e3));
            this._forwarding = false;
          }
        }, p.prototype.destroy = function(e3, t3) {
          if (t3 || (t3 = f), this.destroyed) return t3(null);
          this.destroyed = true;
          var r3 = this;
          i.nextTick(function() {
            r3._destroy(e3), t3(null);
          });
        }, p.prototype._destroy = function(e3) {
          if (e3) {
            var t3 = this._ondrain;
            this._ondrain = null, t3 ? t3(e3) : this.emit("error", e3);
          }
          this._forwardDestroy && (this._readable && this._readable.destroy && this._readable.destroy(), this._writable && this._writable.destroy && this._writable.destroy()), this.emit("close");
        }, p.prototype._write = function(e3, t3, r3) {
          if (!this.destroyed) return this._corked ? c(this, this._write.bind(this, e3, t3, r3)) : e3 === l ? this._finish(r3) : this._writable ? void (false === this._writable.write(e3) ? this._ondrain = r3 : this.destroyed || r3()) : r3();
        }, p.prototype._finish = function(e3) {
          var t3 = this;
          this.emit("preend"), c(this, function() {
            var r3, n3;
            n3 = function() {
              false === t3._writableState.prefinished && (t3._writableState.prefinished = true), t3.emit("prefinish"), c(t3, e3);
            }, (r3 = t3._forwardEnd && t3._writable) ? r3._writableState && r3._writableState.finished ? n3() : r3._writableState ? r3.end(n3) : (r3.end(), n3()) : n3();
          });
        }, p.prototype.end = function(e3, t3, r3) {
          return "function" == typeof e3 ? this.end(null, null, e3) : "function" == typeof t3 ? this.end(e3, null, t3) : (this._ended = true, e3 && this.write(e3), this._writableState.ending || this._writableState.destroyed || this.write(l), o.Writable.prototype.end.call(this, r3));
        }, e2.exports = p;
      }, 2840: function(e2, t2, r2) {
        var n2 = r2(4155), i = r2(778), o = function() {
        }, s = function(e3, t3, r3) {
          if ("function" == typeof t3) return s(e3, null, t3);
          t3 || (t3 = {}), r3 = i(r3 || o);
          var a = e3._writableState, u = e3._readableState, l = t3.readable || false !== t3.readable && e3.readable, c = t3.writable || false !== t3.writable && e3.writable, h = false, f = function() {
            e3.writable || p();
          }, p = function() {
            c = false, l || r3.call(e3);
          }, d = function() {
            l = false, c || r3.call(e3);
          }, y = function(t4) {
            r3.call(e3, t4 ? new Error("exited with error code: " + t4) : null);
          }, g = function(t4) {
            r3.call(e3, t4);
          }, b = function() {
            n2.nextTick(m);
          }, m = function() {
            if (!h) return (!l || u && u.ended && !u.destroyed) && (!c || a && a.ended && !a.destroyed) ? void 0 : r3.call(e3, new Error("premature close"));
          }, v = function() {
            e3.req.on("finish", p);
          };
          return function(e4) {
            return e4.setHeader && "function" == typeof e4.abort;
          }(e3) ? (e3.on("complete", p), e3.on("abort", b), e3.req ? v() : e3.on("request", v)) : c && !a && (e3.on("end", f), e3.on("close", f)), function(e4) {
            return e4.stdio && Array.isArray(e4.stdio) && 3 === e4.stdio.length;
          }(e3) && e3.on("exit", y), e3.on("end", d), e3.on("finish", p), false !== t3.error && e3.on("error", g), e3.on("close", b), function() {
            h = true, e3.removeListener("complete", p), e3.removeListener("abort", b), e3.removeListener("request", v), e3.req && e3.req.removeListener("finish", p), e3.removeListener("end", f), e3.removeListener("close", f), e3.removeListener("finish", p), e3.removeListener("exit", y), e3.removeListener("end", d), e3.removeListener("error", g), e3.removeListener("close", b);
          };
        };
        e2.exports = s;
      }, 7187: function(e2) {
        var t2 = Object.create || function(e3) {
          var t3 = function() {
          };
          return t3.prototype = e3, new t3();
        }, r2 = Object.keys || function(e3) {
          var t3 = [];
          for (var r3 in e3) Object.prototype.hasOwnProperty.call(e3, r3) && t3.push(r3);
          return r3;
        }, n2 = Function.prototype.bind || function(e3) {
          var t3 = this;
          return function() {
            return t3.apply(e3, arguments);
          };
        };
        function i() {
          this._events && Object.prototype.hasOwnProperty.call(this, "_events") || (this._events = t2(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
        }
        e2.exports = i, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._maxListeners = void 0;
        var o, s = 10;
        try {
          var a = {};
          Object.defineProperty && Object.defineProperty(a, "x", { value: 0 }), o = 0 === a.x;
        } catch (e3) {
          o = false;
        }
        function u(e3) {
          return void 0 === e3._maxListeners ? i.defaultMaxListeners : e3._maxListeners;
        }
        function l(e3, t3, r3) {
          if (t3) e3.call(r3);
          else for (var n3 = e3.length, i2 = v(e3, n3), o2 = 0; o2 < n3; ++o2) i2[o2].call(r3);
        }
        function c(e3, t3, r3, n3) {
          if (t3) e3.call(r3, n3);
          else for (var i2 = e3.length, o2 = v(e3, i2), s2 = 0; s2 < i2; ++s2) o2[s2].call(r3, n3);
        }
        function h(e3, t3, r3, n3, i2) {
          if (t3) e3.call(r3, n3, i2);
          else for (var o2 = e3.length, s2 = v(e3, o2), a2 = 0; a2 < o2; ++a2) s2[a2].call(r3, n3, i2);
        }
        function f(e3, t3, r3, n3, i2, o2) {
          if (t3) e3.call(r3, n3, i2, o2);
          else for (var s2 = e3.length, a2 = v(e3, s2), u2 = 0; u2 < s2; ++u2) a2[u2].call(r3, n3, i2, o2);
        }
        function p(e3, t3, r3, n3) {
          if (t3) e3.apply(r3, n3);
          else for (var i2 = e3.length, o2 = v(e3, i2), s2 = 0; s2 < i2; ++s2) o2[s2].apply(r3, n3);
        }
        function d(e3, r3, n3, i2) {
          var o2, s2, a2;
          if ("function" != typeof n3) throw new TypeError('"listener" argument must be a function');
          if ((s2 = e3._events) ? (s2.newListener && (e3.emit("newListener", r3, n3.listener ? n3.listener : n3), s2 = e3._events), a2 = s2[r3]) : (s2 = e3._events = t2(null), e3._eventsCount = 0), a2) {
            if ("function" == typeof a2 ? a2 = s2[r3] = i2 ? [n3, a2] : [a2, n3] : i2 ? a2.unshift(n3) : a2.push(n3), !a2.warned && (o2 = u(e3)) && o2 > 0 && a2.length > o2) {
              a2.warned = true;
              var l2 = new Error("Possible EventEmitter memory leak detected. " + a2.length + ' "' + String(r3) + '" listeners added. Use emitter.setMaxListeners() to increase limit.');
              l2.name = "MaxListenersExceededWarning", l2.emitter = e3, l2.type = r3, l2.count = a2.length, "object" == typeof console && console.warn && console.warn("%s: %s", l2.name, l2.message);
            }
          } else a2 = s2[r3] = n3, ++e3._eventsCount;
          return e3;
        }
        function y() {
          if (!this.fired) switch (this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length) {
            case 0:
              return this.listener.call(this.target);
            case 1:
              return this.listener.call(this.target, arguments[0]);
            case 2:
              return this.listener.call(this.target, arguments[0], arguments[1]);
            case 3:
              return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);
            default:
              for (var e3 = new Array(arguments.length), t3 = 0; t3 < e3.length; ++t3) e3[t3] = arguments[t3];
              this.listener.apply(this.target, e3);
          }
        }
        function g(e3, t3, r3) {
          var i2 = { fired: false, wrapFn: void 0, target: e3, type: t3, listener: r3 }, o2 = n2.call(y, i2);
          return o2.listener = r3, i2.wrapFn = o2, o2;
        }
        function b(e3, t3, r3) {
          var n3 = e3._events;
          if (!n3) return [];
          var i2 = n3[t3];
          return i2 ? "function" == typeof i2 ? r3 ? [i2.listener || i2] : [i2] : r3 ? function(e4) {
            for (var t4 = new Array(e4.length), r4 = 0; r4 < t4.length; ++r4) t4[r4] = e4[r4].listener || e4[r4];
            return t4;
          }(i2) : v(i2, i2.length) : [];
        }
        function m(e3) {
          var t3 = this._events;
          if (t3) {
            var r3 = t3[e3];
            if ("function" == typeof r3) return 1;
            if (r3) return r3.length;
          }
          return 0;
        }
        function v(e3, t3) {
          for (var r3 = new Array(t3), n3 = 0; n3 < t3; ++n3) r3[n3] = e3[n3];
          return r3;
        }
        o ? Object.defineProperty(i, "defaultMaxListeners", { enumerable: true, get: function() {
          return s;
        }, set: function(e3) {
          if ("number" != typeof e3 || e3 < 0 || e3 != e3) throw new TypeError('"defaultMaxListeners" must be a positive number');
          s = e3;
        } }) : i.defaultMaxListeners = s, i.prototype.setMaxListeners = function(e3) {
          if ("number" != typeof e3 || e3 < 0 || isNaN(e3)) throw new TypeError('"n" argument must be a positive number');
          return this._maxListeners = e3, this;
        }, i.prototype.getMaxListeners = function() {
          return u(this);
        }, i.prototype.emit = function(e3) {
          var t3, r3, n3, i2, o2, s2, a2 = "error" === e3;
          if (s2 = this._events) a2 = a2 && null == s2.error;
          else if (!a2) return false;
          if (a2) {
            if (arguments.length > 1 && (t3 = arguments[1]), t3 instanceof Error) throw t3;
            var u2 = new Error('Unhandled "error" event. (' + t3 + ")");
            throw u2.context = t3, u2;
          }
          if (!(r3 = s2[e3])) return false;
          var d2 = "function" == typeof r3;
          switch (n3 = arguments.length) {
            case 1:
              l(r3, d2, this);
              break;
            case 2:
              c(r3, d2, this, arguments[1]);
              break;
            case 3:
              h(r3, d2, this, arguments[1], arguments[2]);
              break;
            case 4:
              f(r3, d2, this, arguments[1], arguments[2], arguments[3]);
              break;
            default:
              for (i2 = new Array(n3 - 1), o2 = 1; o2 < n3; o2++) i2[o2 - 1] = arguments[o2];
              p(r3, d2, this, i2);
          }
          return true;
        }, i.prototype.addListener = function(e3, t3) {
          return d(this, e3, t3, false);
        }, i.prototype.on = i.prototype.addListener, i.prototype.prependListener = function(e3, t3) {
          return d(this, e3, t3, true);
        }, i.prototype.once = function(e3, t3) {
          if ("function" != typeof t3) throw new TypeError('"listener" argument must be a function');
          return this.on(e3, g(this, e3, t3)), this;
        }, i.prototype.prependOnceListener = function(e3, t3) {
          if ("function" != typeof t3) throw new TypeError('"listener" argument must be a function');
          return this.prependListener(e3, g(this, e3, t3)), this;
        }, i.prototype.removeListener = function(e3, r3) {
          var n3, i2, o2, s2, a2;
          if ("function" != typeof r3) throw new TypeError('"listener" argument must be a function');
          if (!(i2 = this._events)) return this;
          if (!(n3 = i2[e3])) return this;
          if (n3 === r3 || n3.listener === r3) 0 == --this._eventsCount ? this._events = t2(null) : (delete i2[e3], i2.removeListener && this.emit("removeListener", e3, n3.listener || r3));
          else if ("function" != typeof n3) {
            for (o2 = -1, s2 = n3.length - 1; s2 >= 0; s2--) if (n3[s2] === r3 || n3[s2].listener === r3) {
              a2 = n3[s2].listener, o2 = s2;
              break;
            }
            if (o2 < 0) return this;
            0 === o2 ? n3.shift() : function(e4, t3) {
              for (var r4 = t3, n4 = r4 + 1, i3 = e4.length; n4 < i3; r4 += 1, n4 += 1) e4[r4] = e4[n4];
              e4.pop();
            }(n3, o2), 1 === n3.length && (i2[e3] = n3[0]), i2.removeListener && this.emit("removeListener", e3, a2 || r3);
          }
          return this;
        }, i.prototype.removeAllListeners = function(e3) {
          var n3, i2, o2;
          if (!(i2 = this._events)) return this;
          if (!i2.removeListener) return 0 === arguments.length ? (this._events = t2(null), this._eventsCount = 0) : i2[e3] && (0 == --this._eventsCount ? this._events = t2(null) : delete i2[e3]), this;
          if (0 === arguments.length) {
            var s2, a2 = r2(i2);
            for (o2 = 0; o2 < a2.length; ++o2) "removeListener" !== (s2 = a2[o2]) && this.removeAllListeners(s2);
            return this.removeAllListeners("removeListener"), this._events = t2(null), this._eventsCount = 0, this;
          }
          if ("function" == typeof (n3 = i2[e3])) this.removeListener(e3, n3);
          else if (n3) for (o2 = n3.length - 1; o2 >= 0; o2--) this.removeListener(e3, n3[o2]);
          return this;
        }, i.prototype.listeners = function(e3) {
          return b(this, e3, true);
        }, i.prototype.rawListeners = function(e3) {
          return b(this, e3, false);
        }, i.listenerCount = function(e3, t3) {
          return "function" == typeof e3.listenerCount ? e3.listenerCount(t3) : m.call(e3, t3);
        }, i.prototype.listenerCount = m, i.prototype.eventNames = function() {
          return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
        };
      }, 645: function(e2, t2) {
        t2.read = function(e3, t3, r2, n2, i) {
          var o, s, a = 8 * i - n2 - 1, u = (1 << a) - 1, l = u >> 1, c = -7, h = r2 ? i - 1 : 0, f = r2 ? -1 : 1, p = e3[t3 + h];
          for (h += f, o = p & (1 << -c) - 1, p >>= -c, c += a; c > 0; o = 256 * o + e3[t3 + h], h += f, c -= 8) ;
          for (s = o & (1 << -c) - 1, o >>= -c, c += n2; c > 0; s = 256 * s + e3[t3 + h], h += f, c -= 8) ;
          if (0 === o) o = 1 - l;
          else {
            if (o === u) return s ? NaN : 1 / 0 * (p ? -1 : 1);
            s += Math.pow(2, n2), o -= l;
          }
          return (p ? -1 : 1) * s * Math.pow(2, o - n2);
        }, t2.write = function(e3, t3, r2, n2, i, o) {
          var s, a, u, l = 8 * o - i - 1, c = (1 << l) - 1, h = c >> 1, f = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = n2 ? 0 : o - 1, d = n2 ? 1 : -1, y = t3 < 0 || 0 === t3 && 1 / t3 < 0 ? 1 : 0;
          for (t3 = Math.abs(t3), isNaN(t3) || t3 === 1 / 0 ? (a = isNaN(t3) ? 1 : 0, s = c) : (s = Math.floor(Math.log(t3) / Math.LN2), t3 * (u = Math.pow(2, -s)) < 1 && (s--, u *= 2), (t3 += s + h >= 1 ? f / u : f * Math.pow(2, 1 - h)) * u >= 2 && (s++, u /= 2), s + h >= c ? (a = 0, s = c) : s + h >= 1 ? (a = (t3 * u - 1) * Math.pow(2, i), s += h) : (a = t3 * Math.pow(2, h - 1) * Math.pow(2, i), s = 0)); i >= 8; e3[r2 + p] = 255 & a, p += d, a /= 256, i -= 8) ;
          for (s = s << i | a, l += i; l > 0; e3[r2 + p] = 255 & s, p += d, s /= 256, l -= 8) ;
          e3[r2 + p - d] |= 128 * y;
        };
      }, 5717: function(e2) {
        "function" == typeof Object.create ? e2.exports = function(e3, t2) {
          t2 && (e3.super_ = t2, e3.prototype = Object.create(t2.prototype, { constructor: { value: e3, enumerable: false, writable: true, configurable: true } }));
        } : e2.exports = function(e3, t2) {
          if (t2) {
            e3.super_ = t2;
            var r2 = function() {
            };
            r2.prototype = t2.prototype, e3.prototype = new r2(), e3.prototype.constructor = e3;
          }
        };
      }, 9246: function(e2, t2, r2) {
        "use strict";
        r2.d(t2, { l4: function() {
          return f;
        } });
        var n2 = function(e3) {
          var t3 = "function" == typeof Symbol && Symbol.iterator, r3 = t3 && e3[t3], n3 = 0;
          if (r3) return r3.call(e3);
          if (e3 && "number" == typeof e3.length) return { next: function() {
            return e3 && n3 >= e3.length && (e3 = void 0), { value: e3 && e3[n3++], done: !e3 };
          } };
          throw new TypeError(t3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
        };
        Object.freeze(function(e3) {
          var t3 = this;
          void 0 === e3 && (e3 = []);
          var r3 = 0, i2 = [];
          this.size = function() {
            return r3;
          }, this.empty = function() {
            return 0 === r3;
          }, this.clear = function() {
            r3 = 0, i2.length = 0;
          }, this.front = function() {
            if (!this.empty()) return i2[0];
          }, this.back = function() {
            if (!this.empty()) return i2[r3 - 1];
          }, this.forEach = function(e4) {
            i2.forEach(e4);
          }, this.getElementByPos = function(e4) {
            if (e4 < 0 || e4 >= r3) throw new Error("pos must more than 0 and less than vector's size");
            return i2[e4];
          }, this.eraseElementByPos = function(e4) {
            if (e4 < 0 || e4 >= r3) throw new Error("pos must more than 0 and less than vector's size");
            for (var t4 = e4; t4 < r3 - 1; ++t4) i2[t4] = i2[t4 + 1];
            this.popBack();
          }, this.eraseElementByValue = function(e4) {
            var t4 = [];
            this.forEach(function(r4) {
              r4 !== e4 && t4.push(r4);
            }), t4.forEach(function(e5, t5) {
              i2[t5] = e5;
            });
            for (var n3 = t4.length; r3 > n3; ) this.popBack();
          }, this.pushBack = function(e4) {
            i2.push(e4), ++r3;
          }, this.popBack = function() {
            i2.pop(), r3 > 0 && --r3;
          }, this.setElementByPos = function(e4, t4) {
            if (e4 < 0 || e4 >= r3) throw new Error("pos must more than 0 and less than vector's size");
            i2[e4] = t4;
          }, this.insert = function(e4, t4, n3) {
            if (void 0 === n3 && (n3 = 1), e4 < 0 || e4 > r3) throw new Error("pos must more than 0 and less than or equal to vector's size");
            i2.splice.apply(i2, function(e5, t5, r4) {
              if (r4 || 2 === arguments.length) for (var n4, i3 = 0, o2 = t5.length; i3 < o2; i3++) !n4 && i3 in t5 || (n4 || (n4 = Array.prototype.slice.call(t5, 0, i3)), n4[i3] = t5[i3]);
              return e5.concat(n4 || Array.prototype.slice.call(t5));
            }([e4, 0], function(e5, t5) {
              var r4 = "function" == typeof Symbol && e5[Symbol.iterator];
              if (!r4) return e5;
              var n4, i3, o2 = r4.call(e5), s2 = [];
              try {
                for (; (void 0 === t5 || t5-- > 0) && !(n4 = o2.next()).done; ) s2.push(n4.value);
              } catch (e6) {
                i3 = { error: e6 };
              } finally {
                try {
                  n4 && !n4.done && (r4 = o2.return) && r4.call(o2);
                } finally {
                  if (i3) throw i3.error;
                }
              }
              return s2;
            }(new Array(n3).fill(t4)), false)), r3 += n3;
          }, this.find = function(e4) {
            return i2.includes(e4);
          }, this.reverse = function() {
            i2.reverse();
          }, this.unique = function() {
            var e4, t4 = [];
            this.forEach(function(r4, n4) {
              0 !== n4 && r4 === e4 || (t4.push(r4), e4 = r4);
            }), t4.forEach(function(e5, t5) {
              i2[t5] = e5;
            });
            for (var n3 = t4.length; r3 > n3; ) this.popBack();
          }, this.sort = function(e4) {
            i2.sort(e4);
          }, this[Symbol.iterator] = function() {
            return function() {
              return function(e4, t4) {
                var r4, n3, i3, o2, s2 = { label: 0, sent: function() {
                  if (1 & i3[0]) throw i3[1];
                  return i3[1];
                }, trys: [], ops: [] };
                return o2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o2[Symbol.iterator] = function() {
                  return this;
                }), o2;
                function a2(o3) {
                  return function(a3) {
                    return function(o4) {
                      if (r4) throw new TypeError("Generator is already executing.");
                      for (; s2; ) try {
                        if (r4 = 1, n3 && (i3 = 2 & o4[0] ? n3.return : o4[0] ? n3.throw || ((i3 = n3.return) && i3.call(n3), 0) : n3.next) && !(i3 = i3.call(n3, o4[1])).done) return i3;
                        switch (n3 = 0, i3 && (o4 = [2 & o4[0], i3.value]), o4[0]) {
                          case 0:
                          case 1:
                            i3 = o4;
                            break;
                          case 4:
                            return s2.label++, { value: o4[1], done: false };
                          case 5:
                            s2.label++, n3 = o4[1], o4 = [0];
                            continue;
                          case 7:
                            o4 = s2.ops.pop(), s2.trys.pop();
                            continue;
                          default:
                            if (!((i3 = (i3 = s2.trys).length > 0 && i3[i3.length - 1]) || 6 !== o4[0] && 2 !== o4[0])) {
                              s2 = 0;
                              continue;
                            }
                            if (3 === o4[0] && (!i3 || o4[1] > i3[0] && o4[1] < i3[3])) {
                              s2.label = o4[1];
                              break;
                            }
                            if (6 === o4[0] && s2.label < i3[1]) {
                              s2.label = i3[1], i3 = o4;
                              break;
                            }
                            if (i3 && s2.label < i3[2]) {
                              s2.label = i3[2], s2.ops.push(o4);
                              break;
                            }
                            i3[2] && s2.ops.pop(), s2.trys.pop();
                            continue;
                        }
                        o4 = t4.call(e4, s2);
                      } catch (e5) {
                        o4 = [6, e5], n3 = 0;
                      } finally {
                        r4 = i3 = 0;
                      }
                      if (5 & o4[0]) throw o4[1];
                      return { value: o4[0] ? o4[1] : void 0, done: true };
                    }([o3, a3]);
                  };
                }
              }(this, function(e4) {
                switch (e4.label) {
                  case 0:
                    return [5, n2(i2)];
                  case 1:
                    return [2, e4.sent()];
                }
              });
            }();
          }, e3.forEach(function(e4) {
            return t3.pushBack(e4);
          }), Object.freeze(this);
        }), Object.freeze(function(e3) {
          var t3 = this;
          void 0 === e3 && (e3 = []);
          var r3 = 0, n3 = [];
          this.size = function() {
            return r3;
          }, this.empty = function() {
            return 0 === r3;
          }, this.clear = function() {
            r3 = 0, n3.length = 0;
          }, this.push = function(e4) {
            n3.push(e4), ++r3;
          }, this.pop = function() {
            n3.pop(), r3 > 0 && --r3;
          }, this.top = function() {
            return n3[r3 - 1];
          }, e3.forEach(function(e4) {
            return t3.push(e4);
          }), Object.freeze(this);
        });
        var i = function(e3) {
          this.value = void 0, this.pre = void 0, this.next = void 0, this.value = e3;
        };
        function o(e3) {
          var t3 = this;
          void 0 === e3 && (e3 = []);
          var r3 = 0, n3 = void 0, o2 = void 0;
          this.size = function() {
            return r3;
          }, this.empty = function() {
            return 0 === r3;
          }, this.clear = function() {
            n3 = o2 = void 0, r3 = 0;
          }, this.front = function() {
            return null == n3 ? void 0 : n3.value;
          }, this.back = function() {
            return null == o2 ? void 0 : o2.value;
          }, this.forEach = function(e4) {
            for (var t4 = n3, r4 = 0; t4; ) {
              if (void 0 === t4.value) throw new Error("unknown error");
              e4(t4.value, r4++), t4 = t4.next;
            }
          }, this.getElementByPos = function(e4) {
            if (e4 < 0 || e4 >= r3) throw new Error("pos must more then 0 and less then the list length");
            for (var t4 = n3; e4-- && t4; ) t4 = t4.next;
            if (!t4 || void 0 === t4.value) throw new Error("unknown error");
            return t4.value;
          }, this.eraseElementByPos = function(e4) {
            if (e4 < 0 || e4 >= r3) throw new Error("erase pos must more then 0 and less then the list length");
            if (0 === e4) this.popFront();
            else if (e4 === r3 - 1) this.popBack();
            else {
              for (var t4 = n3; e4--; ) {
                if (!(null == t4 ? void 0 : t4.next)) throw new Error("unknown error");
                t4 = t4.next;
              }
              if (!t4 || !t4.pre || !t4.next) throw new Error("unknown error");
              var i2 = t4.pre, o3 = t4.next;
              o3.pre = i2, i2.next = o3, r3 > 0 && --r3;
            }
          }, this.eraseElementByValue = function(e4) {
            for (; n3 && n3.value === e4; ) this.popFront();
            for (; o2 && o2.value === e4; ) this.popBack();
            if (n3) for (var t4 = n3; t4; ) {
              if (t4.value === e4) {
                var i2 = t4.pre, s2 = t4.next;
                s2 && (s2.pre = i2), i2 && (i2.next = s2), r3 > 0 && --r3;
              }
              t4 = t4.next;
            }
          }, this.pushBack = function(e4) {
            if (null == e4) throw new Error("you can't push null or undefined here");
            ++r3;
            var t4 = new i(e4);
            o2 ? (o2.next = t4, t4.pre = o2, o2 = t4) : n3 = o2 = t4;
          }, this.popBack = function() {
            o2 && (r3 > 0 && --r3, o2 && (n3 === o2 ? n3 = o2 = void 0 : (o2 = o2.pre) && (o2.next = void 0)));
          }, this.setElementByPos = function(e4, t4) {
            if (null == t4) throw new Error("you can't set null or undefined here");
            if (e4 < 0 || e4 >= r3) throw new Error("pos must more then 0 and less then the list length");
            for (var i2 = n3; e4--; ) {
              if (!i2) throw new Error("unknown error");
              i2 = i2.next;
            }
            i2 && (i2.value = t4);
          }, this.insert = function(e4, t4, o3) {
            if (void 0 === o3 && (o3 = 1), null == t4) throw new Error("you can't insert null or undefined here");
            if (e4 < 0 || e4 > r3) throw new Error("insert pos must more then 0 and less then or equal to the list length");
            if (o3 < 0) throw new Error("insert size must more than 0");
            if (0 === e4) for (; o3--; ) this.pushFront(t4);
            else if (e4 === r3) for (; o3--; ) this.pushBack(t4);
            else {
              for (var s2 = n3, a2 = 1; a2 < e4; ++a2) {
                if (!(null == s2 ? void 0 : s2.next)) throw new Error("unknown error");
                s2 = null == s2 ? void 0 : s2.next;
              }
              if (!s2) throw new Error("unknown error");
              var u2 = s2.next;
              for (r3 += o3; o3--; ) s2.next = new i(t4), s2.next.pre = s2, s2 = s2.next;
              s2.next = u2, u2 && (u2.pre = s2);
            }
          }, this.find = function(e4) {
            for (var t4 = n3; t4; ) {
              if (t4.value === e4) return true;
              t4 = t4.next;
            }
            return false;
          }, this.reverse = function() {
            for (var e4 = n3, t4 = o2, i2 = 0; e4 && t4 && 2 * i2 < r3; ) {
              var s2 = e4.value;
              e4.value = t4.value, t4.value = s2, e4 = e4.next, t4 = t4.pre, ++i2;
            }
          }, this.unique = function() {
            for (var e4 = n3; e4; ) {
              for (var t4 = e4; t4 && t4.next && t4.value === t4.next.value; ) t4 = t4.next, r3 > 0 && --r3;
              e4.next = t4.next, e4.next && (e4.next.pre = e4), e4 = e4.next;
            }
          }, this.sort = function(e4) {
            var t4 = [];
            this.forEach(function(e5) {
              t4.push(e5);
            }), t4.sort(e4);
            var r4 = n3;
            t4.forEach(function(e5) {
              r4 && (r4.value = e5, r4 = r4.next);
            });
          }, this.pushFront = function(e4) {
            if (null == e4) throw new Error("you can't push null or undefined here");
            ++r3;
            var t4 = new i(e4);
            n3 ? (t4.next = n3, n3.pre = t4, n3 = t4) : n3 = o2 = t4;
          }, this.popFront = function() {
            n3 && (r3 > 0 && --r3, n3 && (n3 === o2 ? n3 = o2 = void 0 : (n3 = n3.next) && (n3.pre = void 0)));
          }, this.merge = function(e4) {
            var t4 = this, s2 = n3;
            e4.forEach(function(e5) {
              for (; s2 && void 0 !== s2.value && s2.value <= e5; ) s2 = s2.next;
              if (void 0 === s2) t4.pushBack(e5), s2 = o2;
              else if (s2 === n3) t4.pushFront(e5), s2 = n3;
              else {
                ++r3;
                var a2 = s2.pre;
                a2 && (a2.next = new i(e5), a2.next.pre = a2, a2.next.next = s2, s2 && (s2.pre = a2.next));
              }
            });
          }, this[Symbol.iterator] = function() {
            return function() {
              var e4;
              return function(e5, t4) {
                var r4, n4, i2, o3, s2 = { label: 0, sent: function() {
                  if (1 & i2[0]) throw i2[1];
                  return i2[1];
                }, trys: [], ops: [] };
                return o3 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function() {
                  return this;
                }), o3;
                function a2(o4) {
                  return function(a3) {
                    return function(o5) {
                      if (r4) throw new TypeError("Generator is already executing.");
                      for (; s2; ) try {
                        if (r4 = 1, n4 && (i2 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i2 = n4.return) && i2.call(n4), 0) : n4.next) && !(i2 = i2.call(n4, o5[1])).done) return i2;
                        switch (n4 = 0, i2 && (o5 = [2 & o5[0], i2.value]), o5[0]) {
                          case 0:
                          case 1:
                            i2 = o5;
                            break;
                          case 4:
                            return s2.label++, { value: o5[1], done: false };
                          case 5:
                            s2.label++, n4 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s2.ops.pop(), s2.trys.pop();
                            continue;
                          default:
                            if (!((i2 = (i2 = s2.trys).length > 0 && i2[i2.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s2 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i2 || o5[1] > i2[0] && o5[1] < i2[3])) {
                              s2.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s2.label < i2[1]) {
                              s2.label = i2[1], i2 = o5;
                              break;
                            }
                            if (i2 && s2.label < i2[2]) {
                              s2.label = i2[2], s2.ops.push(o5);
                              break;
                            }
                            i2[2] && s2.ops.pop(), s2.trys.pop();
                            continue;
                        }
                        o5 = t4.call(e5, s2);
                      } catch (e6) {
                        o5 = [6, e6], n4 = 0;
                      } finally {
                        r4 = i2 = 0;
                      }
                      if (5 & o5[0]) throw o5[1];
                      return { value: o5[0] ? o5[1] : void 0, done: true };
                    }([o4, a3]);
                  };
                }
              }(this, function(t4) {
                switch (t4.label) {
                  case 0:
                    e4 = n3, t4.label = 1;
                  case 1:
                    if (void 0 === e4) return [3, 3];
                    if (!e4.value) throw new Error("unknown error");
                    return [4, e4.value];
                  case 2:
                    return t4.sent(), e4 = e4.next, [3, 1];
                  case 3:
                    return [2];
                }
              });
            }();
          }, e3.forEach(function(e4) {
            return t3.pushBack(e4);
          }), Object.freeze(this);
        }
        Object.freeze(o);
        var s = o;
        Object.freeze(function(e3) {
          void 0 === e3 && (e3 = []);
          var t3 = new s(e3);
          this.size = function() {
            return t3.size();
          }, this.empty = function() {
            return t3.empty();
          }, this.clear = function() {
            t3.clear();
          }, this.push = function(e4) {
            t3.pushBack(e4);
          }, this.pop = function() {
            t3.popFront();
          }, this.front = function() {
            return t3.front();
          }, Object.freeze(this);
        });
        function a(e3) {
          var t3 = this;
          void 0 === e3 && (e3 = []);
          var r3 = [], n3 = 0, i2 = 0, o2 = 0, s2 = 0, u2 = 0, l2 = 0;
          this.size = function() {
            return l2;
          }, this.empty = function() {
            return 0 === l2;
          }, this.clear = function() {
            n3 = o2 = i2 = s2 = u2 = l2 = 0, h2.call(this, a.bucketSize), l2 = 0;
          }, this.front = function() {
            return r3[n3][i2];
          }, this.back = function() {
            return r3[o2][s2];
          }, this.forEach = function(e4) {
            if (!this.empty()) {
              var t4 = 0;
              if (n3 !== o2) {
                for (l3 = i2; l3 < a.bucketSize; ++l3) e4(r3[n3][l3], t4++);
                for (l3 = n3 + 1; l3 < o2; ++l3) for (var u3 = 0; u3 < a.bucketSize; ++u3) e4(r3[l3][u3], t4++);
                for (l3 = 0; l3 <= s2; ++l3) e4(r3[o2][l3], t4++);
              } else for (var l3 = i2; l3 <= s2; ++l3) e4(r3[n3][l3], t4++);
            }
          };
          var c2 = function(e4) {
            var t4 = n3 * a.bucketSize + i2, r4 = t4 + e4, u3 = o2 * a.bucketSize + s2;
            if (r4 < t4 || r4 > u3) throw new Error("pos should more than 0 and less than queue's size");
            return { curNodeBucketIndex: Math.floor(r4 / a.bucketSize), curNodePointerIndex: r4 % a.bucketSize };
          };
          this.getElementByPos = function(e4) {
            var t4 = c2(e4), n4 = t4.curNodeBucketIndex, i3 = t4.curNodePointerIndex;
            return r3[n4][i3];
          }, this.eraseElementByPos = function(e4) {
            var t4 = this;
            if (e4 < 0 || e4 > l2) throw new Error("pos should more than 0 and less than queue's size");
            if (0 === e4) this.popFront();
            else if (e4 === this.size()) this.popBack();
            else {
              for (var r4 = [], n4 = e4 + 1; n4 < l2; ++n4) r4.push(this.getElementByPos(n4));
              this.cut(e4), this.popBack(), r4.forEach(function(e5) {
                return t4.pushBack(e5);
              });
            }
          }, this.eraseElementByValue = function(e4) {
            if (!this.empty()) {
              var t4 = [];
              this.forEach(function(r5) {
                r5 !== e4 && t4.push(r5);
              });
              for (var r4 = t4.length, n4 = 0; n4 < r4; ++n4) this.setElementByPos(n4, t4[n4]);
              this.cut(r4 - 1);
            }
          };
          var h2 = function(e4) {
            for (var t4 = [], c3 = e4 * a.sigma, h3 = Math.max(Math.ceil(c3 / a.bucketSize), 2), f2 = 0; f2 < h3; ++f2) t4.push(new Array(a.bucketSize));
            var p2 = Math.ceil(e4 / a.bucketSize), d2 = Math.floor(h3 / 2) - Math.floor(p2 / 2), y2 = d2, g2 = 0;
            if (this.size()) for (f2 = 0; f2 < p2; ++f2) {
              for (var b2 = 0; b2 < a.bucketSize; ++b2) if (t4[d2 + f2][b2] = this.front(), this.popFront(), this.empty()) {
                y2 = d2 + f2, g2 = b2;
                break;
              }
              if (this.empty()) break;
            }
            r3 = t4, n3 = d2, i2 = 0, o2 = y2, s2 = g2, u2 = h3, l2 = e4;
          };
          this.pushBack = function(e4) {
            this.empty() || (o2 === u2 - 1 && s2 === a.bucketSize - 1 && h2.call(this, this.size()), s2 < a.bucketSize - 1 ? ++s2 : o2 < u2 - 1 && (++o2, s2 = 0)), ++l2, r3[o2][s2] = e4;
          }, this.popBack = function() {
            this.empty() || (1 !== this.size() && (s2 > 0 ? --s2 : n3 < o2 && (--o2, s2 = a.bucketSize - 1)), l2 > 0 && --l2);
          }, this.setElementByPos = function(e4, t4) {
            var n4 = c2(e4), i3 = n4.curNodeBucketIndex, o3 = n4.curNodePointerIndex;
            r3[i3][o3] = t4;
          }, this.insert = function(e4, t4, r4) {
            var n4 = this;
            if (void 0 === r4 && (r4 = 1), 0 === e4) for (; r4--; ) this.pushFront(t4);
            else if (e4 === this.size()) for (; r4--; ) this.pushBack(t4);
            else {
              for (var i3 = [], o3 = e4; o3 < l2; ++o3) i3.push(this.getElementByPos(o3));
              for (this.cut(e4 - 1), o3 = 0; o3 < r4; ++o3) this.pushBack(t4);
              i3.forEach(function(e5) {
                return n4.pushBack(e5);
              });
            }
          }, this.find = function(e4) {
            if (n3 === o2) {
              for (var t4 = i2; t4 <= s2; ++t4) if (r3[n3][t4] === e4) return true;
              return false;
            }
            for (t4 = i2; t4 < a.bucketSize; ++t4) if (r3[n3][t4] === e4) return true;
            for (t4 = n3 + 1; t4 < o2; ++t4) for (var u3 = 0; u3 < a.bucketSize; ++u3) if (r3[t4][u3] === e4) return true;
            for (t4 = 0; t4 <= s2; ++t4) if (r3[o2][t4] === e4) return true;
            return false;
          }, this.reverse = function() {
            for (var e4 = 0, t4 = l2 - 1; e4 < t4; ) {
              var r4 = this.getElementByPos(e4);
              this.setElementByPos(e4, this.getElementByPos(t4)), this.setElementByPos(t4, r4), ++e4, --t4;
            }
          }, this.unique = function() {
            if (!this.empty()) {
              var e4 = [], t4 = this.front();
              this.forEach(function(r5, n4) {
                0 !== n4 && r5 === t4 || (e4.push(r5), t4 = r5);
              });
              for (var r4 = 0; r4 < l2; ++r4) this.setElementByPos(r4, e4[r4]);
              this.cut(e4.length - 1);
            }
          }, this.sort = function(e4) {
            var t4 = [];
            this.forEach(function(e5) {
              t4.push(e5);
            }), t4.sort(e4);
            for (var r4 = 0; r4 < l2; ++r4) this.setElementByPos(r4, t4[r4]);
          }, this.pushFront = function(e4) {
            this.empty() || (0 === n3 && 0 === i2 && h2.call(this, this.size()), i2 > 0 ? --i2 : n3 > 0 && (--n3, i2 = a.bucketSize - 1)), ++l2, r3[n3][i2] = e4;
          }, this.popFront = function() {
            this.empty() || (1 !== this.size() && (i2 < a.bucketSize - 1 ? ++i2 : n3 < o2 && (++n3, i2 = 0)), l2 > 0 && --l2);
          }, this.shrinkToFit = function() {
            var e4 = this, t4 = [];
            this.forEach(function(e5) {
              t4.push(e5);
            });
            var n4 = t4.length;
            r3 = [];
            for (var i3 = Math.ceil(n4 / a.bucketSize), o3 = 0; o3 < i3; ++o3) r3.push(new Array(a.bucketSize));
            this.clear(), t4.forEach(function(t5) {
              return e4.pushBack(t5);
            });
          }, this.cut = function(e4) {
            if (e4 < 0) this.clear();
            else {
              var t4 = c2(e4), r4 = t4.curNodeBucketIndex, n4 = t4.curNodePointerIndex;
              o2 = r4, s2 = n4, l2 = e4 + 1;
            }
          }, this[Symbol.iterator] = function() {
            return function() {
              var e4, t4;
              return function(e5, t5) {
                var r4, n4, i3, o3, s3 = { label: 0, sent: function() {
                  if (1 & i3[0]) throw i3[1];
                  return i3[1];
                }, trys: [], ops: [] };
                return o3 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function() {
                  return this;
                }), o3;
                function a2(o4) {
                  return function(a3) {
                    return function(o5) {
                      if (r4) throw new TypeError("Generator is already executing.");
                      for (; s3; ) try {
                        if (r4 = 1, n4 && (i3 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i3 = n4.return) && i3.call(n4), 0) : n4.next) && !(i3 = i3.call(n4, o5[1])).done) return i3;
                        switch (n4 = 0, i3 && (o5 = [2 & o5[0], i3.value]), o5[0]) {
                          case 0:
                          case 1:
                            i3 = o5;
                            break;
                          case 4:
                            return s3.label++, { value: o5[1], done: false };
                          case 5:
                            s3.label++, n4 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s3.ops.pop(), s3.trys.pop();
                            continue;
                          default:
                            if (!((i3 = (i3 = s3.trys).length > 0 && i3[i3.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s3 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i3 || o5[1] > i3[0] && o5[1] < i3[3])) {
                              s3.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s3.label < i3[1]) {
                              s3.label = i3[1], i3 = o5;
                              break;
                            }
                            if (i3 && s3.label < i3[2]) {
                              s3.label = i3[2], s3.ops.push(o5);
                              break;
                            }
                            i3[2] && s3.ops.pop(), s3.trys.pop();
                            continue;
                        }
                        o5 = t5.call(e5, s3);
                      } catch (e6) {
                        o5 = [6, e6], n4 = 0;
                      } finally {
                        r4 = i3 = 0;
                      }
                      if (5 & o5[0]) throw o5[1];
                      return { value: o5[0] ? o5[1] : void 0, done: true };
                    }([o4, a3]);
                  };
                }
              }(this, function(u3) {
                switch (u3.label) {
                  case 0:
                    if (0 === l2) return [2];
                    if (n3 !== o2) return [3, 5];
                    t4 = i2, u3.label = 1;
                  case 1:
                    return t4 <= s2 ? [4, r3[n3][t4]] : [3, 4];
                  case 2:
                    u3.sent(), u3.label = 3;
                  case 3:
                    return ++t4, [3, 1];
                  case 4:
                    return [2];
                  case 5:
                    t4 = i2, u3.label = 6;
                  case 6:
                    return t4 < a.bucketSize ? [4, r3[n3][t4]] : [3, 9];
                  case 7:
                    u3.sent(), u3.label = 8;
                  case 8:
                    return ++t4, [3, 6];
                  case 9:
                    t4 = n3 + 1, u3.label = 10;
                  case 10:
                    if (!(t4 < o2)) return [3, 15];
                    e4 = 0, u3.label = 11;
                  case 11:
                    return e4 < a.bucketSize ? [4, r3[t4][e4]] : [3, 14];
                  case 12:
                    u3.sent(), u3.label = 13;
                  case 13:
                    return ++e4, [3, 11];
                  case 14:
                    return ++t4, [3, 10];
                  case 15:
                    t4 = 0, u3.label = 16;
                  case 16:
                    return t4 <= s2 ? [4, r3[o2][t4]] : [3, 19];
                  case 17:
                    u3.sent(), u3.label = 18;
                  case 18:
                    return ++t4, [3, 16];
                  case 19:
                    return [2];
                }
              });
            }();
          }, function() {
            var i3 = a.bucketSize;
            e3.size ? i3 = e3.size() : e3.length && (i3 = e3.length);
            var s3 = i3 * a.sigma;
            u2 = Math.ceil(s3 / a.bucketSize), u2 = Math.max(u2, 3);
            for (var l3 = 0; l3 < u2; ++l3) r3.push(new Array(a.bucketSize));
            var c3 = Math.ceil(i3 / a.bucketSize);
            n3 = Math.floor(u2 / 2) - Math.floor(c3 / 2), o2 = n3, e3.forEach(function(e4) {
              return t3.pushBack(e4);
            });
          }(), Object.freeze(this);
        }
        a.sigma = 3, a.bucketSize = 5e3, Object.freeze(a), Object.freeze(function(e3, t3) {
          void 0 === e3 && (e3 = []), t3 = t3 || function(e4, t4) {
            return e4 > t4 ? -1 : e4 < t4 ? 1 : 0;
          };
          var r3 = [];
          e3.forEach(function(e4) {
            return r3.push(e4);
          });
          var n3 = r3.length, i2 = function(e4, t4) {
            if (e4 < 0 || e4 >= n3) throw new Error("unknown error");
            if (t4 < 0 || t4 >= n3) throw new Error("unknown error");
            var i3 = r3[e4];
            r3[e4] = r3[t4], r3[t4] = i3;
          }, o2 = function(e4) {
            if (e4 < 0 || e4 >= n3) throw new Error("unknown error");
            var o3 = 2 * e4 + 1, s2 = 2 * e4 + 2;
            o3 < n3 && t3(r3[e4], r3[o3]) > 0 && i2(e4, o3), s2 < n3 && t3(r3[e4], r3[s2]) > 0 && i2(e4, s2);
          };
          !function() {
            for (var e4 = Math.floor((n3 - 1) / 2); e4 >= 0; --e4) for (var o3 = e4, s2 = 2 * o3 + 1; s2 < n3; ) {
              var a2 = s2 + 1, u2 = s2;
              if (a2 < n3 && t3(r3[s2], r3[a2]) > 0 && (u2 = a2), t3(r3[o3], r3[u2]) <= 0) break;
              i2(o3, u2), s2 = 2 * (o3 = u2) + 1;
            }
          }(), this.size = function() {
            return n3;
          }, this.empty = function() {
            return 0 === n3;
          }, this.clear = function() {
            n3 = 0, r3.length = 0;
          }, this.push = function(e4) {
            if (r3.push(e4), 1 != ++n3) for (var i3 = n3 - 1; i3 > 0; ) {
              var s2 = Math.floor((i3 - 1) / 2);
              if (t3(r3[s2], e4) <= 0) break;
              o2(s2), i3 = s2;
            }
          }, this.pop = function() {
            if (!this.empty()) if (1 !== this.size()) {
              var e4 = r3[n3 - 1];
              --n3;
              for (var i3 = 0; i3 < this.size(); ) {
                var o3 = 2 * i3 + 1, s2 = 2 * i3 + 2;
                if (o3 >= this.size()) break;
                var a2 = o3;
                if (s2 < this.size() && t3(r3[o3], r3[s2]) > 0 && (a2 = s2), t3(r3[a2], e4) >= 0) break;
                r3[i3] = r3[a2], i3 = a2;
              }
              r3[i3] = e4;
            } else --n3;
          }, this.top = function() {
            return r3[0];
          }, Object.freeze(this);
        });
        var u = function() {
          function e3(e4, t3) {
            this.color = true, this.key = void 0, this.value = void 0, this.parent = void 0, this.brother = void 0, this.leftChild = void 0, this.rightChild = void 0, this.key = e4, this.value = t3;
          }
          return e3.prototype.rotateLeft = function() {
            var e4 = this.parent, t3 = this.brother, r3 = this.leftChild, n3 = this.rightChild;
            if (!n3) throw new Error("unknown error");
            var i2 = n3.leftChild, o2 = n3.rightChild;
            return e4 && (e4.leftChild === this ? e4.leftChild = n3 : e4.rightChild === this && (e4.rightChild = n3)), n3.parent = e4, n3.brother = t3, n3.leftChild = this, n3.rightChild = o2, t3 && (t3.brother = n3), this.parent = n3, this.brother = o2, this.leftChild = r3, this.rightChild = i2, o2 && (o2.parent = n3, o2.brother = this), r3 && (r3.parent = this, r3.brother = i2), i2 && (i2.parent = this, i2.brother = r3), n3;
          }, e3.prototype.rotateRight = function() {
            var e4 = this.parent, t3 = this.brother, r3 = this.leftChild;
            if (!r3) throw new Error("unknown error");
            var n3 = this.rightChild, i2 = r3.leftChild, o2 = r3.rightChild;
            return e4 && (e4.leftChild === this ? e4.leftChild = r3 : e4.rightChild === this && (e4.rightChild = r3)), r3.parent = e4, r3.brother = t3, r3.leftChild = i2, r3.rightChild = this, t3 && (t3.brother = r3), i2 && (i2.parent = r3, i2.brother = this), this.parent = r3, this.brother = i2, this.leftChild = o2, this.rightChild = n3, o2 && (o2.parent = this, o2.brother = n3), n3 && (n3.parent = this, n3.brother = o2), r3;
          }, e3.prototype.remove = function() {
            if (this.leftChild || this.rightChild) throw new Error("can only remove leaf node");
            this.parent && (this === this.parent.leftChild ? this.parent.leftChild = void 0 : this === this.parent.rightChild && (this.parent.rightChild = void 0)), this.brother && (this.brother.brother = void 0), this.key = void 0, this.value = void 0, this.parent = void 0, this.brother = void 0;
          }, e3.TreeNodeColorType = { red: true, black: false }, e3;
        }();
        Object.freeze(u);
        var l = u, c = function(e3) {
          var t3 = "function" == typeof Symbol && Symbol.iterator, r3 = t3 && e3[t3], n3 = 0;
          if (r3) return r3.call(e3);
          if (e3 && "number" == typeof e3.length) return { next: function() {
            return e3 && n3 >= e3.length && (e3 = void 0), { value: e3 && e3[n3++], done: !e3 };
          } };
          throw new TypeError(t3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
        };
        function h(e3, t3) {
          var r3 = this;
          void 0 === e3 && (e3 = []), t3 = t3 || function(e4, t4) {
            return e4 < t4 ? -1 : e4 > t4 ? 1 : 0;
          };
          var n3 = 0, i2 = new l();
          i2.color = l.TreeNodeColorType.black, this.size = function() {
            return n3;
          }, this.empty = function() {
            return 0 === n3;
          }, this.clear = function() {
            n3 = 0, i2.key = void 0, i2.leftChild = i2.rightChild = i2.brother = i2.parent = void 0, i2.color = l.TreeNodeColorType.black;
          };
          var o2 = function(e4) {
            if (!e4 || void 0 === e4.key) throw new Error("unknown error");
            return e4.leftChild ? o2(e4.leftChild) : e4;
          }, s2 = function(e4) {
            if (!e4 || void 0 === e4.key) throw new Error("unknown error");
            return e4.rightChild ? s2(e4.rightChild) : e4;
          };
          this.front = function() {
            if (!this.empty()) return o2(i2).key;
          }, this.back = function() {
            if (!this.empty()) return s2(i2).key;
          }, this.forEach = function(e4) {
            var t4, r4, n4 = 0;
            try {
              for (var i3 = c(this), o3 = i3.next(); !o3.done; o3 = i3.next()) e4(o3.value, n4++);
            } catch (e5) {
              t4 = { error: e5 };
            } finally {
              try {
                o3 && !o3.done && (r4 = i3.return) && r4.call(i3);
              } finally {
                if (t4) throw t4.error;
              }
            }
          }, this.getElementByPos = function(e4) {
            var t4, r4;
            if (e4 < 0 || e4 >= this.size()) throw new Error("pos must more than 0 and less than set's size");
            var n4 = 0;
            try {
              for (var i3 = c(this), o3 = i3.next(); !o3.done; o3 = i3.next()) {
                var s3 = o3.value;
                if (n4 === e4) return s3;
                ++n4;
              }
            } catch (e5) {
              t4 = { error: e5 };
            } finally {
              try {
                o3 && !o3.done && (r4 = i3.return) && r4.call(i3);
              } finally {
                if (t4) throw t4.error;
              }
            }
            throw new Error("unknown error");
          };
          var a2 = function(e4) {
            var t4 = e4.parent;
            if (!t4) {
              if (e4 === i2) return;
              throw new Error("unknown error");
            }
            if (e4.color !== l.TreeNodeColorType.red) {
              var r4 = e4.brother;
              if (!r4) throw new Error("unknown error");
              if (e4 === t4.leftChild) if (r4.color === l.TreeNodeColorType.red) {
                r4.color = l.TreeNodeColorType.black, t4.color = l.TreeNodeColorType.red;
                var n4 = t4.rotateLeft();
                i2 === t4 && (i2 = n4), a2(e4);
              } else r4.color === l.TreeNodeColorType.black && (r4.rightChild && r4.rightChild.color === l.TreeNodeColorType.red ? (r4.color = t4.color, t4.color = l.TreeNodeColorType.black, r4.rightChild && (r4.rightChild.color = l.TreeNodeColorType.black), n4 = t4.rotateLeft(), i2 === t4 && (i2 = n4), e4.color = l.TreeNodeColorType.black) : r4.rightChild && r4.rightChild.color !== l.TreeNodeColorType.black || !r4.leftChild || r4.leftChild.color !== l.TreeNodeColorType.red ? r4.leftChild && r4.leftChild.color !== l.TreeNodeColorType.black || r4.rightChild && r4.rightChild.color !== l.TreeNodeColorType.black || (r4.color = l.TreeNodeColorType.red, a2(t4)) : (r4.color = l.TreeNodeColorType.red, r4.leftChild && (r4.leftChild.color = l.TreeNodeColorType.black), n4 = r4.rotateRight(), i2 === r4 && (i2 = n4), a2(e4)));
              else e4 === t4.rightChild && (r4.color === l.TreeNodeColorType.red ? (r4.color = l.TreeNodeColorType.black, t4.color = l.TreeNodeColorType.red, n4 = t4.rotateRight(), i2 === t4 && (i2 = n4), a2(e4)) : r4.color === l.TreeNodeColorType.black && (r4.leftChild && r4.leftChild.color === l.TreeNodeColorType.red ? (r4.color = t4.color, t4.color = l.TreeNodeColorType.black, r4.leftChild && (r4.leftChild.color = l.TreeNodeColorType.black), n4 = t4.rotateRight(), i2 === t4 && (i2 = n4), e4.color = l.TreeNodeColorType.black) : r4.leftChild && r4.leftChild.color !== l.TreeNodeColorType.black || !r4.rightChild || r4.rightChild.color !== l.TreeNodeColorType.red ? r4.leftChild && r4.leftChild.color !== l.TreeNodeColorType.black || r4.rightChild && r4.rightChild.color !== l.TreeNodeColorType.black || (r4.color = l.TreeNodeColorType.red, a2(t4)) : (r4.color = l.TreeNodeColorType.red, r4.rightChild && (r4.rightChild.color = l.TreeNodeColorType.black), n4 = r4.rotateLeft(), i2 === r4 && (i2 = n4), a2(e4))));
            } else e4.color = l.TreeNodeColorType.black;
          }, u2 = function(e4) {
            for (var t4 = e4; t4.leftChild || t4.rightChild; ) {
              if (t4.rightChild) {
                t4 = o2(t4.rightChild);
                var r4 = e4.key;
                e4.key = t4.key, t4.key = r4, e4 = t4;
              }
              t4.leftChild && (t4 = s2(t4.leftChild), r4 = e4.key, e4.key = t4.key, t4.key = r4, e4 = t4);
            }
            a2(t4), t4 && t4.remove(), --n3, i2.color = l.TreeNodeColorType.black;
          }, h2 = function(e4, t4) {
            return !(!e4 || void 0 === e4.key) && (!!h2(e4.leftChild, t4) || !!t4(e4) || h2(e4.rightChild, t4));
          };
          this.eraseElementByPos = function(e4) {
            if (e4 < 0 || e4 >= n3) throw new Error("pos must more than 0 and less than set's size");
            var t4 = 0;
            h2(i2, function(r4) {
              return e4 === t4 ? (u2(r4), true) : (++t4, false);
            });
          }, this.eraseElementByValue = function(e4) {
            if (!this.empty()) {
              var r4 = d2(i2, e4);
              void 0 !== r4 && void 0 !== r4.key && 0 === t3(r4.key, e4) && u2(r4);
            }
          };
          var f2 = function(e4, r4) {
            if (!e4 || void 0 === e4.key) throw new Error("unknown error");
            var n4 = t3(r4, e4.key);
            return n4 < 0 ? e4.leftChild ? f2(e4.leftChild, r4) : (e4.leftChild = new l(), e4.leftChild.parent = e4, e4.leftChild.brother = e4.rightChild, e4.rightChild && (e4.rightChild.brother = e4.leftChild), e4.leftChild) : n4 > 0 ? e4.rightChild ? f2(e4.rightChild, r4) : (e4.rightChild = new l(), e4.rightChild.parent = e4, e4.rightChild.brother = e4.leftChild, e4.leftChild && (e4.leftChild.brother = e4.rightChild), e4.rightChild) : e4;
          }, p2 = function(e4) {
            var t4 = e4.parent;
            if (!t4) {
              if (e4 === i2) return;
              throw new Error("unknown error");
            }
            if (t4.color !== l.TreeNodeColorType.black && t4.color === l.TreeNodeColorType.red) {
              var r4 = t4.brother, n4 = t4.parent;
              if (!n4) throw new Error("unknown error");
              if (r4 && r4.color === l.TreeNodeColorType.red) r4.color = t4.color = l.TreeNodeColorType.black, n4.color = l.TreeNodeColorType.red, p2(n4);
              else if (!r4 || r4.color === l.TreeNodeColorType.black) if (t4 === n4.leftChild) if (e4 === t4.leftChild) {
                t4.color = l.TreeNodeColorType.black, n4.color = l.TreeNodeColorType.red;
                var o3 = n4.rotateRight();
                n4 === i2 && (i2 = o3);
              } else e4 === t4.rightChild && (o3 = t4.rotateLeft(), n4 === i2 && (i2 = o3), p2(t4));
              else t4 === n4.rightChild && (e4 === t4.leftChild ? (o3 = t4.rotateRight(), n4 === i2 && (i2 = o3), p2(t4)) : e4 === t4.rightChild && (t4.color = l.TreeNodeColorType.black, n4.color = l.TreeNodeColorType.red, o3 = n4.rotateLeft(), n4 === i2 && (i2 = o3)));
            }
          };
          this.insert = function(e4) {
            if (null == e4) throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
            if (this.empty()) return ++n3, i2.key = e4, void (i2.color = l.TreeNodeColorType.black);
            var r4 = f2(i2, e4);
            void 0 !== r4.key && 0 === t3(r4.key, e4) || (++n3, r4.key = e4, p2(r4), i2.color = l.TreeNodeColorType.black);
          };
          var d2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key) {
              var n4 = t3(r4, e4.key);
              return n4 < 0 ? d2(e4.leftChild, r4) : n4 > 0 ? d2(e4.rightChild, r4) : e4;
            }
          };
          this.find = function(e4) {
            var r4 = d2(i2, e4);
            return void 0 !== r4 && void 0 !== r4.key && 0 === t3(r4.key, e4);
          };
          var y2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key) {
              var n4 = t3(e4.key, r4);
              if (0 === n4) return e4.key;
              if (n4 < 0) return y2(e4.rightChild, r4);
              var i3 = y2(e4.leftChild, r4);
              return void 0 !== i3 ? i3 : e4.key;
            }
          };
          this.lowerBound = function(e4) {
            return y2(i2, e4);
          };
          var g2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key) {
              if (t3(e4.key, r4) <= 0) return g2(e4.rightChild, r4);
              var n4 = g2(e4.leftChild, r4);
              return void 0 !== n4 ? n4 : e4.key;
            }
          };
          this.upperBound = function(e4) {
            return g2(i2, e4);
          };
          var b2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key) {
              var n4 = t3(e4.key, r4);
              if (0 === n4) return e4.key;
              if (n4 > 0) return b2(e4.leftChild, r4);
              var i3 = b2(e4.rightChild, r4);
              return void 0 !== i3 ? i3 : e4.key;
            }
          };
          this.reverseLowerBound = function(e4) {
            return b2(i2, e4);
          };
          var m2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key) {
              if (t3(e4.key, r4) >= 0) return m2(e4.leftChild, r4);
              var n4 = m2(e4.rightChild, r4);
              return void 0 !== n4 ? n4 : e4.key;
            }
          };
          this.reverseUpperBound = function(e4) {
            return m2(i2, e4);
          }, this.union = function(e4) {
            var t4 = this;
            e4.forEach(function(e5) {
              return t4.insert(e5);
            });
          }, this.getHeight = function() {
            if (this.empty()) return 0;
            var e4 = function(t4) {
              return t4 ? Math.max(e4(t4.leftChild), e4(t4.rightChild)) + 1 : 1;
            };
            return e4(i2);
          };
          var v = function(e4) {
            return function(e5, t4) {
              var r4, n4, i3, o3, s3 = { label: 0, sent: function() {
                if (1 & i3[0]) throw i3[1];
                return i3[1];
              }, trys: [], ops: [] };
              return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function() {
                return this;
              }), o3;
              function a3(o4) {
                return function(a4) {
                  return function(o5) {
                    if (r4) throw new TypeError("Generator is already executing.");
                    for (; s3; ) try {
                      if (r4 = 1, n4 && (i3 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i3 = n4.return) && i3.call(n4), 0) : n4.next) && !(i3 = i3.call(n4, o5[1])).done) return i3;
                      switch (n4 = 0, i3 && (o5 = [2 & o5[0], i3.value]), o5[0]) {
                        case 0:
                        case 1:
                          i3 = o5;
                          break;
                        case 4:
                          return s3.label++, { value: o5[1], done: false };
                        case 5:
                          s3.label++, n4 = o5[1], o5 = [0];
                          continue;
                        case 7:
                          o5 = s3.ops.pop(), s3.trys.pop();
                          continue;
                        default:
                          if (!((i3 = (i3 = s3.trys).length > 0 && i3[i3.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                            s3 = 0;
                            continue;
                          }
                          if (3 === o5[0] && (!i3 || o5[1] > i3[0] && o5[1] < i3[3])) {
                            s3.label = o5[1];
                            break;
                          }
                          if (6 === o5[0] && s3.label < i3[1]) {
                            s3.label = i3[1], i3 = o5;
                            break;
                          }
                          if (i3 && s3.label < i3[2]) {
                            s3.label = i3[2], s3.ops.push(o5);
                            break;
                          }
                          i3[2] && s3.ops.pop(), s3.trys.pop();
                          continue;
                      }
                      o5 = t4.call(e5, s3);
                    } catch (e6) {
                      o5 = [6, e6], n4 = 0;
                    } finally {
                      r4 = i3 = 0;
                    }
                    if (5 & o5[0]) throw o5[1];
                    return { value: o5[0] ? o5[1] : void 0, done: true };
                  }([o4, a4]);
                };
              }
            }(this, function(t4) {
              switch (t4.label) {
                case 0:
                  return e4 && void 0 !== e4.key ? [5, c(v(e4.leftChild))] : [2];
                case 1:
                  return t4.sent(), [4, e4.key];
                case 2:
                  return t4.sent(), [5, c(v(e4.rightChild))];
                case 3:
                  return t4.sent(), [2];
              }
            });
          };
          this[Symbol.iterator] = function() {
            return v(i2);
          }, e3.forEach(function(e4) {
            return r3.insert(e4);
          }), Object.freeze(this);
        }
        Object.freeze(h);
        var f = h, p = function(e3) {
          var t3 = "function" == typeof Symbol && Symbol.iterator, r3 = t3 && e3[t3], n3 = 0;
          if (r3) return r3.call(e3);
          if (e3 && "number" == typeof e3.length) return { next: function() {
            return e3 && n3 >= e3.length && (e3 = void 0), { value: e3 && e3[n3++], done: !e3 };
          } };
          throw new TypeError(t3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
        };
        function d(e3, t3) {
          var r3 = this;
          void 0 === e3 && (e3 = []), t3 = t3 || function(e4, t4) {
            return e4 < t4 ? -1 : e4 > t4 ? 1 : 0;
          };
          var n3 = 0, i2 = new l();
          i2.color = l.TreeNodeColorType.black, this.size = function() {
            return n3;
          }, this.empty = function() {
            return 0 === n3;
          }, this.clear = function() {
            n3 = 0, i2.key = i2.value = void 0, i2.leftChild = i2.rightChild = i2.brother = void 0;
          };
          var o2 = function(e4) {
            if (!e4 || void 0 === e4.key) throw new Error("unknown error");
            return e4.leftChild ? o2(e4.leftChild) : e4;
          }, s2 = function(e4) {
            if (!e4 || void 0 === e4.key) throw new Error("unknown error");
            return e4.rightChild ? s2(e4.rightChild) : e4;
          };
          this.front = function() {
            if (!this.empty()) {
              var e4 = o2(i2);
              if (void 0 === e4.key || void 0 === e4.value) throw new Error("unknown error");
              return { key: e4.key, value: e4.value };
            }
          }, this.back = function() {
            if (!this.empty()) {
              var e4 = s2(i2);
              if (void 0 === e4.key || void 0 === e4.value) throw new Error("unknown error");
              return { key: e4.key, value: e4.value };
            }
          }, this.forEach = function(e4) {
            var t4, r4, n4 = 0;
            try {
              for (var i3 = p(this), o3 = i3.next(); !o3.done; o3 = i3.next()) e4(o3.value, n4++);
            } catch (e5) {
              t4 = { error: e5 };
            } finally {
              try {
                o3 && !o3.done && (r4 = i3.return) && r4.call(i3);
              } finally {
                if (t4) throw t4.error;
              }
            }
          }, this.getElementByPos = function(e4) {
            var t4, r4;
            if (e4 < 0 || e4 >= this.size()) throw new Error("pos must more than 0 and less than set's size");
            var n4 = 0;
            try {
              for (var i3 = p(this), o3 = i3.next(); !o3.done; o3 = i3.next()) {
                var s3 = o3.value;
                if (n4 === e4) return s3;
                ++n4;
              }
            } catch (e5) {
              t4 = { error: e5 };
            } finally {
              try {
                o3 && !o3.done && (r4 = i3.return) && r4.call(i3);
              } finally {
                if (t4) throw t4.error;
              }
            }
            throw new Error("unknown Error");
          };
          var a2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key && void 0 !== e4.value) {
              var n4 = t3(e4.key, r4);
              return 0 === n4 ? { key: e4.key, value: e4.value } : n4 < 0 ? a2(e4.rightChild, r4) : a2(e4.leftChild, r4) || { key: e4.key, value: e4.value };
            }
          };
          this.lowerBound = function(e4) {
            return a2(i2, e4);
          };
          var u2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key && void 0 !== e4.value) return t3(e4.key, r4) <= 0 ? u2(e4.rightChild, r4) : u2(e4.leftChild, r4) || { key: e4.key, value: e4.value };
          };
          this.upperBound = function(e4) {
            return u2(i2, e4);
          };
          var c2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key && void 0 !== e4.value) {
              var n4 = t3(e4.key, r4);
              return 0 === n4 ? { key: e4.key, value: e4.value } : n4 > 0 ? c2(e4.leftChild, r4) : c2(e4.rightChild, r4) || { key: e4.key, value: e4.value };
            }
          };
          this.reverseLowerBound = function(e4) {
            return c2(i2, e4);
          };
          var h2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key && void 0 !== e4.value) return t3(e4.key, r4) >= 0 ? h2(e4.leftChild, r4) : h2(e4.rightChild, r4) || { key: e4.key, value: e4.value };
          };
          this.reverseUpperBound = function(e4) {
            return h2(i2, e4);
          };
          var f2 = function(e4) {
            var t4 = e4.parent;
            if (!t4) {
              if (e4 === i2) return;
              throw new Error("unknown error");
            }
            if (e4.color !== l.TreeNodeColorType.red) {
              var r4 = e4.brother;
              if (!r4) throw new Error("unknown error");
              if (e4 === t4.leftChild) if (r4.color === l.TreeNodeColorType.red) {
                r4.color = l.TreeNodeColorType.black, t4.color = l.TreeNodeColorType.red;
                var n4 = t4.rotateLeft();
                i2 === t4 && (i2 = n4), f2(e4);
              } else r4.color === l.TreeNodeColorType.black && (r4.rightChild && r4.rightChild.color === l.TreeNodeColorType.red ? (r4.color = t4.color, t4.color = l.TreeNodeColorType.black, r4.rightChild && (r4.rightChild.color = l.TreeNodeColorType.black), n4 = t4.rotateLeft(), i2 === t4 && (i2 = n4), e4.color = l.TreeNodeColorType.black) : r4.rightChild && r4.rightChild.color !== l.TreeNodeColorType.black || !r4.leftChild || r4.leftChild.color !== l.TreeNodeColorType.red ? r4.leftChild && r4.leftChild.color !== l.TreeNodeColorType.black || r4.rightChild && r4.rightChild.color !== l.TreeNodeColorType.black || (r4.color = l.TreeNodeColorType.red, f2(t4)) : (r4.color = l.TreeNodeColorType.red, r4.leftChild && (r4.leftChild.color = l.TreeNodeColorType.black), n4 = r4.rotateRight(), i2 === r4 && (i2 = n4), f2(e4)));
              else e4 === t4.rightChild && (r4.color === l.TreeNodeColorType.red ? (r4.color = l.TreeNodeColorType.black, t4.color = l.TreeNodeColorType.red, n4 = t4.rotateRight(), i2 === t4 && (i2 = n4), f2(e4)) : r4.color === l.TreeNodeColorType.black && (r4.leftChild && r4.leftChild.color === l.TreeNodeColorType.red ? (r4.color = t4.color, t4.color = l.TreeNodeColorType.black, r4.leftChild && (r4.leftChild.color = l.TreeNodeColorType.black), n4 = t4.rotateRight(), i2 === t4 && (i2 = n4), e4.color = l.TreeNodeColorType.black) : r4.leftChild && r4.leftChild.color !== l.TreeNodeColorType.black || !r4.rightChild || r4.rightChild.color !== l.TreeNodeColorType.red ? r4.leftChild && r4.leftChild.color !== l.TreeNodeColorType.black || r4.rightChild && r4.rightChild.color !== l.TreeNodeColorType.black || (r4.color = l.TreeNodeColorType.red, f2(t4)) : (r4.color = l.TreeNodeColorType.red, r4.rightChild && (r4.rightChild.color = l.TreeNodeColorType.black), n4 = r4.rotateLeft(), i2 === r4 && (i2 = n4), f2(e4))));
            } else e4.color = l.TreeNodeColorType.black;
          }, d2 = function(e4) {
            for (var t4 = e4; t4.leftChild || t4.rightChild; ) {
              if (t4.rightChild) {
                t4 = o2(t4.rightChild);
                var r4 = e4.key;
                e4.key = t4.key, t4.key = r4;
                var a3 = e4.value;
                e4.value = t4.value, t4.value = a3, e4 = t4;
              }
              t4.leftChild && (t4 = s2(t4.leftChild), r4 = e4.key, e4.key = t4.key, t4.key = r4, a3 = e4.value, e4.value = t4.value, t4.value = a3, e4 = t4);
            }
            f2(t4), t4 && t4.remove(), --n3, i2.color = l.TreeNodeColorType.black;
          }, y2 = function(e4, t4) {
            return !(!e4 || void 0 === e4.key) && (!!y2(e4.leftChild, t4) || !!t4(e4) || y2(e4.rightChild, t4));
          };
          this.eraseElementByPos = function(e4) {
            if (e4 < 0 || e4 >= n3) throw new Error("pos must more than 0 and less than set's size");
            var t4 = 0;
            y2(i2, function(r4) {
              return e4 === t4 ? (d2(r4), true) : (++t4, false);
            });
          }, this.eraseElementByKey = function(e4) {
            if (!this.empty()) {
              var r4 = m2(i2, e4);
              void 0 !== r4 && void 0 !== r4.key && 0 === t3(r4.key, e4) && d2(r4);
            }
          };
          var g2 = function(e4, r4) {
            if (!e4 || void 0 === e4.key) throw new Error("unknown error");
            var n4 = t3(r4, e4.key);
            return n4 < 0 ? e4.leftChild ? g2(e4.leftChild, r4) : (e4.leftChild = new l(), e4.leftChild.parent = e4, e4.leftChild.brother = e4.rightChild, e4.rightChild && (e4.rightChild.brother = e4.leftChild), e4.leftChild) : n4 > 0 ? e4.rightChild ? g2(e4.rightChild, r4) : (e4.rightChild = new l(), e4.rightChild.parent = e4, e4.rightChild.brother = e4.leftChild, e4.leftChild && (e4.leftChild.brother = e4.rightChild), e4.rightChild) : e4;
          }, b2 = function(e4) {
            var t4 = e4.parent;
            if (!t4) {
              if (e4 === i2) return;
              throw new Error("unknown error");
            }
            if (t4.color !== l.TreeNodeColorType.black && t4.color === l.TreeNodeColorType.red) {
              var r4 = t4.brother, n4 = t4.parent;
              if (!n4) throw new Error("unknown error");
              if (r4 && r4.color === l.TreeNodeColorType.red) r4.color = t4.color = l.TreeNodeColorType.black, n4.color = l.TreeNodeColorType.red, b2(n4);
              else if (!r4 || r4.color === l.TreeNodeColorType.black) if (t4 === n4.leftChild) if (e4 === t4.leftChild) {
                t4.color = l.TreeNodeColorType.black, n4.color = l.TreeNodeColorType.red;
                var o3 = n4.rotateRight();
                n4 === i2 && (i2 = o3);
              } else e4 === t4.rightChild && (o3 = t4.rotateLeft(), n4 === i2 && (i2 = o3), b2(t4));
              else t4 === n4.rightChild && (e4 === t4.leftChild ? (o3 = t4.rotateRight(), n4 === i2 && (i2 = o3), b2(t4)) : e4 === t4.rightChild && (t4.color = l.TreeNodeColorType.black, n4.color = l.TreeNodeColorType.red, o3 = n4.rotateLeft(), n4 === i2 && (i2 = o3)));
            }
          };
          this.setElement = function(e4, r4) {
            if (null == e4) throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
            if (null != r4) {
              if (this.empty()) return ++n3, i2.key = e4, i2.value = r4, void (i2.color = l.TreeNodeColorType.black);
              var o3 = g2(i2, e4);
              void 0 === o3.key || 0 !== t3(o3.key, e4) ? (++n3, o3.key = e4, o3.value = r4, b2(o3), i2.color = l.TreeNodeColorType.black) : o3.value = r4;
            } else this.eraseElementByKey(e4);
          };
          var m2 = function(e4, r4) {
            if (e4 && void 0 !== e4.key) {
              var n4 = t3(r4, e4.key);
              return n4 < 0 ? m2(e4.leftChild, r4) : n4 > 0 ? m2(e4.rightChild, r4) : e4;
            }
          };
          this.find = function(e4) {
            return !!m2(i2, e4);
          }, this.getElementByKey = function(e4) {
            var t4 = m2(i2, e4);
            if (void 0 === (null == t4 ? void 0 : t4.key) || void 0 === (null == t4 ? void 0 : t4.value)) throw new Error("unknown error");
            return t4.value;
          }, this.union = function(e4) {
            var t4 = this;
            e4.forEach(function(e5) {
              var r4 = e5.key, n4 = e5.value;
              return t4.setElement(r4, n4);
            });
          }, this.getHeight = function() {
            if (this.empty()) return 0;
            var e4 = function(t4) {
              return t4 ? Math.max(e4(t4.leftChild), e4(t4.rightChild)) + 1 : 1;
            };
            return e4(i2);
          };
          var v = function(e4) {
            return function(e5, t4) {
              var r4, n4, i3, o3, s3 = { label: 0, sent: function() {
                if (1 & i3[0]) throw i3[1];
                return i3[1];
              }, trys: [], ops: [] };
              return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function() {
                return this;
              }), o3;
              function a3(o4) {
                return function(a4) {
                  return function(o5) {
                    if (r4) throw new TypeError("Generator is already executing.");
                    for (; s3; ) try {
                      if (r4 = 1, n4 && (i3 = 2 & o5[0] ? n4.return : o5[0] ? n4.throw || ((i3 = n4.return) && i3.call(n4), 0) : n4.next) && !(i3 = i3.call(n4, o5[1])).done) return i3;
                      switch (n4 = 0, i3 && (o5 = [2 & o5[0], i3.value]), o5[0]) {
                        case 0:
                        case 1:
                          i3 = o5;
                          break;
                        case 4:
                          return s3.label++, { value: o5[1], done: false };
                        case 5:
                          s3.label++, n4 = o5[1], o5 = [0];
                          continue;
                        case 7:
                          o5 = s3.ops.pop(), s3.trys.pop();
                          continue;
                        default:
                          if (!((i3 = (i3 = s3.trys).length > 0 && i3[i3.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                            s3 = 0;
                            continue;
                          }
                          if (3 === o5[0] && (!i3 || o5[1] > i3[0] && o5[1] < i3[3])) {
                            s3.label = o5[1];
                            break;
                          }
                          if (6 === o5[0] && s3.label < i3[1]) {
                            s3.label = i3[1], i3 = o5;
                            break;
                          }
                          if (i3 && s3.label < i3[2]) {
                            s3.label = i3[2], s3.ops.push(o5);
                            break;
                          }
                          i3[2] && s3.ops.pop(), s3.trys.pop();
                          continue;
                      }
                      o5 = t4.call(e5, s3);
                    } catch (e6) {
                      o5 = [6, e6], n4 = 0;
                    } finally {
                      r4 = i3 = 0;
                    }
                    if (5 & o5[0]) throw o5[1];
                    return { value: o5[0] ? o5[1] : void 0, done: true };
                  }([o4, a4]);
                };
              }
            }(this, function(t4) {
              switch (t4.label) {
                case 0:
                  return e4 && void 0 !== e4.key && void 0 !== e4.value ? [5, p(v(e4.leftChild))] : [2];
                case 1:
                  return t4.sent(), [4, { key: e4.key, value: e4.value }];
                case 2:
                  return t4.sent(), [5, p(v(e4.rightChild))];
                case 3:
                  return t4.sent(), [2];
              }
            });
          };
          this[Symbol.iterator] = function() {
            return v(i2);
          }, e3.forEach(function(e4) {
            var t4 = e4.key, n4 = e4.value;
            return r3.setElement(t4, n4);
          }), Object.freeze(this);
        }
        Object.freeze(d);
        var y = d;
        function g(e3, t3, r3) {
          var n3 = this;
          if (void 0 === e3 && (e3 = []), void 0 === t3 && (t3 = g.initSize), r3 = r3 || function(e4) {
            var t4 = 0, r4 = "";
            if ("number" == typeof e4) t4 = ((t4 = Math.floor(e4)) << 5) - t4, t4 &= t4;
            else {
              r4 = "string" != typeof e4 ? JSON.stringify(e4) : e4;
              for (var n4 = 0; n4 < r4.length; n4++) t4 = (t4 << 5) - t4 + r4.charCodeAt(n4), t4 &= t4;
            }
            return t4 ^ t4 >>> 16;
          }, 0 != (t3 & t3 - 1)) throw new Error("initBucketNum must be 2 to the power of n");
          var i2 = 0, o2 = [], a2 = Math.max(g.initSize, Math.min(g.maxSize, t3));
          this.size = function() {
            return i2;
          }, this.empty = function() {
            return 0 === i2;
          }, this.clear = function() {
            i2 = 0, a2 = t3, o2 = [];
          }, this.forEach = function(e4) {
            var t4 = 0;
            o2.forEach(function(r4) {
              r4.forEach(function(r5) {
                e4(r5, t4++);
              });
            });
          };
          var u2 = function(e4) {
            if (!(e4 >= g.maxSize)) {
              a2 = 2 * e4;
              var t4 = [];
              o2.forEach(function(n4, i3) {
                if (!n4.empty()) {
                  if (n4 instanceof s && 1 === n4.size()) {
                    var u3 = n4.front();
                    if (void 0 === u3) throw new Error("unknown error");
                    t4[r3(u3) & a2 - 1] = new s([u3]);
                  } else if (n4 instanceof f) {
                    var l2 = new s(), c2 = new s();
                    n4.forEach(function(t5) {
                      0 == (r3(t5) & e4) ? l2.pushBack(t5) : c2.pushBack(t5);
                    }), l2.size() > g.untreeifyThreshold ? t4[i3] = new f(l2) : l2.size() && (t4[i3] = l2), c2.size() > g.untreeifyThreshold ? t4[i3 + e4] = new f(c2) : c2.size() && (t4[i3 + e4] = c2);
                  } else {
                    var h2 = new s(), p2 = new s();
                    n4.forEach(function(t5) {
                      0 == (r3(t5) & e4) ? h2.pushBack(t5) : p2.pushBack(t5);
                    }), h2.size() && (t4[i3] = h2), p2.size() && (t4[i3 + e4] = p2);
                  }
                  o2[i3].clear();
                }
              }), o2 = t4;
            }
          };
          this.insert = function(e4) {
            if (null == e4) throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
            var t4 = r3(e4) & a2 - 1;
            if (o2[t4]) {
              var n4 = o2[t4].size();
              if (o2[t4] instanceof s) {
                if (o2[t4].find(e4)) return;
                o2[t4].pushBack(e4), o2[t4].size() >= g.treeifyThreshold && (o2[t4] = new f(o2[t4]));
              } else o2[t4].insert(e4);
              var l2 = o2[t4].size();
              i2 += l2 - n4;
            } else o2[t4] = new s([e4]), ++i2;
            i2 > a2 * g.sigma && u2.call(this, a2);
          }, this.eraseElementByValue = function(e4) {
            var t4 = r3(e4) & a2 - 1;
            if (o2[t4]) {
              var n4 = o2[t4].size();
              o2[t4].eraseElementByValue(e4), o2[t4] instanceof f && o2[t4].size() <= g.untreeifyThreshold && (o2[t4] = new s(o2[t4]));
              var u3 = o2[t4].size();
              i2 += u3 - n4;
            }
          }, this.find = function(e4) {
            var t4 = r3(e4) & a2 - 1;
            return !!o2[t4] && o2[t4].find(e4);
          }, this[Symbol.iterator] = function() {
            return function() {
              var e4, t4, r4, n4, i3, s2;
              return function(e5, t5) {
                var r5, n5, i4, o3, s3 = { label: 0, sent: function() {
                  if (1 & i4[0]) throw i4[1];
                  return i4[1];
                }, trys: [], ops: [] };
                return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function() {
                  return this;
                }), o3;
                function a3(o4) {
                  return function(a4) {
                    return function(o5) {
                      if (r5) throw new TypeError("Generator is already executing.");
                      for (; s3; ) try {
                        if (r5 = 1, n5 && (i4 = 2 & o5[0] ? n5.return : o5[0] ? n5.throw || ((i4 = n5.return) && i4.call(n5), 0) : n5.next) && !(i4 = i4.call(n5, o5[1])).done) return i4;
                        switch (n5 = 0, i4 && (o5 = [2 & o5[0], i4.value]), o5[0]) {
                          case 0:
                          case 1:
                            i4 = o5;
                            break;
                          case 4:
                            return s3.label++, { value: o5[1], done: false };
                          case 5:
                            s3.label++, n5 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s3.ops.pop(), s3.trys.pop();
                            continue;
                          default:
                            if (!((i4 = (i4 = s3.trys).length > 0 && i4[i4.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s3 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i4 || o5[1] > i4[0] && o5[1] < i4[3])) {
                              s3.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s3.label < i4[1]) {
                              s3.label = i4[1], i4 = o5;
                              break;
                            }
                            if (i4 && s3.label < i4[2]) {
                              s3.label = i4[2], s3.ops.push(o5);
                              break;
                            }
                            i4[2] && s3.ops.pop(), s3.trys.pop();
                            continue;
                        }
                        o5 = t5.call(e5, s3);
                      } catch (e6) {
                        o5 = [6, e6], n5 = 0;
                      } finally {
                        r5 = i4 = 0;
                      }
                      if (5 & o5[0]) throw o5[1];
                      return { value: o5[0] ? o5[1] : void 0, done: true };
                    }([o4, a4]);
                  };
                }
              }(this, function(u3) {
                switch (u3.label) {
                  case 0:
                    e4 = 0, u3.label = 1;
                  case 1:
                    if (!(e4 < a2)) return [3, 10];
                    for (; e4 < a2 && !o2[e4]; ) ++e4;
                    if (e4 >= a2) return [3, 10];
                    u3.label = 2;
                  case 2:
                    u3.trys.push([2, 7, 8, 9]), i3 = void 0, t4 = function(e5) {
                      var t5 = "function" == typeof Symbol && Symbol.iterator, r5 = t5 && e5[t5], n5 = 0;
                      if (r5) return r5.call(e5);
                      if (e5 && "number" == typeof e5.length) return { next: function() {
                        return e5 && n5 >= e5.length && (e5 = void 0), { value: e5 && e5[n5++], done: !e5 };
                      } };
                      throw new TypeError(t5 ? "Object is not iterable." : "Symbol.iterator is not defined.");
                    }(o2[e4]), r4 = t4.next(), u3.label = 3;
                  case 3:
                    return r4.done ? [3, 6] : [4, r4.value];
                  case 4:
                    u3.sent(), u3.label = 5;
                  case 5:
                    return r4 = t4.next(), [3, 3];
                  case 6:
                    return [3, 9];
                  case 7:
                    return n4 = u3.sent(), i3 = { error: n4 }, [3, 9];
                  case 8:
                    try {
                      r4 && !r4.done && (s2 = t4.return) && s2.call(t4);
                    } finally {
                      if (i3) throw i3.error;
                    }
                    return [7];
                  case 9:
                    return ++e4, [3, 1];
                  case 10:
                    return [2];
                }
              });
            }();
          }, e3.forEach(function(e4) {
            return n3.insert(e4);
          }), Object.freeze(this);
        }
        g.initSize = 16, g.maxSize = 1 << 30, g.sigma = 0.75, g.treeifyThreshold = 8, g.untreeifyThreshold = 6, g.minTreeifySize = 64, Object.freeze(g);
        var b = function(e3) {
          var t3 = "function" == typeof Symbol && Symbol.iterator, r3 = t3 && e3[t3], n3 = 0;
          if (r3) return r3.call(e3);
          if (e3 && "number" == typeof e3.length) return { next: function() {
            return e3 && n3 >= e3.length && (e3 = void 0), { value: e3 && e3[n3++], done: !e3 };
          } };
          throw new TypeError(t3 ? "Object is not iterable." : "Symbol.iterator is not defined.");
        };
        function m(e3, t3, r3) {
          var n3 = this;
          if (void 0 === e3 && (e3 = []), void 0 === t3 && (t3 = m.initSize), r3 = r3 || function(e4) {
            var t4, r4, n4 = 0, i3 = "";
            if ("number" == typeof e4) n4 = ((n4 = Math.floor(e4)) << 5) - n4, n4 &= n4;
            else {
              i3 = "string" != typeof e4 ? JSON.stringify(e4) : e4;
              try {
                for (var o3 = b(i3), s2 = o3.next(); !s2.done; s2 = o3.next()) n4 = (n4 << 5) - n4 + s2.value.charCodeAt(0), n4 &= n4;
              } catch (e5) {
                t4 = { error: e5 };
              } finally {
                try {
                  s2 && !s2.done && (r4 = o3.return) && r4.call(o3);
                } finally {
                  if (t4) throw t4.error;
                }
              }
            }
            return n4 ^ n4 >>> 16;
          }, 0 != (t3 & t3 - 1)) throw new Error("initBucketNum must be 2 to the power of n");
          var i2 = 0, o2 = [], a2 = Math.max(m.initSize, Math.min(m.maxSize, t3));
          this.size = function() {
            return i2;
          }, this.empty = function() {
            return 0 === i2;
          }, this.clear = function() {
            i2 = 0, a2 = t3, o2 = [];
          }, this.forEach = function(e4) {
            var t4 = 0;
            o2.forEach(function(r4) {
              r4.forEach(function(r5) {
                e4(r5, t4++);
              });
            });
          };
          var u2 = function(e4) {
            if (!(e4 >= m.maxSize)) {
              a2 = 2 * e4;
              var t4 = [];
              o2.forEach(function(n4, i3) {
                if (!n4.empty()) {
                  if (n4 instanceof s && 1 === n4.size()) {
                    var u3 = n4.front(), l2 = u3.key, c2 = u3.value;
                    t4[r3(l2) & a2 - 1] = new s([{ key: l2, value: c2 }]);
                  } else if (n4 instanceof y) {
                    var h2 = new s(), f2 = new s();
                    n4.forEach(function(t5) {
                      0 == (r3(t5.key) & e4) ? h2.pushBack(t5) : f2.pushBack(t5);
                    }), h2.size() > m.untreeifyThreshold ? t4[i3] = new y(h2) : h2.size() && (t4[i3] = h2), f2.size() > m.untreeifyThreshold ? t4[i3 + e4] = new y(f2) : f2.size() && (t4[i3 + e4] = f2);
                  } else {
                    var p2 = new s(), d2 = new s();
                    n4.forEach(function(t5) {
                      0 == (r3(t5.key) & e4) ? p2.pushBack(t5) : d2.pushBack(t5);
                    }), p2.size() && (t4[i3] = p2), d2.size() && (t4[i3 + e4] = d2);
                  }
                  o2[i3].clear();
                }
              }), o2 = t4;
            }
          };
          this.setElement = function(e4, t4) {
            var n4, l2;
            if (null == e4) throw new Error("to avoid some unnecessary errors, we don't suggest you insert null or undefined here");
            if (null != t4) {
              var c2 = r3(e4) & a2 - 1;
              if (o2[c2]) {
                var h2 = o2[c2].size();
                if (o2[c2] instanceof s) {
                  try {
                    for (var f2 = b(o2[c2]), p2 = f2.next(); !p2.done; p2 = f2.next()) {
                      var d2 = p2.value;
                      if (d2.key === e4) return void (d2.value = t4);
                    }
                  } catch (e5) {
                    n4 = { error: e5 };
                  } finally {
                    try {
                      p2 && !p2.done && (l2 = f2.return) && l2.call(f2);
                    } finally {
                      if (n4) throw n4.error;
                    }
                  }
                  o2[c2].pushBack({ key: e4, value: t4 }), o2[c2].size() >= m.treeifyThreshold && (o2[c2] = new y(o2[c2]));
                } else o2[c2].setElement(e4, t4);
                var g2 = o2[c2].size();
                i2 += g2 - h2;
              } else ++i2, o2[c2] = new s([{ key: e4, value: t4 }]);
              i2 > a2 * m.sigma && u2.call(this, a2);
            } else this.eraseElementByKey(e4);
          }, this.getElementByKey = function(e4) {
            var t4, n4, i3 = r3(e4) & a2 - 1;
            if (o2[i3]) {
              if (o2[i3] instanceof y) return o2[i3].getElementByKey(e4);
              try {
                for (var s2 = b(o2[i3]), u3 = s2.next(); !u3.done; u3 = s2.next()) {
                  var l2 = u3.value;
                  if (l2.key === e4) return l2.value;
                }
              } catch (e5) {
                t4 = { error: e5 };
              } finally {
                try {
                  u3 && !u3.done && (n4 = s2.return) && n4.call(s2);
                } finally {
                  if (t4) throw t4.error;
                }
              }
            }
          }, this.eraseElementByKey = function(e4) {
            var t4, n4, u3 = r3(e4) & a2 - 1;
            if (o2[u3]) {
              var l2 = o2[u3].size();
              if (o2[u3] instanceof y) o2[u3].eraseElementByKey(e4), o2[u3].size() <= m.untreeifyThreshold && (o2[u3] = new s(o2[u3]));
              else {
                var c2 = -1;
                try {
                  for (var h2 = b(o2[u3]), f2 = h2.next(); !f2.done; f2 = h2.next()) {
                    var p2 = f2.value;
                    if (++c2, p2.key === e4) {
                      o2[u3].eraseElementByPos(c2);
                      break;
                    }
                  }
                } catch (e5) {
                  t4 = { error: e5 };
                } finally {
                  try {
                    f2 && !f2.done && (n4 = h2.return) && n4.call(h2);
                  } finally {
                    if (t4) throw t4.error;
                  }
                }
              }
              var d2 = o2[u3].size();
              i2 += d2 - l2;
            }
          }, this.find = function(e4) {
            var t4, n4, i3 = r3(e4) & a2 - 1;
            if (!o2[i3]) return false;
            if (o2[i3] instanceof y) return o2[i3].find(e4);
            try {
              for (var s2 = b(o2[i3]), u3 = s2.next(); !u3.done; u3 = s2.next()) if (u3.value.key === e4) return true;
            } catch (e5) {
              t4 = { error: e5 };
            } finally {
              try {
                u3 && !u3.done && (n4 = s2.return) && n4.call(s2);
              } finally {
                if (t4) throw t4.error;
              }
            }
            return false;
          }, this[Symbol.iterator] = function() {
            return function() {
              var e4, t4, r4, n4, i3, s2;
              return function(e5, t5) {
                var r5, n5, i4, o3, s3 = { label: 0, sent: function() {
                  if (1 & i4[0]) throw i4[1];
                  return i4[1];
                }, trys: [], ops: [] };
                return o3 = { next: a3(0), throw: a3(1), return: a3(2) }, "function" == typeof Symbol && (o3[Symbol.iterator] = function() {
                  return this;
                }), o3;
                function a3(o4) {
                  return function(a4) {
                    return function(o5) {
                      if (r5) throw new TypeError("Generator is already executing.");
                      for (; s3; ) try {
                        if (r5 = 1, n5 && (i4 = 2 & o5[0] ? n5.return : o5[0] ? n5.throw || ((i4 = n5.return) && i4.call(n5), 0) : n5.next) && !(i4 = i4.call(n5, o5[1])).done) return i4;
                        switch (n5 = 0, i4 && (o5 = [2 & o5[0], i4.value]), o5[0]) {
                          case 0:
                          case 1:
                            i4 = o5;
                            break;
                          case 4:
                            return s3.label++, { value: o5[1], done: false };
                          case 5:
                            s3.label++, n5 = o5[1], o5 = [0];
                            continue;
                          case 7:
                            o5 = s3.ops.pop(), s3.trys.pop();
                            continue;
                          default:
                            if (!((i4 = (i4 = s3.trys).length > 0 && i4[i4.length - 1]) || 6 !== o5[0] && 2 !== o5[0])) {
                              s3 = 0;
                              continue;
                            }
                            if (3 === o5[0] && (!i4 || o5[1] > i4[0] && o5[1] < i4[3])) {
                              s3.label = o5[1];
                              break;
                            }
                            if (6 === o5[0] && s3.label < i4[1]) {
                              s3.label = i4[1], i4 = o5;
                              break;
                            }
                            if (i4 && s3.label < i4[2]) {
                              s3.label = i4[2], s3.ops.push(o5);
                              break;
                            }
                            i4[2] && s3.ops.pop(), s3.trys.pop();
                            continue;
                        }
                        o5 = t5.call(e5, s3);
                      } catch (e6) {
                        o5 = [6, e6], n5 = 0;
                      } finally {
                        r5 = i4 = 0;
                      }
                      if (5 & o5[0]) throw o5[1];
                      return { value: o5[0] ? o5[1] : void 0, done: true };
                    }([o4, a4]);
                  };
                }
              }(this, function(u3) {
                switch (u3.label) {
                  case 0:
                    e4 = 0, u3.label = 1;
                  case 1:
                    if (!(e4 < a2)) return [3, 10];
                    for (; e4 < a2 && !o2[e4]; ) ++e4;
                    if (e4 >= a2) return [3, 10];
                    u3.label = 2;
                  case 2:
                    u3.trys.push([2, 7, 8, 9]), i3 = void 0, t4 = b(o2[e4]), r4 = t4.next(), u3.label = 3;
                  case 3:
                    return r4.done ? [3, 6] : [4, r4.value];
                  case 4:
                    u3.sent(), u3.label = 5;
                  case 5:
                    return r4 = t4.next(), [3, 3];
                  case 6:
                    return [3, 9];
                  case 7:
                    return n4 = u3.sent(), i3 = { error: n4 }, [3, 9];
                  case 8:
                    try {
                      r4 && !r4.done && (s2 = t4.return) && s2.call(t4);
                    } finally {
                      if (i3) throw i3.error;
                    }
                    return [7];
                  case 9:
                    return ++e4, [3, 1];
                  case 10:
                    return [2];
                }
              });
            }();
          }, e3.forEach(function(e4) {
            var t4 = e4.key, r4 = e4.value;
            return n3.setElement(t4, r4);
          }), Object.freeze(this);
        }
        m.initSize = 16, m.maxSize = 1 << 30, m.sigma = 0.75, m.treeifyThreshold = 8, m.untreeifyThreshold = 6, m.minTreeifySize = 64, Object.freeze(m);
      }, 9593: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(4411), i = Symbol("max"), o = Symbol("length"), s = Symbol("lengthCalculator"), a = Symbol("allowStale"), u = Symbol("maxAge"), l = Symbol("dispose"), c = Symbol("noDisposeOnSet"), h = Symbol("lruList"), f = Symbol("cache"), p = Symbol("updateAgeOnGet"), d = () => 1, y = (e3, t3, r3) => {
          const n3 = e3[f].get(t3);
          if (n3) {
            const t4 = n3.value;
            if (g(e3, t4)) {
              if (m(e3, n3), !e3[a]) return;
            } else r3 && (e3[p] && (n3.value.now = Date.now()), e3[h].unshiftNode(n3));
            return t4.value;
          }
        }, g = (e3, t3) => {
          if (!t3 || !t3.maxAge && !e3[u]) return false;
          const r3 = Date.now() - t3.now;
          return t3.maxAge ? r3 > t3.maxAge : e3[u] && r3 > e3[u];
        }, b = (e3) => {
          if (e3[o] > e3[i]) for (let t3 = e3[h].tail; e3[o] > e3[i] && null !== t3; ) {
            const r3 = t3.prev;
            m(e3, t3), t3 = r3;
          }
        }, m = (e3, t3) => {
          if (t3) {
            const r3 = t3.value;
            e3[l] && e3[l](r3.key, r3.value), e3[o] -= r3.length, e3[f].delete(r3.key), e3[h].removeNode(t3);
          }
        };
        class v {
          constructor(e3, t3, r3, n3, i2) {
            this.key = e3, this.value = t3, this.length = r3, this.now = n3, this.maxAge = i2 || 0;
          }
        }
        const w = (e3, t3, r3, n3) => {
          let i2 = r3.value;
          g(e3, i2) && (m(e3, r3), e3[a] || (i2 = void 0)), i2 && t3.call(n3, i2.value, i2.key, e3);
        };
        e2.exports = class {
          constructor(e3) {
            if ("number" == typeof e3 && (e3 = { max: e3 }), e3 || (e3 = {}), e3.max && ("number" != typeof e3.max || e3.max < 0)) throw new TypeError("max must be a non-negative number");
            this[i] = e3.max || 1 / 0;
            const t3 = e3.length || d;
            if (this[s] = "function" != typeof t3 ? d : t3, this[a] = e3.stale || false, e3.maxAge && "number" != typeof e3.maxAge) throw new TypeError("maxAge must be a number");
            this[u] = e3.maxAge || 0, this[l] = e3.dispose, this[c] = e3.noDisposeOnSet || false, this[p] = e3.updateAgeOnGet || false, this.reset();
          }
          set max(e3) {
            if ("number" != typeof e3 || e3 < 0) throw new TypeError("max must be a non-negative number");
            this[i] = e3 || 1 / 0, b(this);
          }
          get max() {
            return this[i];
          }
          set allowStale(e3) {
            this[a] = !!e3;
          }
          get allowStale() {
            return this[a];
          }
          set maxAge(e3) {
            if ("number" != typeof e3) throw new TypeError("maxAge must be a non-negative number");
            this[u] = e3, b(this);
          }
          get maxAge() {
            return this[u];
          }
          set lengthCalculator(e3) {
            "function" != typeof e3 && (e3 = d), e3 !== this[s] && (this[s] = e3, this[o] = 0, this[h].forEach((e4) => {
              e4.length = this[s](e4.value, e4.key), this[o] += e4.length;
            })), b(this);
          }
          get lengthCalculator() {
            return this[s];
          }
          get length() {
            return this[o];
          }
          get itemCount() {
            return this[h].length;
          }
          rforEach(e3, t3) {
            t3 = t3 || this;
            for (let r3 = this[h].tail; null !== r3; ) {
              const n3 = r3.prev;
              w(this, e3, r3, t3), r3 = n3;
            }
          }
          forEach(e3, t3) {
            t3 = t3 || this;
            for (let r3 = this[h].head; null !== r3; ) {
              const n3 = r3.next;
              w(this, e3, r3, t3), r3 = n3;
            }
          }
          keys() {
            return this[h].toArray().map((e3) => e3.key);
          }
          values() {
            return this[h].toArray().map((e3) => e3.value);
          }
          reset() {
            this[l] && this[h] && this[h].length && this[h].forEach((e3) => this[l](e3.key, e3.value)), this[f] = /* @__PURE__ */ new Map(), this[h] = new n2(), this[o] = 0;
          }
          dump() {
            return this[h].map((e3) => !g(this, e3) && { k: e3.key, v: e3.value, e: e3.now + (e3.maxAge || 0) }).toArray().filter((e3) => e3);
          }
          dumpLru() {
            return this[h];
          }
          set(e3, t3, r3) {
            if ((r3 = r3 || this[u]) && "number" != typeof r3) throw new TypeError("maxAge must be a number");
            const n3 = r3 ? Date.now() : 0, a2 = this[s](t3, e3);
            if (this[f].has(e3)) {
              if (a2 > this[i]) return m(this, this[f].get(e3)), false;
              const s2 = this[f].get(e3).value;
              return this[l] && (this[c] || this[l](e3, s2.value)), s2.now = n3, s2.maxAge = r3, s2.value = t3, this[o] += a2 - s2.length, s2.length = a2, this.get(e3), b(this), true;
            }
            const p2 = new v(e3, t3, a2, n3, r3);
            return p2.length > this[i] ? (this[l] && this[l](e3, t3), false) : (this[o] += p2.length, this[h].unshift(p2), this[f].set(e3, this[h].head), b(this), true);
          }
          has(e3) {
            if (!this[f].has(e3)) return false;
            const t3 = this[f].get(e3).value;
            return !g(this, t3);
          }
          get(e3) {
            return y(this, e3, true);
          }
          peek(e3) {
            return y(this, e3, false);
          }
          pop() {
            const e3 = this[h].tail;
            return e3 ? (m(this, e3), e3.value) : null;
          }
          del(e3) {
            m(this, this[f].get(e3));
          }
          load(e3) {
            this.reset();
            const t3 = Date.now();
            for (let r3 = e3.length - 1; r3 >= 0; r3--) {
              const n3 = e3[r3], i2 = n3.e || 0;
              if (0 === i2) this.set(n3.k, n3.v);
              else {
                const e4 = i2 - t3;
                e4 > 0 && this.set(n3.k, n3.v, e4);
              }
            }
          }
          prune() {
            this[f].forEach((e3, t3) => y(this, t3, false));
          }
        };
      }, 9990: function(e2, t2, r2) {
        var n2 = r2(8764).Buffer;
        const i = e2.exports;
        i.types = { 0: "reserved", 1: "connect", 2: "connack", 3: "publish", 4: "puback", 5: "pubrec", 6: "pubrel", 7: "pubcomp", 8: "subscribe", 9: "suback", 10: "unsubscribe", 11: "unsuback", 12: "pingreq", 13: "pingresp", 14: "disconnect", 15: "auth" }, i.codes = {};
        for (const e3 in i.types) {
          const t3 = i.types[e3];
          i.codes[t3] = e3;
        }
        i.CMD_SHIFT = 4, i.CMD_MASK = 240, i.DUP_MASK = 8, i.QOS_MASK = 3, i.QOS_SHIFT = 1, i.RETAIN_MASK = 1, i.VARBYTEINT_MASK = 127, i.VARBYTEINT_FIN_MASK = 128, i.VARBYTEINT_MAX = 268435455, i.SESSIONPRESENT_MASK = 1, i.SESSIONPRESENT_HEADER = n2.from([i.SESSIONPRESENT_MASK]), i.CONNACK_HEADER = n2.from([i.codes.connack << i.CMD_SHIFT]), i.USERNAME_MASK = 128, i.PASSWORD_MASK = 64, i.WILL_RETAIN_MASK = 32, i.WILL_QOS_MASK = 24, i.WILL_QOS_SHIFT = 3, i.WILL_FLAG_MASK = 4, i.CLEAN_SESSION_MASK = 2, i.CONNECT_HEADER = n2.from([i.codes.connect << i.CMD_SHIFT]), i.properties = { sessionExpiryInterval: 17, willDelayInterval: 24, receiveMaximum: 33, maximumPacketSize: 39, topicAliasMaximum: 34, requestResponseInformation: 25, requestProblemInformation: 23, userProperties: 38, authenticationMethod: 21, authenticationData: 22, payloadFormatIndicator: 1, messageExpiryInterval: 2, contentType: 3, responseTopic: 8, correlationData: 9, maximumQoS: 36, retainAvailable: 37, assignedClientIdentifier: 18, reasonString: 31, wildcardSubscriptionAvailable: 40, subscriptionIdentifiersAvailable: 41, sharedSubscriptionAvailable: 42, serverKeepAlive: 19, responseInformation: 26, serverReference: 28, topicAlias: 35, subscriptionIdentifier: 11 }, i.propertiesCodes = {};
        for (const e3 in i.properties) {
          const t3 = i.properties[e3];
          i.propertiesCodes[t3] = e3;
        }
        function o(e3) {
          return [0, 1, 2].map((t3) => [0, 1].map((r3) => [0, 1].map((o2) => {
            const s = n2.alloc(1);
            return s.writeUInt8(i.codes[e3] << i.CMD_SHIFT | (r3 ? i.DUP_MASK : 0) | t3 << i.QOS_SHIFT | o2, 0, true), s;
          })));
        }
        i.propertiesTypes = { sessionExpiryInterval: "int32", willDelayInterval: "int32", receiveMaximum: "int16", maximumPacketSize: "int32", topicAliasMaximum: "int16", requestResponseInformation: "byte", requestProblemInformation: "byte", userProperties: "pair", authenticationMethod: "string", authenticationData: "binary", payloadFormatIndicator: "byte", messageExpiryInterval: "int32", contentType: "string", responseTopic: "string", correlationData: "binary", maximumQoS: "int8", retainAvailable: "byte", assignedClientIdentifier: "string", reasonString: "string", wildcardSubscriptionAvailable: "byte", subscriptionIdentifiersAvailable: "byte", sharedSubscriptionAvailable: "byte", serverKeepAlive: "int16", responseInformation: "string", serverReference: "string", topicAlias: "int16", subscriptionIdentifier: "var" }, i.PUBLISH_HEADER = o("publish"), i.SUBSCRIBE_HEADER = o("subscribe"), i.SUBSCRIBE_OPTIONS_QOS_MASK = 3, i.SUBSCRIBE_OPTIONS_NL_MASK = 1, i.SUBSCRIBE_OPTIONS_NL_SHIFT = 2, i.SUBSCRIBE_OPTIONS_RAP_MASK = 1, i.SUBSCRIBE_OPTIONS_RAP_SHIFT = 3, i.SUBSCRIBE_OPTIONS_RH_MASK = 3, i.SUBSCRIBE_OPTIONS_RH_SHIFT = 4, i.SUBSCRIBE_OPTIONS_RH = [0, 16, 32], i.SUBSCRIBE_OPTIONS_NL = 4, i.SUBSCRIBE_OPTIONS_RAP = 8, i.SUBSCRIBE_OPTIONS_QOS = [0, 1, 2], i.UNSUBSCRIBE_HEADER = o("unsubscribe"), i.ACKS = { unsuback: o("unsuback"), puback: o("puback"), pubcomp: o("pubcomp"), pubrel: o("pubrel"), pubrec: o("pubrec") }, i.SUBACK_HEADER = n2.from([i.codes.suback << i.CMD_SHIFT]), i.VERSION3 = n2.from([3]), i.VERSION4 = n2.from([4]), i.VERSION5 = n2.from([5]), i.VERSION131 = n2.from([131]), i.VERSION132 = n2.from([132]), i.QOS = [0, 1, 2].map((e3) => n2.from([e3])), i.EMPTY = { pingreq: n2.from([i.codes.pingreq << 4, 0]), pingresp: n2.from([i.codes.pingresp << 4, 0]), disconnect: n2.from([i.codes.disconnect << 4, 0]) };
      }, 7721: function(e2, t2, r2) {
        var n2 = r2(8764).Buffer;
        const i = r2(9371), o = r2(7187);
        class s extends o {
          constructor() {
            super(), this._array = new Array(20), this._i = 0;
          }
          write(e3) {
            return this._array[this._i++] = e3, true;
          }
          concat() {
            let e3 = 0;
            const t3 = new Array(this._array.length), r3 = this._array;
            let i2, o2 = 0;
            for (i2 = 0; i2 < r3.length && void 0 !== r3[i2]; i2++) "string" != typeof r3[i2] ? t3[i2] = r3[i2].length : t3[i2] = n2.byteLength(r3[i2]), e3 += t3[i2];
            const s2 = n2.allocUnsafe(e3);
            for (i2 = 0; i2 < r3.length && void 0 !== r3[i2]; i2++) "string" != typeof r3[i2] ? (r3[i2].copy(s2, o2), o2 += t3[i2]) : (s2.write(r3[i2], o2), o2 += t3[i2]);
            return s2;
          }
        }
        e2.exports = function(e3, t3) {
          const r3 = new s();
          return i(e3, r3, t3), r3.concat();
        };
      }, 1772: function(e2, t2, r2) {
        t2.parser = r2(5322).parser, t2.generate = r2(7721), t2.writeToStream = r2(9371);
      }, 3903: function(e2, t2, r2) {
        var n2 = r2(8764).Buffer;
        const i = {}, o = n2.isBuffer(n2.from([1, 2]).subarray(0, 1));
        function s(e3) {
          const t3 = n2.allocUnsafe(2);
          return t3.writeUInt8(e3 >> 8, 0), t3.writeUInt8(255 & e3, 1), t3;
        }
        e2.exports = { cache: i, generateCache: function() {
          for (let e3 = 0; e3 < 65536; e3++) i[e3] = s(e3);
        }, generateNumber: s, genBufVariableByteInt: function(e3) {
          let t3 = 0, r3 = 0;
          const i2 = n2.allocUnsafe(4);
          do {
            t3 = e3 % 128 | 0, (e3 = e3 / 128 | 0) > 0 && (t3 |= 128), i2.writeUInt8(t3, r3++);
          } while (e3 > 0 && r3 < 4);
          return e3 > 0 && (r3 = 0), o ? i2.subarray(0, r3) : i2.slice(0, r3);
        }, generate4ByteBuffer: function(e3) {
          const t3 = n2.allocUnsafe(4);
          return t3.writeUInt32BE(e3, 0), t3;
        } };
      }, 9695: function(e2) {
        e2.exports = class {
          constructor() {
            this.cmd = null, this.retain = false, this.qos = 0, this.dup = false, this.length = -1, this.topic = null, this.payload = null;
          }
        };
      }, 5322: function(e2, t2, r2) {
        const n2 = r2(22), i = r2(7187), o = r2(9695), s = r2(9990), a = r2(1227)("mqtt-packet:parser");
        class u extends i {
          constructor() {
            super(), this.parser = this.constructor.parser;
          }
          static parser(e3) {
            return this instanceof u ? (this.settings = e3 || {}, this._states = ["_parseHeader", "_parseLength", "_parsePayload", "_newPacket"], this._resetState(), this) : new u().parser(e3);
          }
          _resetState() {
            a("_resetState: resetting packet, error, _list, and _stateCounter"), this.packet = new o(), this.error = null, this._list = n2(), this._stateCounter = 0;
          }
          parse(e3) {
            for (this.error && this._resetState(), this._list.append(e3), a("parse: current state: %s", this._states[this._stateCounter]); (-1 !== this.packet.length || this._list.length > 0) && this[this._states[this._stateCounter]]() && !this.error; ) this._stateCounter++, a("parse: state complete. _stateCounter is now: %d", this._stateCounter), a("parse: packet.length: %d, buffer list length: %d", this.packet.length, this._list.length), this._stateCounter >= this._states.length && (this._stateCounter = 0);
            return a("parse: exited while loop. packet: %d, buffer list length: %d", this.packet.length, this._list.length), this._list.length;
          }
          _parseHeader() {
            const e3 = this._list.readUInt8(0);
            return this.packet.cmd = s.types[e3 >> s.CMD_SHIFT], this.packet.retain = 0 != (e3 & s.RETAIN_MASK), this.packet.qos = e3 >> s.QOS_SHIFT & s.QOS_MASK, this.packet.dup = 0 != (e3 & s.DUP_MASK), a("_parseHeader: packet: %o", this.packet), this._list.consume(1), true;
          }
          _parseLength() {
            const e3 = this._parseVarByteNum(true);
            return e3 && (this.packet.length = e3.value, this._list.consume(e3.bytes)), a("_parseLength %d", e3.value), !!e3;
          }
          _parsePayload() {
            a("_parsePayload: payload %O", this._list);
            let e3 = false;
            if (0 === this.packet.length || this._list.length >= this.packet.length) {
              switch (this._pos = 0, this.packet.cmd) {
                case "connect":
                  this._parseConnect();
                  break;
                case "connack":
                  this._parseConnack();
                  break;
                case "publish":
                  this._parsePublish();
                  break;
                case "puback":
                case "pubrec":
                case "pubrel":
                case "pubcomp":
                  this._parseConfirmation();
                  break;
                case "subscribe":
                  this._parseSubscribe();
                  break;
                case "suback":
                  this._parseSuback();
                  break;
                case "unsubscribe":
                  this._parseUnsubscribe();
                  break;
                case "unsuback":
                  this._parseUnsuback();
                  break;
                case "pingreq":
                case "pingresp":
                  break;
                case "disconnect":
                  this._parseDisconnect();
                  break;
                case "auth":
                  this._parseAuth();
                  break;
                default:
                  this._emitError(new Error("Not supported"));
              }
              e3 = true;
            }
            return a("_parsePayload complete result: %s", e3), e3;
          }
          _parseConnect() {
            let e3, t3, r3, n3;
            a("_parseConnect");
            const i2 = {}, o2 = this.packet, u2 = this._parseString();
            if (null === u2) return this._emitError(new Error("Cannot parse protocolId"));
            if ("MQTT" !== u2 && "MQIsdp" !== u2) return this._emitError(new Error("Invalid protocolId"));
            if (o2.protocolId = u2, this._pos >= this._list.length) return this._emitError(new Error("Packet too short"));
            if (o2.protocolVersion = this._list.readUInt8(this._pos), o2.protocolVersion >= 128 && (o2.bridgeMode = true, o2.protocolVersion = o2.protocolVersion - 128), 3 !== o2.protocolVersion && 4 !== o2.protocolVersion && 5 !== o2.protocolVersion) return this._emitError(new Error("Invalid protocol version"));
            if (this._pos++, this._pos >= this._list.length) return this._emitError(new Error("Packet too short"));
            if (i2.username = this._list.readUInt8(this._pos) & s.USERNAME_MASK, i2.password = this._list.readUInt8(this._pos) & s.PASSWORD_MASK, i2.will = this._list.readUInt8(this._pos) & s.WILL_FLAG_MASK, i2.will && (o2.will = {}, o2.will.retain = 0 != (this._list.readUInt8(this._pos) & s.WILL_RETAIN_MASK), o2.will.qos = (this._list.readUInt8(this._pos) & s.WILL_QOS_MASK) >> s.WILL_QOS_SHIFT), o2.clean = 0 != (this._list.readUInt8(this._pos) & s.CLEAN_SESSION_MASK), this._pos++, o2.keepalive = this._parseNum(), -1 === o2.keepalive) return this._emitError(new Error("Packet too short"));
            if (5 === o2.protocolVersion) {
              const e4 = this._parseProperties();
              Object.getOwnPropertyNames(e4).length && (o2.properties = e4);
            }
            const l = this._parseString();
            if (null === l) return this._emitError(new Error("Packet too short"));
            if (o2.clientId = l, a("_parseConnect: packet.clientId: %s", o2.clientId), i2.will) {
              if (5 === o2.protocolVersion) {
                const e4 = this._parseProperties();
                Object.getOwnPropertyNames(e4).length && (o2.will.properties = e4);
              }
              if (e3 = this._parseString(), null === e3) return this._emitError(new Error("Cannot parse will topic"));
              if (o2.will.topic = e3, a("_parseConnect: packet.will.topic: %s", o2.will.topic), t3 = this._parseBuffer(), null === t3) return this._emitError(new Error("Cannot parse will payload"));
              o2.will.payload = t3, a("_parseConnect: packet.will.paylaod: %s", o2.will.payload);
            }
            if (i2.username) {
              if (n3 = this._parseString(), null === n3) return this._emitError(new Error("Cannot parse username"));
              o2.username = n3, a("_parseConnect: packet.username: %s", o2.username);
            }
            if (i2.password) {
              if (r3 = this._parseBuffer(), null === r3) return this._emitError(new Error("Cannot parse password"));
              o2.password = r3;
            }
            return this.settings = o2, a("_parseConnect: complete"), o2;
          }
          _parseConnack() {
            a("_parseConnack");
            const e3 = this.packet;
            if (this._list.length < 1) return null;
            if (e3.sessionPresent = !!(this._list.readUInt8(this._pos++) & s.SESSIONPRESENT_MASK), 5 === this.settings.protocolVersion) this._list.length >= 2 ? e3.reasonCode = this._list.readUInt8(this._pos++) : e3.reasonCode = 0;
            else {
              if (this._list.length < 2) return null;
              e3.returnCode = this._list.readUInt8(this._pos++);
            }
            if (-1 === e3.returnCode || -1 === e3.reasonCode) return this._emitError(new Error("Cannot parse return code"));
            if (5 === this.settings.protocolVersion) {
              const t3 = this._parseProperties();
              Object.getOwnPropertyNames(t3).length && (e3.properties = t3);
            }
            a("_parseConnack: complete");
          }
          _parsePublish() {
            a("_parsePublish");
            const e3 = this.packet;
            if (e3.topic = this._parseString(), null === e3.topic) return this._emitError(new Error("Cannot parse topic"));
            if (!(e3.qos > 0) || this._parseMessageId()) {
              if (5 === this.settings.protocolVersion) {
                const t3 = this._parseProperties();
                Object.getOwnPropertyNames(t3).length && (e3.properties = t3);
              }
              e3.payload = this._list.slice(this._pos, e3.length), a("_parsePublish: payload from buffer list: %o", e3.payload);
            }
          }
          _parseSubscribe() {
            a("_parseSubscribe");
            const e3 = this.packet;
            let t3, r3, n3, i2, o2, u2, l;
            if (1 !== e3.qos) return this._emitError(new Error("Wrong subscribe header"));
            if (e3.subscriptions = [], this._parseMessageId()) {
              if (5 === this.settings.protocolVersion) {
                const t4 = this._parseProperties();
                Object.getOwnPropertyNames(t4).length && (e3.properties = t4);
              }
              for (; this._pos < e3.length; ) {
                if (t3 = this._parseString(), null === t3) return this._emitError(new Error("Cannot parse topic"));
                if (this._pos >= e3.length) return this._emitError(new Error("Malformed Subscribe Payload"));
                r3 = this._parseByte(), n3 = r3 & s.SUBSCRIBE_OPTIONS_QOS_MASK, u2 = 0 != (r3 >> s.SUBSCRIBE_OPTIONS_NL_SHIFT & s.SUBSCRIBE_OPTIONS_NL_MASK), o2 = 0 != (r3 >> s.SUBSCRIBE_OPTIONS_RAP_SHIFT & s.SUBSCRIBE_OPTIONS_RAP_MASK), i2 = r3 >> s.SUBSCRIBE_OPTIONS_RH_SHIFT & s.SUBSCRIBE_OPTIONS_RH_MASK, l = { topic: t3, qos: n3 }, 5 === this.settings.protocolVersion ? (l.nl = u2, l.rap = o2, l.rh = i2) : this.settings.bridgeMode && (l.rh = 0, l.rap = true, l.nl = true), a("_parseSubscribe: push subscription `%s` to subscription", l), e3.subscriptions.push(l);
              }
            }
          }
          _parseSuback() {
            a("_parseSuback");
            const e3 = this.packet;
            if (this.packet.granted = [], this._parseMessageId()) {
              if (5 === this.settings.protocolVersion) {
                const t3 = this._parseProperties();
                Object.getOwnPropertyNames(t3).length && (e3.properties = t3);
              }
              for (; this._pos < this.packet.length; ) this.packet.granted.push(this._list.readUInt8(this._pos++));
            }
          }
          _parseUnsubscribe() {
            a("_parseUnsubscribe");
            const e3 = this.packet;
            if (e3.unsubscriptions = [], this._parseMessageId()) {
              if (5 === this.settings.protocolVersion) {
                const t3 = this._parseProperties();
                Object.getOwnPropertyNames(t3).length && (e3.properties = t3);
              }
              for (; this._pos < e3.length; ) {
                const t3 = this._parseString();
                if (null === t3) return this._emitError(new Error("Cannot parse topic"));
                a("_parseUnsubscribe: push topic `%s` to unsubscriptions", t3), e3.unsubscriptions.push(t3);
              }
            }
          }
          _parseUnsuback() {
            a("_parseUnsuback");
            const e3 = this.packet;
            if (!this._parseMessageId()) return this._emitError(new Error("Cannot parse messageId"));
            if (5 === this.settings.protocolVersion) {
              const t3 = this._parseProperties();
              for (Object.getOwnPropertyNames(t3).length && (e3.properties = t3), e3.granted = []; this._pos < this.packet.length; ) this.packet.granted.push(this._list.readUInt8(this._pos++));
            }
          }
          _parseConfirmation() {
            a("_parseConfirmation: packet.cmd: `%s`", this.packet.cmd);
            const e3 = this.packet;
            if (this._parseMessageId(), 5 === this.settings.protocolVersion && (e3.length > 2 ? (e3.reasonCode = this._parseByte(), a("_parseConfirmation: packet.reasonCode `%d`", e3.reasonCode)) : e3.reasonCode = 0, e3.length > 3)) {
              const t3 = this._parseProperties();
              Object.getOwnPropertyNames(t3).length && (e3.properties = t3);
            }
            return true;
          }
          _parseDisconnect() {
            const e3 = this.packet;
            if (a("_parseDisconnect"), 5 === this.settings.protocolVersion) {
              this._list.length > 0 ? e3.reasonCode = this._parseByte() : e3.reasonCode = 0;
              const t3 = this._parseProperties();
              Object.getOwnPropertyNames(t3).length && (e3.properties = t3);
            }
            return a("_parseDisconnect result: true"), true;
          }
          _parseAuth() {
            a("_parseAuth");
            const e3 = this.packet;
            if (5 !== this.settings.protocolVersion) return this._emitError(new Error("Not supported auth packet for this version MQTT"));
            e3.reasonCode = this._parseByte();
            const t3 = this._parseProperties();
            return Object.getOwnPropertyNames(t3).length && (e3.properties = t3), a("_parseAuth: result: true"), true;
          }
          _parseMessageId() {
            const e3 = this.packet;
            return e3.messageId = this._parseNum(), null === e3.messageId ? (this._emitError(new Error("Cannot parse messageId")), false) : (a("_parseMessageId: packet.messageId %d", e3.messageId), true);
          }
          _parseString(e3) {
            const t3 = this._parseNum(), r3 = t3 + this._pos;
            if (-1 === t3 || r3 > this._list.length || r3 > this.packet.length) return null;
            const n3 = this._list.toString("utf8", this._pos, r3);
            return this._pos += t3, a("_parseString: result: %s", n3), n3;
          }
          _parseStringPair() {
            return a("_parseStringPair"), { name: this._parseString(), value: this._parseString() };
          }
          _parseBuffer() {
            const e3 = this._parseNum(), t3 = e3 + this._pos;
            if (-1 === e3 || t3 > this._list.length || t3 > this.packet.length) return null;
            const r3 = this._list.slice(this._pos, t3);
            return this._pos += e3, a("_parseBuffer: result: %o", r3), r3;
          }
          _parseNum() {
            if (this._list.length - this._pos < 2) return -1;
            const e3 = this._list.readUInt16BE(this._pos);
            return this._pos += 2, a("_parseNum: result: %s", e3), e3;
          }
          _parse4ByteNum() {
            if (this._list.length - this._pos < 4) return -1;
            const e3 = this._list.readUInt32BE(this._pos);
            return this._pos += 4, a("_parse4ByteNum: result: %s", e3), e3;
          }
          _parseVarByteNum(e3) {
            a("_parseVarByteNum");
            let t3, r3 = 0, n3 = 1, i2 = 0, o2 = false;
            const u2 = this._pos ? this._pos : 0;
            for (; r3 < 4 && u2 + r3 < this._list.length; ) {
              if (t3 = this._list.readUInt8(u2 + r3++), i2 += n3 * (t3 & s.VARBYTEINT_MASK), n3 *= 128, 0 == (t3 & s.VARBYTEINT_FIN_MASK)) {
                o2 = true;
                break;
              }
              if (this._list.length <= r3) break;
            }
            return !o2 && 4 === r3 && this._list.length >= r3 && this._emitError(new Error("Invalid variable byte integer")), u2 && (this._pos += r3), o2 = !!o2 && (e3 ? { bytes: r3, value: i2 } : i2), a("_parseVarByteNum: result: %o", o2), o2;
          }
          _parseByte() {
            let e3;
            return this._pos < this._list.length && (e3 = this._list.readUInt8(this._pos), this._pos++), a("_parseByte: result: %o", e3), e3;
          }
          _parseByType(e3) {
            switch (a("_parseByType: type: %s", e3), e3) {
              case "byte":
                return 0 !== this._parseByte();
              case "int8":
                return this._parseByte();
              case "int16":
                return this._parseNum();
              case "int32":
                return this._parse4ByteNum();
              case "var":
                return this._parseVarByteNum();
              case "string":
                return this._parseString();
              case "pair":
                return this._parseStringPair();
              case "binary":
                return this._parseBuffer();
            }
          }
          _parseProperties() {
            a("_parseProperties");
            const e3 = this._parseVarByteNum(), t3 = this._pos + e3, r3 = {};
            for (; this._pos < t3; ) {
              const e4 = this._parseByte();
              if (!e4) return this._emitError(new Error("Cannot parse property code type")), false;
              const t4 = s.propertiesCodes[e4];
              if (!t4) return this._emitError(new Error("Unknown property")), false;
              if ("userProperties" !== t4) r3[t4] ? (Array.isArray(r3[t4]) || (r3[t4] = [r3[t4]]), r3[t4].push(this._parseByType(s.propertiesTypes[t4]))) : r3[t4] = this._parseByType(s.propertiesTypes[t4]);
              else {
                r3[t4] || (r3[t4] = /* @__PURE__ */ Object.create(null));
                const e5 = this._parseByType(s.propertiesTypes[t4]);
                if (r3[t4][e5.name]) if (Array.isArray(r3[t4][e5.name])) r3[t4][e5.name].push(e5.value);
                else {
                  const n3 = r3[t4][e5.name];
                  r3[t4][e5.name] = [n3], r3[t4][e5.name].push(e5.value);
                }
                else r3[t4][e5.name] = e5.value;
              }
            }
            return r3;
          }
          _newPacket() {
            return a("_newPacket"), this.packet && (this._list.consume(this.packet.length), a("_newPacket: parser emit packet: packet.cmd: %s, packet.payload: %s, packet.length: %d", this.packet.cmd, this.packet.payload, this.packet.length), this.emit("packet", this.packet)), a("_newPacket: new packet"), this.packet = new o(), this._pos = 0, true;
          }
          _emitError(e3) {
            a("_emitError"), this.error = e3, this.emit("error", e3);
          }
        }
        e2.exports = u;
      }, 9371: function(e2, t2, r2) {
        var n2 = r2(8764).Buffer;
        const i = r2(9990), o = n2.allocUnsafe(0), s = n2.from([0]), a = r2(3903), u = r2(8212).nextTick, l = r2(1227)("mqtt-packet:writeToStream"), c = a.cache, h = a.generateNumber, f = a.generateCache, p = a.genBufVariableByteInt, d = a.generate4ByteBuffer;
        let y = k, g = true;
        function b(e3, t3, r3) {
          switch (l("generate called"), t3.cork && (t3.cork(), u(m, t3)), g && (g = false, f()), l("generate: packet.cmd: %s", e3.cmd), e3.cmd) {
            case "connect":
              return function(e4, t4, r4) {
                const o2 = e4 || {}, s2 = o2.protocolId || "MQTT";
                let a2 = o2.protocolVersion || 4;
                const u2 = o2.will;
                let l2 = o2.clean;
                const c2 = o2.keepalive || 0, h2 = o2.clientId || "", f2 = o2.username, p2 = o2.password, d2 = o2.properties;
                void 0 === l2 && (l2 = true);
                let g2 = 0;
                if (!s2 || "string" != typeof s2 && !n2.isBuffer(s2)) return t4.emit("error", new Error("Invalid protocolId")), false;
                if (g2 += s2.length + 2, 3 !== a2 && 4 !== a2 && 5 !== a2) return t4.emit("error", new Error("Invalid protocol version")), false;
                if (g2 += 1, ("string" == typeof h2 || n2.isBuffer(h2)) && (h2 || a2 >= 4) && (h2 || l2)) g2 += n2.byteLength(h2) + 2;
                else {
                  if (a2 < 4) return t4.emit("error", new Error("clientId must be supplied before 3.1.1")), false;
                  if (1 * l2 == 0) return t4.emit("error", new Error("clientId must be given if cleanSession set to 0")), false;
                }
                if ("number" != typeof c2 || c2 < 0 || c2 > 65535 || c2 % 1 != 0) return t4.emit("error", new Error("Invalid keepalive")), false;
                if (g2 += 2, g2 += 1, 5 === a2) {
                  var b2 = T(t4, d2);
                  if (!b2) return false;
                  g2 += b2.length;
                }
                if (u2) {
                  if ("object" != typeof u2) return t4.emit("error", new Error("Invalid will")), false;
                  if (!u2.topic || "string" != typeof u2.topic) return t4.emit("error", new Error("Invalid will topic")), false;
                  if (g2 += n2.byteLength(u2.topic) + 2, g2 += 2, u2.payload) {
                    if (!(u2.payload.length >= 0)) return t4.emit("error", new Error("Invalid will payload")), false;
                    "string" == typeof u2.payload ? g2 += n2.byteLength(u2.payload) : g2 += u2.payload.length;
                  }
                  var m2 = {};
                  if (5 === a2) {
                    if (!(m2 = T(t4, u2.properties))) return false;
                    g2 += m2.length;
                  }
                }
                let v2 = false;
                if (null != f2) {
                  if (!R(f2)) return t4.emit("error", new Error("Invalid username")), false;
                  v2 = true, g2 += n2.byteLength(f2) + 2;
                }
                if (null != p2) {
                  if (!v2) return t4.emit("error", new Error("Username is required to use password")), false;
                  if (!R(p2)) return t4.emit("error", new Error("Invalid password")), false;
                  g2 += B(p2) + 2;
                }
                t4.write(i.CONNECT_HEADER), w(t4, g2), C(t4, s2), o2.bridgeMode && (a2 += 128), t4.write(131 === a2 ? i.VERSION131 : 132 === a2 ? i.VERSION132 : 4 === a2 ? i.VERSION4 : 5 === a2 ? i.VERSION5 : i.VERSION3);
                let E2 = 0;
                return E2 |= null != f2 ? i.USERNAME_MASK : 0, E2 |= null != p2 ? i.PASSWORD_MASK : 0, E2 |= u2 && u2.retain ? i.WILL_RETAIN_MASK : 0, E2 |= u2 && u2.qos ? u2.qos << i.WILL_QOS_SHIFT : 0, E2 |= u2 ? i.WILL_FLAG_MASK : 0, E2 |= l2 ? i.CLEAN_SESSION_MASK : 0, t4.write(n2.from([E2])), y(t4, c2), 5 === a2 && b2.write(), C(t4, h2), u2 && (5 === a2 && m2.write(), _(t4, u2.topic), C(t4, u2.payload)), null != f2 && C(t4, f2), null != p2 && C(t4, p2), true;
              }(e3, t3);
            case "connack":
              return function(e4, t4, r4) {
                const o2 = r4 ? r4.protocolVersion : 4, a2 = e4 || {}, u2 = 5 === o2 ? a2.reasonCode : a2.returnCode, l2 = a2.properties;
                let c2 = 2;
                if ("number" != typeof u2) return t4.emit("error", new Error("Invalid return code")), false;
                let h2 = null;
                if (5 === o2) {
                  if (h2 = T(t4, l2), !h2) return false;
                  c2 += h2.length;
                }
                return t4.write(i.CONNACK_HEADER), w(t4, c2), t4.write(a2.sessionPresent ? i.SESSIONPRESENT_HEADER : s), t4.write(n2.from([u2])), null != h2 && h2.write(), true;
              }(e3, t3, r3);
            case "publish":
              return function(e4, t4, r4) {
                l("publish: packet: %o", e4);
                const s2 = r4 ? r4.protocolVersion : 4, a2 = e4 || {}, u2 = a2.qos || 0, c2 = a2.retain ? i.RETAIN_MASK : 0, h2 = a2.topic, f2 = a2.payload || o, p2 = a2.messageId, d2 = a2.properties;
                let g2 = 0;
                if ("string" == typeof h2) g2 += n2.byteLength(h2) + 2;
                else {
                  if (!n2.isBuffer(h2)) return t4.emit("error", new Error("Invalid topic")), false;
                  g2 += h2.length + 2;
                }
                if (n2.isBuffer(f2) ? g2 += f2.length : g2 += n2.byteLength(f2), u2 && "number" != typeof p2) return t4.emit("error", new Error("Invalid messageId")), false;
                u2 && (g2 += 2);
                let b2 = null;
                if (5 === s2) {
                  if (b2 = T(t4, d2), !b2) return false;
                  g2 += b2.length;
                }
                return t4.write(i.PUBLISH_HEADER[u2][a2.dup ? 1 : 0][c2 ? 1 : 0]), w(t4, g2), y(t4, B(h2)), t4.write(h2), u2 > 0 && y(t4, p2), null != b2 && b2.write(), l("publish: payload: %o", f2), t4.write(f2);
              }(e3, t3, r3);
            case "puback":
            case "pubrec":
            case "pubrel":
            case "pubcomp":
              return function(e4, t4, r4) {
                const o2 = r4 ? r4.protocolVersion : 4, s2 = e4 || {}, a2 = s2.cmd || "puback", u2 = s2.messageId, l2 = s2.dup && "pubrel" === a2 ? i.DUP_MASK : 0;
                let c2 = 0;
                const h2 = s2.reasonCode, f2 = s2.properties;
                let p2 = 5 === o2 ? 3 : 2;
                if ("pubrel" === a2 && (c2 = 1), "number" != typeof u2) return t4.emit("error", new Error("Invalid messageId")), false;
                let d2 = null;
                if (5 === o2 && "object" == typeof f2) {
                  if (d2 = A(t4, f2, r4, p2), !d2) return false;
                  p2 += d2.length;
                }
                return t4.write(i.ACKS[a2][c2][l2][0]), w(t4, p2), y(t4, u2), 5 === o2 && t4.write(n2.from([h2])), null !== d2 && d2.write(), true;
              }(e3, t3, r3);
            case "subscribe":
              return function(e4, t4, r4) {
                l("subscribe: packet: ");
                const o2 = r4 ? r4.protocolVersion : 4, s2 = e4 || {}, a2 = s2.dup ? i.DUP_MASK : 0, u2 = s2.messageId, c2 = s2.subscriptions, h2 = s2.properties;
                let f2 = 0;
                if ("number" != typeof u2) return t4.emit("error", new Error("Invalid messageId")), false;
                f2 += 2;
                let p2 = null;
                if (5 === o2) {
                  if (p2 = T(t4, h2), !p2) return false;
                  f2 += p2.length;
                }
                if ("object" != typeof c2 || !c2.length) return t4.emit("error", new Error("Invalid subscriptions")), false;
                for (let e5 = 0; e5 < c2.length; e5 += 1) {
                  const r5 = c2[e5].topic, i2 = c2[e5].qos;
                  if ("string" != typeof r5) return t4.emit("error", new Error("Invalid subscriptions - invalid topic")), false;
                  if ("number" != typeof i2) return t4.emit("error", new Error("Invalid subscriptions - invalid qos")), false;
                  if (5 === o2) {
                    if ("boolean" != typeof (c2[e5].nl || false)) return t4.emit("error", new Error("Invalid subscriptions - invalid No Local")), false;
                    if ("boolean" != typeof (c2[e5].rap || false)) return t4.emit("error", new Error("Invalid subscriptions - invalid Retain as Published")), false;
                    const r6 = c2[e5].rh || 0;
                    if ("number" != typeof r6 || r6 > 2) return t4.emit("error", new Error("Invalid subscriptions - invalid Retain Handling")), false;
                  }
                  f2 += n2.byteLength(r5) + 2 + 1;
                }
                l("subscribe: writing to stream: %o", i.SUBSCRIBE_HEADER), t4.write(i.SUBSCRIBE_HEADER[1][a2 ? 1 : 0][0]), w(t4, f2), y(t4, u2), null !== p2 && p2.write();
                let d2 = true;
                for (const e5 of c2) {
                  const r5 = e5.topic, s3 = e5.qos, a3 = +e5.nl, u3 = +e5.rap, l2 = e5.rh;
                  let c3;
                  _(t4, r5), c3 = i.SUBSCRIBE_OPTIONS_QOS[s3], 5 === o2 && (c3 |= a3 ? i.SUBSCRIBE_OPTIONS_NL : 0, c3 |= u3 ? i.SUBSCRIBE_OPTIONS_RAP : 0, c3 |= l2 ? i.SUBSCRIBE_OPTIONS_RH[l2] : 0), d2 = t4.write(n2.from([c3]));
                }
                return d2;
              }(e3, t3, r3);
            case "suback":
              return function(e4, t4, r4) {
                const o2 = r4 ? r4.protocolVersion : 4, s2 = e4 || {}, a2 = s2.messageId, u2 = s2.granted, l2 = s2.properties;
                let c2 = 0;
                if ("number" != typeof a2) return t4.emit("error", new Error("Invalid messageId")), false;
                if (c2 += 2, "object" != typeof u2 || !u2.length) return t4.emit("error", new Error("Invalid qos vector")), false;
                for (let e5 = 0; e5 < u2.length; e5 += 1) {
                  if ("number" != typeof u2[e5]) return t4.emit("error", new Error("Invalid qos vector")), false;
                  c2 += 1;
                }
                let h2 = null;
                if (5 === o2) {
                  if (h2 = A(t4, l2, r4, c2), !h2) return false;
                  c2 += h2.length;
                }
                return t4.write(i.SUBACK_HEADER), w(t4, c2), y(t4, a2), null !== h2 && h2.write(), t4.write(n2.from(u2));
              }(e3, t3, r3);
            case "unsubscribe":
              return function(e4, t4, r4) {
                const o2 = r4 ? r4.protocolVersion : 4, s2 = e4 || {}, a2 = s2.messageId, u2 = s2.dup ? i.DUP_MASK : 0, l2 = s2.unsubscriptions, c2 = s2.properties;
                let h2 = 0;
                if ("number" != typeof a2) return t4.emit("error", new Error("Invalid messageId")), false;
                if (h2 += 2, "object" != typeof l2 || !l2.length) return t4.emit("error", new Error("Invalid unsubscriptions")), false;
                for (let e5 = 0; e5 < l2.length; e5 += 1) {
                  if ("string" != typeof l2[e5]) return t4.emit("error", new Error("Invalid unsubscriptions")), false;
                  h2 += n2.byteLength(l2[e5]) + 2;
                }
                let f2 = null;
                if (5 === o2) {
                  if (f2 = T(t4, c2), !f2) return false;
                  h2 += f2.length;
                }
                t4.write(i.UNSUBSCRIBE_HEADER[1][u2 ? 1 : 0][0]), w(t4, h2), y(t4, a2), null !== f2 && f2.write();
                let p2 = true;
                for (let e5 = 0; e5 < l2.length; e5++) p2 = _(t4, l2[e5]);
                return p2;
              }(e3, t3, r3);
            case "unsuback":
              return function(e4, t4, r4) {
                const o2 = r4 ? r4.protocolVersion : 4, s2 = e4 || {}, a2 = s2.messageId, u2 = s2.dup ? i.DUP_MASK : 0, l2 = s2.granted, c2 = s2.properties, h2 = s2.cmd;
                let f2 = 2;
                if ("number" != typeof a2) return t4.emit("error", new Error("Invalid messageId")), false;
                if (5 === o2) {
                  if ("object" != typeof l2 || !l2.length) return t4.emit("error", new Error("Invalid qos vector")), false;
                  for (let e5 = 0; e5 < l2.length; e5 += 1) {
                    if ("number" != typeof l2[e5]) return t4.emit("error", new Error("Invalid qos vector")), false;
                    f2 += 1;
                  }
                }
                let p2 = null;
                if (5 === o2) {
                  if (p2 = A(t4, c2, r4, f2), !p2) return false;
                  f2 += p2.length;
                }
                return t4.write(i.ACKS[h2][0][u2][0]), w(t4, f2), y(t4, a2), null !== p2 && p2.write(), 5 === o2 && t4.write(n2.from(l2)), true;
              }(e3, t3, r3);
            case "pingreq":
            case "pingresp":
              return function(e4, t4, r4) {
                return t4.write(i.EMPTY[e4.cmd]);
              }(e3, t3);
            case "disconnect":
              return function(e4, t4, r4) {
                const o2 = r4 ? r4.protocolVersion : 4, s2 = e4 || {}, a2 = s2.reasonCode, u2 = s2.properties;
                let l2 = 5 === o2 ? 1 : 0, c2 = null;
                if (5 === o2) {
                  if (c2 = A(t4, u2, r4, l2), !c2) return false;
                  l2 += c2.length;
                }
                return t4.write(n2.from([i.codes.disconnect << 4])), w(t4, l2), 5 === o2 && t4.write(n2.from([a2])), null !== c2 && c2.write(), true;
              }(e3, t3, r3);
            case "auth":
              return function(e4, t4, r4) {
                const o2 = r4 ? r4.protocolVersion : 4, s2 = e4 || {}, a2 = s2.reasonCode, u2 = s2.properties;
                let l2 = 5 === o2 ? 1 : 0;
                5 !== o2 && t4.emit("error", new Error("Invalid mqtt version for auth packet"));
                const c2 = A(t4, u2, r4, l2);
                return !!c2 && (l2 += c2.length, t4.write(n2.from([i.codes.auth << 4])), w(t4, l2), t4.write(n2.from([a2])), null !== c2 && c2.write(), true);
              }(e3, t3, r3);
            default:
              return t3.emit("error", new Error("Unknown command")), false;
          }
        }
        function m(e3) {
          e3.uncork();
        }
        Object.defineProperty(b, "cacheNumbers", { get: () => y === k, set(e3) {
          e3 ? (c && 0 !== Object.keys(c).length || (g = true), y = k) : (g = false, y = S);
        } });
        const v = {};
        function w(e3, t3) {
          if (t3 > i.VARBYTEINT_MAX) return e3.emit("error", new Error(`Invalid variable byte integer: ${t3}`)), false;
          let r3 = v[t3];
          return r3 || (r3 = p(t3), t3 < 16384 && (v[t3] = r3)), l("writeVarByteInt: writing to stream: %o", r3), e3.write(r3);
        }
        function _(e3, t3) {
          const r3 = n2.byteLength(t3);
          return y(e3, r3), l("writeString: %s", t3), e3.write(t3, "utf8");
        }
        function E(e3, t3, r3) {
          _(e3, t3), _(e3, r3);
        }
        function k(e3, t3) {
          return l("writeNumberCached: number: %d", t3), l("writeNumberCached: %o", c[t3]), e3.write(c[t3]);
        }
        function S(e3, t3) {
          const r3 = h(t3);
          return l("writeNumberGenerated: %o", r3), e3.write(r3);
        }
        function C(e3, t3) {
          "string" == typeof t3 ? _(e3, t3) : t3 ? (y(e3, t3.length), e3.write(t3)) : y(e3, 0);
        }
        function T(e3, t3) {
          if ("object" != typeof t3 || null != t3.length) return { length: 1, write() {
            x(e3, {}, 0);
          } };
          let r3 = 0;
          function o2(t4, r4) {
            let o3 = 0;
            switch (i.propertiesTypes[t4]) {
              case "byte":
                if ("boolean" != typeof r4) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += 2;
                break;
              case "int8":
                if ("number" != typeof r4 || r4 < 0 || r4 > 255) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += 2;
                break;
              case "binary":
                if (r4 && null === r4) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += 1 + n2.byteLength(r4) + 2;
                break;
              case "int16":
                if ("number" != typeof r4 || r4 < 0 || r4 > 65535) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += 3;
                break;
              case "int32":
                if ("number" != typeof r4 || r4 < 0 || r4 > 4294967295) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += 5;
                break;
              case "var":
                if ("number" != typeof r4 || r4 < 0 || r4 > 268435455) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += 1 + n2.byteLength(p(r4));
                break;
              case "string":
                if ("string" != typeof r4) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += 3 + n2.byteLength(r4.toString());
                break;
              case "pair":
                if ("object" != typeof r4) return e3.emit("error", new Error(`Invalid ${t4}: ${r4}`)), false;
                o3 += Object.getOwnPropertyNames(r4).reduce((e4, t5) => {
                  const i2 = r4[t5];
                  return Array.isArray(i2) ? e4 += i2.reduce((e5, r5) => e5 + (3 + n2.byteLength(t5.toString()) + 2 + n2.byteLength(r5.toString())), 0) : e4 += 3 + n2.byteLength(t5.toString()) + 2 + n2.byteLength(r4[t5].toString()), e4;
                }, 0);
                break;
              default:
                return e3.emit("error", new Error(`Invalid property ${t4}: ${r4}`)), false;
            }
            return o3;
          }
          if (t3) for (const e4 in t3) {
            let n3 = 0, i2 = 0;
            const s2 = t3[e4];
            if (Array.isArray(s2)) for (let t4 = 0; t4 < s2.length; t4++) {
              if (i2 = o2(e4, s2[t4]), !i2) return false;
              n3 += i2;
            }
            else {
              if (i2 = o2(e4, s2), !i2) return false;
              n3 = i2;
            }
            if (!n3) return false;
            r3 += n3;
          }
          return { length: n2.byteLength(p(r3)) + r3, write() {
            x(e3, t3, r3);
          } };
        }
        function A(e3, t3, r3, n3) {
          const i2 = ["reasonString", "userProperties"], o2 = r3 && r3.properties && r3.properties.maximumPacketSize ? r3.properties.maximumPacketSize : 0;
          let s2 = T(e3, t3);
          if (o2) for (; n3 + s2.length > o2; ) {
            const r4 = i2.shift();
            if (!r4 || !t3[r4]) return false;
            delete t3[r4], s2 = T(e3, t3);
          }
          return s2;
        }
        function I(e3, t3, r3) {
          switch (i.propertiesTypes[t3]) {
            case "byte":
              e3.write(n2.from([i.properties[t3]])), e3.write(n2.from([+r3]));
              break;
            case "int8":
              e3.write(n2.from([i.properties[t3]])), e3.write(n2.from([r3]));
              break;
            case "binary":
              e3.write(n2.from([i.properties[t3]])), C(e3, r3);
              break;
            case "int16":
              e3.write(n2.from([i.properties[t3]])), y(e3, r3);
              break;
            case "int32":
              e3.write(n2.from([i.properties[t3]])), function(e4, t4) {
                const r4 = d(t4);
                l("write4ByteNumber: %o", r4), e4.write(r4);
              }(e3, r3);
              break;
            case "var":
              e3.write(n2.from([i.properties[t3]])), w(e3, r3);
              break;
            case "string":
              e3.write(n2.from([i.properties[t3]])), _(e3, r3);
              break;
            case "pair":
              Object.getOwnPropertyNames(r3).forEach((o2) => {
                const s2 = r3[o2];
                Array.isArray(s2) ? s2.forEach((r4) => {
                  e3.write(n2.from([i.properties[t3]])), E(e3, o2.toString(), r4.toString());
                }) : (e3.write(n2.from([i.properties[t3]])), E(e3, o2.toString(), s2.toString()));
              });
              break;
            default:
              return e3.emit("error", new Error(`Invalid property ${t3} value: ${r3}`)), false;
          }
        }
        function x(e3, t3, r3) {
          w(e3, r3);
          for (const r4 in t3) if (Object.prototype.hasOwnProperty.call(t3, r4) && null !== t3[r4]) {
            const n3 = t3[r4];
            if (Array.isArray(n3)) for (let t4 = 0; t4 < n3.length; t4++) I(e3, r4, n3[t4]);
            else I(e3, r4, n3);
          }
        }
        function B(e3) {
          return e3 ? e3 instanceof n2 ? e3.length : n2.byteLength(e3) : 0;
        }
        function R(e3) {
          return "string" == typeof e3 || e3 instanceof n2;
        }
        e2.exports = b;
      }, 7824: function(e2) {
        var t2 = 1e3, r2 = 60 * t2, n2 = 60 * r2, i = 24 * n2;
        function o(e3, t3, r3, n3) {
          var i2 = t3 >= 1.5 * r3;
          return Math.round(e3 / r3) + " " + n3 + (i2 ? "s" : "");
        }
        e2.exports = function(e3, s) {
          s = s || {};
          var a, u, l = typeof e3;
          if ("string" === l && e3.length > 0) return function(e4) {
            if (!((e4 = String(e4)).length > 100)) {
              var o2 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e4);
              if (o2) {
                var s2 = parseFloat(o2[1]);
                switch ((o2[2] || "ms").toLowerCase()) {
                  case "years":
                  case "year":
                  case "yrs":
                  case "yr":
                  case "y":
                    return 315576e5 * s2;
                  case "weeks":
                  case "week":
                  case "w":
                    return 6048e5 * s2;
                  case "days":
                  case "day":
                  case "d":
                    return s2 * i;
                  case "hours":
                  case "hour":
                  case "hrs":
                  case "hr":
                  case "h":
                    return s2 * n2;
                  case "minutes":
                  case "minute":
                  case "mins":
                  case "min":
                  case "m":
                    return s2 * r2;
                  case "seconds":
                  case "second":
                  case "secs":
                  case "sec":
                  case "s":
                    return s2 * t2;
                  case "milliseconds":
                  case "millisecond":
                  case "msecs":
                  case "msec":
                  case "ms":
                    return s2;
                  default:
                    return;
                }
              }
            }
          }(e3);
          if ("number" === l && isFinite(e3)) return s.long ? (a = e3, (u = Math.abs(a)) >= i ? o(a, u, i, "day") : u >= n2 ? o(a, u, n2, "hour") : u >= r2 ? o(a, u, r2, "minute") : u >= t2 ? o(a, u, t2, "second") : a + " ms") : function(e4) {
            var o2 = Math.abs(e4);
            return o2 >= i ? Math.round(e4 / i) + "d" : o2 >= n2 ? Math.round(e4 / n2) + "h" : o2 >= r2 ? Math.round(e4 / r2) + "m" : o2 >= t2 ? Math.round(e4 / t2) + "s" : e4 + "ms";
          }(e3);
          throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e3));
        };
      }, 423: function(e2, t2, r2) {
        const n2 = r2(9759);
        e2.exports.Q = n2;
      }, 9759: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(9246).l4, i = r2(1227)("number-allocator:trace"), o = r2(1227)("number-allocator:error");
        function s(e3, t3) {
          this.low = e3, this.high = t3;
        }
        function a(e3, t3) {
          if (!(this instanceof a)) return new a(e3, t3);
          this.min = e3, this.max = t3, this.ss = new n2([], (e4, t4) => e4.compare(t4)), i("Create"), this.clear();
        }
        s.prototype.equals = function(e3) {
          return this.low === e3.low && this.high === e3.high;
        }, s.prototype.compare = function(e3) {
          return this.low < e3.low && this.high < e3.low ? -1 : e3.low < this.low && e3.high < this.low ? 1 : 0;
        }, a.prototype.firstVacant = function() {
          return 0 === this.ss.size() ? null : this.ss.front().low;
        }, a.prototype.alloc = function() {
          if (0 === this.ss.size()) return i("alloc():empty"), null;
          const e3 = this.ss.front(), t3 = e3.low;
          return t3 + 1 <= e3.high ? ++e3.low : this.ss.eraseElementByPos(0), i("alloc():" + t3), t3;
        }, a.prototype.use = function(e3) {
          const t3 = new s(e3, e3), r3 = this.ss.lowerBound(t3);
          if (r3) {
            if (r3.equals(t3)) return this.ss.eraseElementByValue(r3), i("use():" + e3), true;
            if (r3.low > e3) return false;
            if (r3.low === e3) return ++r3.low, i("use():" + e3), true;
            if (r3.high === e3) return --r3.high, i("use():" + e3), true;
            const n3 = r3.low;
            return r3.low = e3 + 1, this.ss.insert(new s(n3, e3 - 1)), i("use():" + e3), true;
          }
          return i("use():failed"), false;
        }, a.prototype.free = function(e3) {
          if (e3 < this.min || e3 > this.max) return void o("free():" + e3 + " is out of range");
          const t3 = new s(e3, e3), r3 = this.ss.lowerBound(t3);
          if (r3) {
            if (r3.low <= e3 && e3 <= r3.high) return void o("free():" + e3 + " has already been vacant");
            if (r3 === this.ss.front()) e3 + 1 === r3.low ? --r3.low : this.ss.insert(t3);
            else {
              const n3 = this.ss.reverseLowerBound(t3);
              n3.high + 1 === e3 ? e3 + 1 === r3.low ? (this.ss.eraseElementByValue(n3), r3.low = n3.low) : n3.high = e3 : e3 + 1 === r3.low ? r3.low = e3 : this.ss.insert(t3);
            }
          } else {
            if (r3 === this.ss.front()) return void this.ss.insert(t3);
            const n3 = this.ss.reverseLowerBound(t3);
            n3.high + 1 === e3 ? n3.high = e3 : this.ss.insert(t3);
          }
          i("free():" + e3);
        }, a.prototype.clear = function() {
          i("clear()"), this.ss.clear(), this.ss.insert(new s(this.min, this.max));
        }, a.prototype.intervalCount = function() {
          return this.ss.size();
        }, a.prototype.dump = function() {
          console.log("length:" + this.ss.size());
          for (const e3 of this.ss) console.log(e3);
        }, e2.exports = a;
      }, 778: function(e2, t2, r2) {
        var n2 = r2(2479);
        function i(e3) {
          var t3 = function() {
            return t3.called ? t3.value : (t3.called = true, t3.value = e3.apply(this, arguments));
          };
          return t3.called = false, t3;
        }
        function o(e3) {
          var t3 = function() {
            if (t3.called) throw new Error(t3.onceError);
            return t3.called = true, t3.value = e3.apply(this, arguments);
          }, r3 = e3.name || "Function wrapped with `once`";
          return t3.onceError = r3 + " shouldn't be called more than once", t3.called = false, t3;
        }
        e2.exports = n2(i), e2.exports.strict = n2(o), i.proto = i(function() {
          Object.defineProperty(Function.prototype, "once", { value: function() {
            return i(this);
          }, configurable: true }), Object.defineProperty(Function.prototype, "onceStrict", { value: function() {
            return o(this);
          }, configurable: true });
        });
      }, 8212: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4155);
        void 0 === n2 || !n2.version || 0 === n2.version.indexOf("v0.") || 0 === n2.version.indexOf("v1.") && 0 !== n2.version.indexOf("v1.8.") ? e2.exports = { nextTick: function(e3, t3, r3, i) {
          if ("function" != typeof e3) throw new TypeError('"callback" argument must be a function');
          var o, s, a = arguments.length;
          switch (a) {
            case 0:
            case 1:
              return n2.nextTick(e3);
            case 2:
              return n2.nextTick(function() {
                e3.call(null, t3);
              });
            case 3:
              return n2.nextTick(function() {
                e3.call(null, t3, r3);
              });
            case 4:
              return n2.nextTick(function() {
                e3.call(null, t3, r3, i);
              });
            default:
              for (o = new Array(a - 1), s = 0; s < o.length; ) o[s++] = arguments[s];
              return n2.nextTick(function() {
                e3.apply(null, o);
              });
          }
        } } : e2.exports = n2;
      }, 4155: function(e2) {
        var t2, r2, n2 = e2.exports = {};
        function i() {
          throw new Error("setTimeout has not been defined");
        }
        function o() {
          throw new Error("clearTimeout has not been defined");
        }
        function s(e3) {
          if (t2 === setTimeout) return setTimeout(e3, 0);
          if ((t2 === i || !t2) && setTimeout) return t2 = setTimeout, setTimeout(e3, 0);
          try {
            return t2(e3, 0);
          } catch (r3) {
            try {
              return t2.call(null, e3, 0);
            } catch (r4) {
              return t2.call(this, e3, 0);
            }
          }
        }
        !function() {
          try {
            t2 = "function" == typeof setTimeout ? setTimeout : i;
          } catch (e3) {
            t2 = i;
          }
          try {
            r2 = "function" == typeof clearTimeout ? clearTimeout : o;
          } catch (e3) {
            r2 = o;
          }
        }();
        var a, u = [], l = false, c = -1;
        function h() {
          l && a && (l = false, a.length ? u = a.concat(u) : c = -1, u.length && f());
        }
        function f() {
          if (!l) {
            var e3 = s(h);
            l = true;
            for (var t3 = u.length; t3; ) {
              for (a = u, u = []; ++c < t3; ) a && a[c].run();
              c = -1, t3 = u.length;
            }
            a = null, l = false, function(e4) {
              if (r2 === clearTimeout) return clearTimeout(e4);
              if ((r2 === o || !r2) && clearTimeout) return r2 = clearTimeout, clearTimeout(e4);
              try {
                r2(e4);
              } catch (t4) {
                try {
                  return r2.call(null, e4);
                } catch (t5) {
                  return r2.call(this, e4);
                }
              }
            }(e3);
          }
        }
        function p(e3, t3) {
          this.fun = e3, this.array = t3;
        }
        function d() {
        }
        n2.nextTick = function(e3) {
          var t3 = new Array(arguments.length - 1);
          if (arguments.length > 1) for (var r3 = 1; r3 < arguments.length; r3++) t3[r3 - 1] = arguments[r3];
          u.push(new p(e3, t3)), 1 !== u.length || l || s(f);
        }, p.prototype.run = function() {
          this.fun.apply(null, this.array);
        }, n2.title = "browser", n2.browser = true, n2.env = {}, n2.argv = [], n2.version = "", n2.versions = {}, n2.on = d, n2.addListener = d, n2.once = d, n2.off = d, n2.removeListener = d, n2.removeAllListeners = d, n2.emit = d, n2.prependListener = d, n2.prependOnceListener = d, n2.listeners = function(e3) {
          return [];
        }, n2.binding = function(e3) {
          throw new Error("process.binding is not supported");
        }, n2.cwd = function() {
          return "/";
        }, n2.chdir = function(e3) {
          throw new Error("process.chdir is not supported");
        }, n2.umask = function() {
          return 0;
        };
      }, 2587: function(e2) {
        "use strict";
        function t2(e3, t3) {
          return Object.prototype.hasOwnProperty.call(e3, t3);
        }
        e2.exports = function(e3, r2, n2, i) {
          r2 = r2 || "&", n2 = n2 || "=";
          var o = {};
          if ("string" != typeof e3 || 0 === e3.length) return o;
          var s = /\+/g;
          e3 = e3.split(r2);
          var a = 1e3;
          i && "number" == typeof i.maxKeys && (a = i.maxKeys);
          var u = e3.length;
          a > 0 && u > a && (u = a);
          for (var l = 0; l < u; ++l) {
            var c, h, f, p, d = e3[l].replace(s, "%20"), y = d.indexOf(n2);
            y >= 0 ? (c = d.substr(0, y), h = d.substr(y + 1)) : (c = d, h = ""), f = decodeURIComponent(c), p = decodeURIComponent(h), t2(o, f) ? Array.isArray(o[f]) ? o[f].push(p) : o[f] = [o[f], p] : o[f] = p;
          }
          return o;
        };
      }, 2182: function(e2) {
        "use strict";
        var t2 = function(e3) {
          switch (typeof e3) {
            case "string":
              return e3;
            case "boolean":
              return e3 ? "true" : "false";
            case "number":
              return isFinite(e3) ? e3 : "";
            default:
              return "";
          }
        };
        e2.exports = function(e3, r2, n2, i) {
          return r2 = r2 || "&", n2 = n2 || "=", null === e3 && (e3 = void 0), "object" == typeof e3 ? Object.keys(e3).map(function(i2) {
            var o = encodeURIComponent(t2(i2)) + n2;
            return Array.isArray(e3[i2]) ? e3[i2].map(function(e4) {
              return o + encodeURIComponent(t2(e4));
            }).join(r2) : o + encodeURIComponent(t2(e3[i2]));
          }).join(r2) : i ? encodeURIComponent(t2(i)) + n2 + encodeURIComponent(t2(e3)) : "";
        };
      }, 7673: function(e2, t2, r2) {
        "use strict";
        t2.decode = t2.parse = r2(2587), t2.encode = t2.stringify = r2(2182);
      }, 4281: function(e2) {
        "use strict";
        var t2 = {};
        function r2(e3, r3, n3) {
          n3 || (n3 = Error);
          var i = function(e4) {
            var t3, n4;
            function i2(t4, n5, i3) {
              return e4.call(this, function(e5, t5, n6) {
                return "string" == typeof r3 ? r3 : r3(e5, t5, n6);
              }(t4, n5, i3)) || this;
            }
            return n4 = e4, (t3 = i2).prototype = Object.create(n4.prototype), t3.prototype.constructor = t3, t3.__proto__ = n4, i2;
          }(n3);
          i.prototype.name = n3.name, i.prototype.code = e3, t2[e3] = i;
        }
        function n2(e3, t3) {
          if (Array.isArray(e3)) {
            var r3 = e3.length;
            return e3 = e3.map(function(e4) {
              return String(e4);
            }), r3 > 2 ? "one of ".concat(t3, " ").concat(e3.slice(0, r3 - 1).join(", "), ", or ") + e3[r3 - 1] : 2 === r3 ? "one of ".concat(t3, " ").concat(e3[0], " or ").concat(e3[1]) : "of ".concat(t3, " ").concat(e3[0]);
          }
          return "of ".concat(t3, " ").concat(String(e3));
        }
        r2("ERR_INVALID_OPT_VALUE", function(e3, t3) {
          return 'The value "' + t3 + '" is invalid for option "' + e3 + '"';
        }, TypeError), r2("ERR_INVALID_ARG_TYPE", function(e3, t3, r3) {
          var i, o, s, a, u;
          if ("string" == typeof t3 && (o = "not ", t3.substr(0, o.length) === o) ? (i = "must not be", t3 = t3.replace(/^not /, "")) : i = "must be", function(e4, t4, r4) {
            return (void 0 === r4 || r4 > e4.length) && (r4 = e4.length), e4.substring(r4 - t4.length, r4) === t4;
          }(e3, " argument")) s = "The ".concat(e3, " ").concat(i, " ").concat(n2(t3, "type"));
          else {
            var l = ("number" != typeof u && (u = 0), u + ".".length > (a = e3).length || -1 === a.indexOf(".", u) ? "argument" : "property");
            s = 'The "'.concat(e3, '" ').concat(l, " ").concat(i, " ").concat(n2(t3, "type"));
          }
          return s + ". Received type ".concat(typeof r3);
        }, TypeError), r2("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), r2("ERR_METHOD_NOT_IMPLEMENTED", function(e3) {
          return "The " + e3 + " method is not implemented";
        }), r2("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), r2("ERR_STREAM_DESTROYED", function(e3) {
          return "Cannot call " + e3 + " after a stream was destroyed";
        }), r2("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), r2("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), r2("ERR_STREAM_WRITE_AFTER_END", "write after end"), r2("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), r2("ERR_UNKNOWN_ENCODING", function(e3) {
          return "Unknown encoding: " + e3;
        }, TypeError), r2("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), e2.exports.q = t2;
      }, 6753: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4155), i = Object.keys || function(e3) {
          var t3 = [];
          for (var r3 in e3) t3.push(r3);
          return t3;
        };
        e2.exports = c;
        var o = r2(9481), s = r2(4229);
        r2(5717)(c, o);
        for (var a = i(s.prototype), u = 0; u < a.length; u++) {
          var l = a[u];
          c.prototype[l] || (c.prototype[l] = s.prototype[l]);
        }
        function c(e3) {
          if (!(this instanceof c)) return new c(e3);
          o.call(this, e3), s.call(this, e3), this.allowHalfOpen = true, e3 && (false === e3.readable && (this.readable = false), false === e3.writable && (this.writable = false), false === e3.allowHalfOpen && (this.allowHalfOpen = false, this.once("end", h)));
        }
        function h() {
          this._writableState.ended || n2.nextTick(f, this);
        }
        function f(e3) {
          e3.end();
        }
        Object.defineProperty(c.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(c.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(c.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(c.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
        }, set: function(e3) {
          void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = e3, this._writableState.destroyed = e3);
        } });
      }, 2725: function(e2, t2, r2) {
        "use strict";
        e2.exports = i;
        var n2 = r2(4605);
        function i(e3) {
          if (!(this instanceof i)) return new i(e3);
          n2.call(this, e3);
        }
        r2(5717)(i, n2), i.prototype._transform = function(e3, t3, r3) {
          r3(null, e3);
        };
      }, 9481: function(e2, t2, r2) {
        "use strict";
        var n2, i = r2(4155);
        e2.exports = C, C.ReadableState = S, r2(7187).EventEmitter;
        var o, s = function(e3, t3) {
          return e3.listeners(t3).length;
        }, a = r2(2503), u = r2(8764).Buffer, l = r2.g.Uint8Array || function() {
        }, c = r2(4616);
        o = c && c.debuglog ? c.debuglog("stream") : function() {
        };
        var h, f, p, d = r2(7327), y = r2(1195), g = r2(2457).getHighWaterMark, b = r2(4281).q, m = b.ERR_INVALID_ARG_TYPE, v = b.ERR_STREAM_PUSH_AFTER_EOF, w = b.ERR_METHOD_NOT_IMPLEMENTED, _ = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        r2(5717)(C, a);
        var E = y.errorOrDestroy, k = ["error", "close", "destroy", "pause", "resume"];
        function S(e3, t3, i2) {
          n2 = n2 || r2(6753), e3 = e3 || {}, "boolean" != typeof i2 && (i2 = t3 instanceof n2), this.objectMode = !!e3.objectMode, i2 && (this.objectMode = this.objectMode || !!e3.readableObjectMode), this.highWaterMark = g(this, e3, "readableHighWaterMark", i2), this.buffer = new d(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = false !== e3.emitClose, this.autoDestroy = !!e3.autoDestroy, this.destroyed = false, this.defaultEncoding = e3.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, e3.encoding && (h || (h = r2(2553).s), this.decoder = new h(e3.encoding), this.encoding = e3.encoding);
        }
        function C(e3) {
          if (n2 = n2 || r2(6753), !(this instanceof C)) return new C(e3);
          var t3 = this instanceof n2;
          this._readableState = new S(e3, this, t3), this.readable = true, e3 && ("function" == typeof e3.read && (this._read = e3.read), "function" == typeof e3.destroy && (this._destroy = e3.destroy)), a.call(this);
        }
        function T(e3, t3, r3, n3, i2) {
          o("readableAddChunk", t3);
          var s2, a2 = e3._readableState;
          if (null === t3) a2.reading = false, function(e4, t4) {
            if (o("onEofChunk"), !t4.ended) {
              if (t4.decoder) {
                var r4 = t4.decoder.end();
                r4 && r4.length && (t4.buffer.push(r4), t4.length += t4.objectMode ? 1 : r4.length);
              }
              t4.ended = true, t4.sync ? B(e4) : (t4.needReadable = false, t4.emittedReadable || (t4.emittedReadable = true, R(e4)));
            }
          }(e3, a2);
          else if (i2 || (s2 = function(e4, t4) {
            var r4, n4;
            return n4 = t4, u.isBuffer(n4) || n4 instanceof l || "string" == typeof t4 || void 0 === t4 || e4.objectMode || (r4 = new m("chunk", ["string", "Buffer", "Uint8Array"], t4)), r4;
          }(a2, t3)), s2) E(e3, s2);
          else if (a2.objectMode || t3 && t3.length > 0) if ("string" == typeof t3 || a2.objectMode || Object.getPrototypeOf(t3) === u.prototype || (t3 = function(e4) {
            return u.from(e4);
          }(t3)), n3) a2.endEmitted ? E(e3, new _()) : A(e3, a2, t3, true);
          else if (a2.ended) E(e3, new v());
          else {
            if (a2.destroyed) return false;
            a2.reading = false, a2.decoder && !r3 ? (t3 = a2.decoder.write(t3), a2.objectMode || 0 !== t3.length ? A(e3, a2, t3, false) : O(e3, a2)) : A(e3, a2, t3, false);
          }
          else n3 || (a2.reading = false, O(e3, a2));
          return !a2.ended && (a2.length < a2.highWaterMark || 0 === a2.length);
        }
        function A(e3, t3, r3, n3) {
          t3.flowing && 0 === t3.length && !t3.sync ? (t3.awaitDrain = 0, e3.emit("data", r3)) : (t3.length += t3.objectMode ? 1 : r3.length, n3 ? t3.buffer.unshift(r3) : t3.buffer.push(r3), t3.needReadable && B(e3)), O(e3, t3);
        }
        Object.defineProperty(C.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._readableState && this._readableState.destroyed;
        }, set: function(e3) {
          this._readableState && (this._readableState.destroyed = e3);
        } }), C.prototype.destroy = y.destroy, C.prototype._undestroy = y.undestroy, C.prototype._destroy = function(e3, t3) {
          t3(e3);
        }, C.prototype.push = function(e3, t3) {
          var r3, n3 = this._readableState;
          return n3.objectMode ? r3 = true : "string" == typeof e3 && ((t3 = t3 || n3.defaultEncoding) !== n3.encoding && (e3 = u.from(e3, t3), t3 = ""), r3 = true), T(this, e3, t3, false, r3);
        }, C.prototype.unshift = function(e3) {
          return T(this, e3, null, true, false);
        }, C.prototype.isPaused = function() {
          return false === this._readableState.flowing;
        }, C.prototype.setEncoding = function(e3) {
          h || (h = r2(2553).s);
          var t3 = new h(e3);
          this._readableState.decoder = t3, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var n3 = this._readableState.buffer.head, i2 = ""; null !== n3; ) i2 += t3.write(n3.data), n3 = n3.next;
          return this._readableState.buffer.clear(), "" !== i2 && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
        };
        var I = 1073741824;
        function x(e3, t3) {
          return e3 <= 0 || 0 === t3.length && t3.ended ? 0 : t3.objectMode ? 1 : e3 != e3 ? t3.flowing && t3.length ? t3.buffer.head.data.length : t3.length : (e3 > t3.highWaterMark && (t3.highWaterMark = function(e4) {
            return e4 >= I ? e4 = I : (e4--, e4 |= e4 >>> 1, e4 |= e4 >>> 2, e4 |= e4 >>> 4, e4 |= e4 >>> 8, e4 |= e4 >>> 16, e4++), e4;
          }(e3)), e3 <= t3.length ? e3 : t3.ended ? t3.length : (t3.needReadable = true, 0));
        }
        function B(e3) {
          var t3 = e3._readableState;
          o("emitReadable", t3.needReadable, t3.emittedReadable), t3.needReadable = false, t3.emittedReadable || (o("emitReadable", t3.flowing), t3.emittedReadable = true, i.nextTick(R, e3));
        }
        function R(e3) {
          var t3 = e3._readableState;
          o("emitReadable_", t3.destroyed, t3.length, t3.ended), t3.destroyed || !t3.length && !t3.ended || (e3.emit("readable"), t3.emittedReadable = false), t3.needReadable = !t3.flowing && !t3.ended && t3.length <= t3.highWaterMark, U(e3);
        }
        function O(e3, t3) {
          t3.readingMore || (t3.readingMore = true, i.nextTick(P, e3, t3));
        }
        function P(e3, t3) {
          for (; !t3.reading && !t3.ended && (t3.length < t3.highWaterMark || t3.flowing && 0 === t3.length); ) {
            var r3 = t3.length;
            if (o("maybeReadMore read 0"), e3.read(0), r3 === t3.length) break;
          }
          t3.readingMore = false;
        }
        function N(e3) {
          var t3 = e3._readableState;
          t3.readableListening = e3.listenerCount("readable") > 0, t3.resumeScheduled && !t3.paused ? t3.flowing = true : e3.listenerCount("data") > 0 && e3.resume();
        }
        function M(e3) {
          o("readable nexttick read 0"), e3.read(0);
        }
        function L(e3, t3) {
          o("resume", t3.reading), t3.reading || e3.read(0), t3.resumeScheduled = false, e3.emit("resume"), U(e3), t3.flowing && !t3.reading && e3.read(0);
        }
        function U(e3) {
          var t3 = e3._readableState;
          for (o("flow", t3.flowing); t3.flowing && null !== e3.read(); ) ;
        }
        function j(e3, t3) {
          return 0 === t3.length ? null : (t3.objectMode ? r3 = t3.buffer.shift() : !e3 || e3 >= t3.length ? (r3 = t3.decoder ? t3.buffer.join("") : 1 === t3.buffer.length ? t3.buffer.first() : t3.buffer.concat(t3.length), t3.buffer.clear()) : r3 = t3.buffer.consume(e3, t3.decoder), r3);
          var r3;
        }
        function q(e3) {
          var t3 = e3._readableState;
          o("endReadable", t3.endEmitted), t3.endEmitted || (t3.ended = true, i.nextTick(z, t3, e3));
        }
        function z(e3, t3) {
          if (o("endReadableNT", e3.endEmitted, e3.length), !e3.endEmitted && 0 === e3.length && (e3.endEmitted = true, t3.readable = false, t3.emit("end"), e3.autoDestroy)) {
            var r3 = t3._writableState;
            (!r3 || r3.autoDestroy && r3.finished) && t3.destroy();
          }
        }
        function D(e3, t3) {
          for (var r3 = 0, n3 = e3.length; r3 < n3; r3++) if (e3[r3] === t3) return r3;
          return -1;
        }
        C.prototype.read = function(e3) {
          o("read", e3), e3 = parseInt(e3, 10);
          var t3 = this._readableState, r3 = e3;
          if (0 !== e3 && (t3.emittedReadable = false), 0 === e3 && t3.needReadable && ((0 !== t3.highWaterMark ? t3.length >= t3.highWaterMark : t3.length > 0) || t3.ended)) return o("read: emitReadable", t3.length, t3.ended), 0 === t3.length && t3.ended ? q(this) : B(this), null;
          if (0 === (e3 = x(e3, t3)) && t3.ended) return 0 === t3.length && q(this), null;
          var n3, i2 = t3.needReadable;
          return o("need readable", i2), (0 === t3.length || t3.length - e3 < t3.highWaterMark) && o("length less than watermark", i2 = true), t3.ended || t3.reading ? o("reading or ended", i2 = false) : i2 && (o("do read"), t3.reading = true, t3.sync = true, 0 === t3.length && (t3.needReadable = true), this._read(t3.highWaterMark), t3.sync = false, t3.reading || (e3 = x(r3, t3))), null === (n3 = e3 > 0 ? j(e3, t3) : null) ? (t3.needReadable = t3.length <= t3.highWaterMark, e3 = 0) : (t3.length -= e3, t3.awaitDrain = 0), 0 === t3.length && (t3.ended || (t3.needReadable = true), r3 !== e3 && t3.ended && q(this)), null !== n3 && this.emit("data", n3), n3;
        }, C.prototype._read = function(e3) {
          E(this, new w("_read()"));
        }, C.prototype.pipe = function(e3, t3) {
          var r3 = this, n3 = this._readableState;
          switch (n3.pipesCount) {
            case 0:
              n3.pipes = e3;
              break;
            case 1:
              n3.pipes = [n3.pipes, e3];
              break;
            default:
              n3.pipes.push(e3);
          }
          n3.pipesCount += 1, o("pipe count=%d opts=%j", n3.pipesCount, t3);
          var a2 = t3 && false === t3.end || e3 === i.stdout || e3 === i.stderr ? y2 : u2;
          function u2() {
            o("onend"), e3.end();
          }
          n3.endEmitted ? i.nextTick(a2) : r3.once("end", a2), e3.on("unpipe", function t4(i2, s2) {
            o("onunpipe"), i2 === r3 && s2 && false === s2.hasUnpiped && (s2.hasUnpiped = true, o("cleanup"), e3.removeListener("close", p2), e3.removeListener("finish", d2), e3.removeListener("drain", l2), e3.removeListener("error", f2), e3.removeListener("unpipe", t4), r3.removeListener("end", u2), r3.removeListener("end", y2), r3.removeListener("data", h2), c2 = true, !n3.awaitDrain || e3._writableState && !e3._writableState.needDrain || l2());
          });
          var l2 = /* @__PURE__ */ function(e4) {
            return function() {
              var t4 = e4._readableState;
              o("pipeOnDrain", t4.awaitDrain), t4.awaitDrain && t4.awaitDrain--, 0 === t4.awaitDrain && s(e4, "data") && (t4.flowing = true, U(e4));
            };
          }(r3);
          e3.on("drain", l2);
          var c2 = false;
          function h2(t4) {
            o("ondata");
            var i2 = e3.write(t4);
            o("dest.write", i2), false === i2 && ((1 === n3.pipesCount && n3.pipes === e3 || n3.pipesCount > 1 && -1 !== D(n3.pipes, e3)) && !c2 && (o("false write response, pause", n3.awaitDrain), n3.awaitDrain++), r3.pause());
          }
          function f2(t4) {
            o("onerror", t4), y2(), e3.removeListener("error", f2), 0 === s(e3, "error") && E(e3, t4);
          }
          function p2() {
            e3.removeListener("finish", d2), y2();
          }
          function d2() {
            o("onfinish"), e3.removeListener("close", p2), y2();
          }
          function y2() {
            o("unpipe"), r3.unpipe(e3);
          }
          return r3.on("data", h2), function(e4, t4, r4) {
            if ("function" == typeof e4.prependListener) return e4.prependListener(t4, r4);
            e4._events && e4._events.error ? Array.isArray(e4._events.error) ? e4._events.error.unshift(r4) : e4._events.error = [r4, e4._events.error] : e4.on(t4, r4);
          }(e3, "error", f2), e3.once("close", p2), e3.once("finish", d2), e3.emit("pipe", r3), n3.flowing || (o("pipe resume"), r3.resume()), e3;
        }, C.prototype.unpipe = function(e3) {
          var t3 = this._readableState, r3 = { hasUnpiped: false };
          if (0 === t3.pipesCount) return this;
          if (1 === t3.pipesCount) return e3 && e3 !== t3.pipes || (e3 || (e3 = t3.pipes), t3.pipes = null, t3.pipesCount = 0, t3.flowing = false, e3 && e3.emit("unpipe", this, r3)), this;
          if (!e3) {
            var n3 = t3.pipes, i2 = t3.pipesCount;
            t3.pipes = null, t3.pipesCount = 0, t3.flowing = false;
            for (var o2 = 0; o2 < i2; o2++) n3[o2].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var s2 = D(t3.pipes, e3);
          return -1 === s2 || (t3.pipes.splice(s2, 1), t3.pipesCount -= 1, 1 === t3.pipesCount && (t3.pipes = t3.pipes[0]), e3.emit("unpipe", this, r3)), this;
        }, C.prototype.on = function(e3, t3) {
          var r3 = a.prototype.on.call(this, e3, t3), n3 = this._readableState;
          return "data" === e3 ? (n3.readableListening = this.listenerCount("readable") > 0, false !== n3.flowing && this.resume()) : "readable" === e3 && (n3.endEmitted || n3.readableListening || (n3.readableListening = n3.needReadable = true, n3.flowing = false, n3.emittedReadable = false, o("on readable", n3.length, n3.reading), n3.length ? B(this) : n3.reading || i.nextTick(M, this))), r3;
        }, C.prototype.addListener = C.prototype.on, C.prototype.removeListener = function(e3, t3) {
          var r3 = a.prototype.removeListener.call(this, e3, t3);
          return "readable" === e3 && i.nextTick(N, this), r3;
        }, C.prototype.removeAllListeners = function(e3) {
          var t3 = a.prototype.removeAllListeners.apply(this, arguments);
          return "readable" !== e3 && void 0 !== e3 || i.nextTick(N, this), t3;
        }, C.prototype.resume = function() {
          var e3 = this._readableState;
          return e3.flowing || (o("resume"), e3.flowing = !e3.readableListening, function(e4, t3) {
            t3.resumeScheduled || (t3.resumeScheduled = true, i.nextTick(L, e4, t3));
          }(this, e3)), e3.paused = false, this;
        }, C.prototype.pause = function() {
          return o("call pause flowing=%j", this._readableState.flowing), false !== this._readableState.flowing && (o("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, C.prototype.wrap = function(e3) {
          var t3 = this, r3 = this._readableState, n3 = false;
          for (var i2 in e3.on("end", function() {
            if (o("wrapped end"), r3.decoder && !r3.ended) {
              var e4 = r3.decoder.end();
              e4 && e4.length && t3.push(e4);
            }
            t3.push(null);
          }), e3.on("data", function(i3) {
            o("wrapped data"), r3.decoder && (i3 = r3.decoder.write(i3)), r3.objectMode && null == i3 || (r3.objectMode || i3 && i3.length) && (t3.push(i3) || (n3 = true, e3.pause()));
          }), e3) void 0 === this[i2] && "function" == typeof e3[i2] && (this[i2] = /* @__PURE__ */ function(t4) {
            return function() {
              return e3[t4].apply(e3, arguments);
            };
          }(i2));
          for (var s2 = 0; s2 < k.length; s2++) e3.on(k[s2], this.emit.bind(this, k[s2]));
          return this._read = function(t4) {
            o("wrapped _read", t4), n3 && (n3 = false, e3.resume());
          }, this;
        }, "function" == typeof Symbol && (C.prototype[Symbol.asyncIterator] = function() {
          return void 0 === f && (f = r2(5850)), f(this);
        }), Object.defineProperty(C.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(C.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(C.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(e3) {
          this._readableState && (this._readableState.flowing = e3);
        } }), C._fromList = j, Object.defineProperty(C.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), "function" == typeof Symbol && (C.from = function(e3, t3) {
          return void 0 === p && (p = r2(5167)), p(C, e3, t3);
        });
      }, 4605: function(e2, t2, r2) {
        "use strict";
        e2.exports = c;
        var n2 = r2(4281).q, i = n2.ERR_METHOD_NOT_IMPLEMENTED, o = n2.ERR_MULTIPLE_CALLBACK, s = n2.ERR_TRANSFORM_ALREADY_TRANSFORMING, a = n2.ERR_TRANSFORM_WITH_LENGTH_0, u = r2(6753);
        function l(e3, t3) {
          var r3 = this._transformState;
          r3.transforming = false;
          var n3 = r3.writecb;
          if (null === n3) return this.emit("error", new o());
          r3.writechunk = null, r3.writecb = null, null != t3 && this.push(t3), n3(e3);
          var i2 = this._readableState;
          i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
        function c(e3) {
          if (!(this instanceof c)) return new c(e3);
          u.call(this, e3), this._transformState = { afterTransform: l.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, e3 && ("function" == typeof e3.transform && (this._transform = e3.transform), "function" == typeof e3.flush && (this._flush = e3.flush)), this.on("prefinish", h);
        }
        function h() {
          var e3 = this;
          "function" != typeof this._flush || this._readableState.destroyed ? f(this, null, null) : this._flush(function(t3, r3) {
            f(e3, t3, r3);
          });
        }
        function f(e3, t3, r3) {
          if (t3) return e3.emit("error", t3);
          if (null != r3 && e3.push(r3), e3._writableState.length) throw new a();
          if (e3._transformState.transforming) throw new s();
          return e3.push(null);
        }
        r2(5717)(c, u), c.prototype.push = function(e3, t3) {
          return this._transformState.needTransform = false, u.prototype.push.call(this, e3, t3);
        }, c.prototype._transform = function(e3, t3, r3) {
          r3(new i("_transform()"));
        }, c.prototype._write = function(e3, t3, r3) {
          var n3 = this._transformState;
          if (n3.writecb = r3, n3.writechunk = e3, n3.writeencoding = t3, !n3.transforming) {
            var i2 = this._readableState;
            (n3.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
          }
        }, c.prototype._read = function(e3) {
          var t3 = this._transformState;
          null === t3.writechunk || t3.transforming ? t3.needTransform = true : (t3.transforming = true, this._transform(t3.writechunk, t3.writeencoding, t3.afterTransform));
        }, c.prototype._destroy = function(e3, t3) {
          u.prototype._destroy.call(this, e3, function(e4) {
            t3(e4);
          });
        };
      }, 4229: function(e2, t2, r2) {
        "use strict";
        var n2, i = r2(4155);
        function o(e3) {
          var t3 = this;
          this.next = null, this.entry = null, this.finish = function() {
            !function(e4, t4, r3) {
              var n3 = e4.entry;
              for (e4.entry = null; n3; ) {
                var i2 = n3.callback;
                t4.pendingcb--, i2(void 0), n3 = n3.next;
              }
              t4.corkedRequestsFree.next = e4;
            }(t3, e3);
          };
        }
        e2.exports = C, C.WritableState = S;
        var s, a = { deprecate: r2(4927) }, u = r2(2503), l = r2(8764).Buffer, c = r2.g.Uint8Array || function() {
        }, h = r2(1195), f = r2(2457).getHighWaterMark, p = r2(4281).q, d = p.ERR_INVALID_ARG_TYPE, y = p.ERR_METHOD_NOT_IMPLEMENTED, g = p.ERR_MULTIPLE_CALLBACK, b = p.ERR_STREAM_CANNOT_PIPE, m = p.ERR_STREAM_DESTROYED, v = p.ERR_STREAM_NULL_VALUES, w = p.ERR_STREAM_WRITE_AFTER_END, _ = p.ERR_UNKNOWN_ENCODING, E = h.errorOrDestroy;
        function k() {
        }
        function S(e3, t3, s2) {
          n2 = n2 || r2(6753), e3 = e3 || {}, "boolean" != typeof s2 && (s2 = t3 instanceof n2), this.objectMode = !!e3.objectMode, s2 && (this.objectMode = this.objectMode || !!e3.writableObjectMode), this.highWaterMark = f(this, e3, "writableHighWaterMark", s2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var a2 = false === e3.decodeStrings;
          this.decodeStrings = !a2, this.defaultEncoding = e3.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(e4) {
            !function(e5, t4) {
              var r3 = e5._writableState, n3 = r3.sync, o2 = r3.writecb;
              if ("function" != typeof o2) throw new g();
              if (function(e6) {
                e6.writing = false, e6.writecb = null, e6.length -= e6.writelen, e6.writelen = 0;
              }(r3), t4) !function(e6, t5, r4, n4, o3) {
                --t5.pendingcb, r4 ? (i.nextTick(o3, n4), i.nextTick(R, e6, t5), e6._writableState.errorEmitted = true, E(e6, n4)) : (o3(n4), e6._writableState.errorEmitted = true, E(e6, n4), R(e6, t5));
              }(e5, r3, n3, t4, o2);
              else {
                var s3 = x(r3) || e5.destroyed;
                s3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || I(e5, r3), n3 ? i.nextTick(A, e5, r3, s3, o2) : A(e5, r3, s3, o2);
              }
            }(t3, e4);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = false !== e3.emitClose, this.autoDestroy = !!e3.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new o(this);
        }
        function C(e3) {
          var t3 = this instanceof (n2 = n2 || r2(6753));
          if (!t3 && !s.call(C, this)) return new C(e3);
          this._writableState = new S(e3, this, t3), this.writable = true, e3 && ("function" == typeof e3.write && (this._write = e3.write), "function" == typeof e3.writev && (this._writev = e3.writev), "function" == typeof e3.destroy && (this._destroy = e3.destroy), "function" == typeof e3.final && (this._final = e3.final)), u.call(this);
        }
        function T(e3, t3, r3, n3, i2, o2, s2) {
          t3.writelen = n3, t3.writecb = s2, t3.writing = true, t3.sync = true, t3.destroyed ? t3.onwrite(new m("write")) : r3 ? e3._writev(i2, t3.onwrite) : e3._write(i2, o2, t3.onwrite), t3.sync = false;
        }
        function A(e3, t3, r3, n3) {
          r3 || function(e4, t4) {
            0 === t4.length && t4.needDrain && (t4.needDrain = false, e4.emit("drain"));
          }(e3, t3), t3.pendingcb--, n3(), R(e3, t3);
        }
        function I(e3, t3) {
          t3.bufferProcessing = true;
          var r3 = t3.bufferedRequest;
          if (e3._writev && r3 && r3.next) {
            var n3 = t3.bufferedRequestCount, i2 = new Array(n3), s2 = t3.corkedRequestsFree;
            s2.entry = r3;
            for (var a2 = 0, u2 = true; r3; ) i2[a2] = r3, r3.isBuf || (u2 = false), r3 = r3.next, a2 += 1;
            i2.allBuffers = u2, T(e3, t3, true, t3.length, i2, "", s2.finish), t3.pendingcb++, t3.lastBufferedRequest = null, s2.next ? (t3.corkedRequestsFree = s2.next, s2.next = null) : t3.corkedRequestsFree = new o(t3), t3.bufferedRequestCount = 0;
          } else {
            for (; r3; ) {
              var l2 = r3.chunk, c2 = r3.encoding, h2 = r3.callback;
              if (T(e3, t3, false, t3.objectMode ? 1 : l2.length, l2, c2, h2), r3 = r3.next, t3.bufferedRequestCount--, t3.writing) break;
            }
            null === r3 && (t3.lastBufferedRequest = null);
          }
          t3.bufferedRequest = r3, t3.bufferProcessing = false;
        }
        function x(e3) {
          return e3.ending && 0 === e3.length && null === e3.bufferedRequest && !e3.finished && !e3.writing;
        }
        function B(e3, t3) {
          e3._final(function(r3) {
            t3.pendingcb--, r3 && E(e3, r3), t3.prefinished = true, e3.emit("prefinish"), R(e3, t3);
          });
        }
        function R(e3, t3) {
          var r3 = x(t3);
          if (r3 && (function(e4, t4) {
            t4.prefinished || t4.finalCalled || ("function" != typeof e4._final || t4.destroyed ? (t4.prefinished = true, e4.emit("prefinish")) : (t4.pendingcb++, t4.finalCalled = true, i.nextTick(B, e4, t4)));
          }(e3, t3), 0 === t3.pendingcb && (t3.finished = true, e3.emit("finish"), t3.autoDestroy))) {
            var n3 = e3._readableState;
            (!n3 || n3.autoDestroy && n3.endEmitted) && e3.destroy();
          }
          return r3;
        }
        r2(5717)(C, u), S.prototype.getBuffer = function() {
          for (var e3 = this.bufferedRequest, t3 = []; e3; ) t3.push(e3), e3 = e3.next;
          return t3;
        }, function() {
          try {
            Object.defineProperty(S.prototype, "buffer", { get: a.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch (e3) {
          }
        }(), "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (s = Function.prototype[Symbol.hasInstance], Object.defineProperty(C, Symbol.hasInstance, { value: function(e3) {
          return !!s.call(this, e3) || this === C && e3 && e3._writableState instanceof S;
        } })) : s = function(e3) {
          return e3 instanceof this;
        }, C.prototype.pipe = function() {
          E(this, new b());
        }, C.prototype.write = function(e3, t3, r3) {
          var n3, o2 = this._writableState, s2 = false, a2 = !o2.objectMode && (n3 = e3, l.isBuffer(n3) || n3 instanceof c);
          return a2 && !l.isBuffer(e3) && (e3 = function(e4) {
            return l.from(e4);
          }(e3)), "function" == typeof t3 && (r3 = t3, t3 = null), a2 ? t3 = "buffer" : t3 || (t3 = o2.defaultEncoding), "function" != typeof r3 && (r3 = k), o2.ending ? function(e4, t4) {
            var r4 = new w();
            E(e4, r4), i.nextTick(t4, r4);
          }(this, r3) : (a2 || function(e4, t4, r4, n4) {
            var o3;
            return null === r4 ? o3 = new v() : "string" == typeof r4 || t4.objectMode || (o3 = new d("chunk", ["string", "Buffer"], r4)), !o3 || (E(e4, o3), i.nextTick(n4, o3), false);
          }(this, o2, e3, r3)) && (o2.pendingcb++, s2 = function(e4, t4, r4, n4, i2, o3) {
            if (!r4) {
              var s3 = function(e5, t5, r5) {
                return e5.objectMode || false === e5.decodeStrings || "string" != typeof t5 || (t5 = l.from(t5, r5)), t5;
              }(t4, n4, i2);
              n4 !== s3 && (r4 = true, i2 = "buffer", n4 = s3);
            }
            var a3 = t4.objectMode ? 1 : n4.length;
            t4.length += a3;
            var u2 = t4.length < t4.highWaterMark;
            if (u2 || (t4.needDrain = true), t4.writing || t4.corked) {
              var c2 = t4.lastBufferedRequest;
              t4.lastBufferedRequest = { chunk: n4, encoding: i2, isBuf: r4, callback: o3, next: null }, c2 ? c2.next = t4.lastBufferedRequest : t4.bufferedRequest = t4.lastBufferedRequest, t4.bufferedRequestCount += 1;
            } else T(e4, t4, false, a3, n4, i2, o3);
            return u2;
          }(this, o2, a2, e3, t3, r3)), s2;
        }, C.prototype.cork = function() {
          this._writableState.corked++;
        }, C.prototype.uncork = function() {
          var e3 = this._writableState;
          e3.corked && (e3.corked--, e3.writing || e3.corked || e3.bufferProcessing || !e3.bufferedRequest || I(this, e3));
        }, C.prototype.setDefaultEncoding = function(e3) {
          if ("string" == typeof e3 && (e3 = e3.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e3 + "").toLowerCase()) > -1)) throw new _(e3);
          return this._writableState.defaultEncoding = e3, this;
        }, Object.defineProperty(C.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(C.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), C.prototype._write = function(e3, t3, r3) {
          r3(new y("_write()"));
        }, C.prototype._writev = null, C.prototype.end = function(e3, t3, r3) {
          var n3 = this._writableState;
          return "function" == typeof e3 ? (r3 = e3, e3 = null, t3 = null) : "function" == typeof t3 && (r3 = t3, t3 = null), null != e3 && this.write(e3, t3), n3.corked && (n3.corked = 1, this.uncork()), n3.ending || function(e4, t4, r4) {
            t4.ending = true, R(e4, t4), r4 && (t4.finished ? i.nextTick(r4) : e4.once("finish", r4)), t4.ended = true, e4.writable = false;
          }(this, n3, r3), this;
        }, Object.defineProperty(C.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(C.prototype, "destroyed", { enumerable: false, get: function() {
          return void 0 !== this._writableState && this._writableState.destroyed;
        }, set: function(e3) {
          this._writableState && (this._writableState.destroyed = e3);
        } }), C.prototype.destroy = h.destroy, C.prototype._undestroy = h.undestroy, C.prototype._destroy = function(e3, t3) {
          t3(e3);
        };
      }, 5850: function(e2, t2, r2) {
        "use strict";
        var n2, i = r2(4155);
        function o(e3, t3, r3) {
          return t3 in e3 ? Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e3[t3] = r3, e3;
        }
        var s = r2(8610), a = Symbol("lastResolve"), u = Symbol("lastReject"), l = Symbol("error"), c = Symbol("ended"), h = Symbol("lastPromise"), f = Symbol("handlePromise"), p = Symbol("stream");
        function d(e3, t3) {
          return { value: e3, done: t3 };
        }
        function y(e3) {
          var t3 = e3[a];
          if (null !== t3) {
            var r3 = e3[p].read();
            null !== r3 && (e3[h] = null, e3[a] = null, e3[u] = null, t3(d(r3, false)));
          }
        }
        function g(e3) {
          i.nextTick(y, e3);
        }
        var b = Object.getPrototypeOf(function() {
        }), m = Object.setPrototypeOf((o(n2 = { get stream() {
          return this[p];
        }, next: function() {
          var e3 = this, t3 = this[l];
          if (null !== t3) return Promise.reject(t3);
          if (this[c]) return Promise.resolve(d(void 0, true));
          if (this[p].destroyed) return new Promise(function(t4, r4) {
            i.nextTick(function() {
              e3[l] ? r4(e3[l]) : t4(d(void 0, true));
            });
          });
          var r3, n3 = this[h];
          if (n3) r3 = new Promise(/* @__PURE__ */ function(e4, t4) {
            return function(r4, n4) {
              e4.then(function() {
                t4[c] ? r4(d(void 0, true)) : t4[f](r4, n4);
              }, n4);
            };
          }(n3, this));
          else {
            var o2 = this[p].read();
            if (null !== o2) return Promise.resolve(d(o2, false));
            r3 = new Promise(this[f]);
          }
          return this[h] = r3, r3;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), o(n2, "return", function() {
          var e3 = this;
          return new Promise(function(t3, r3) {
            e3[p].destroy(null, function(e4) {
              e4 ? r3(e4) : t3(d(void 0, true));
            });
          });
        }), n2), b);
        e2.exports = function(e3) {
          var t3, r3 = Object.create(m, (o(t3 = {}, p, { value: e3, writable: true }), o(t3, a, { value: null, writable: true }), o(t3, u, { value: null, writable: true }), o(t3, l, { value: null, writable: true }), o(t3, c, { value: e3._readableState.endEmitted, writable: true }), o(t3, f, { value: function(e4, t4) {
            var n3 = r3[p].read();
            n3 ? (r3[h] = null, r3[a] = null, r3[u] = null, e4(d(n3, false))) : (r3[a] = e4, r3[u] = t4);
          }, writable: true }), t3));
          return r3[h] = null, s(e3, function(e4) {
            if (e4 && "ERR_STREAM_PREMATURE_CLOSE" !== e4.code) {
              var t4 = r3[u];
              return null !== t4 && (r3[h] = null, r3[a] = null, r3[u] = null, t4(e4)), void (r3[l] = e4);
            }
            var n3 = r3[a];
            null !== n3 && (r3[h] = null, r3[a] = null, r3[u] = null, n3(d(void 0, true))), r3[c] = true;
          }), e3.on("readable", g.bind(null, r3)), r3;
        };
      }, 7327: function(e2, t2, r2) {
        "use strict";
        function n2(e3, t3) {
          var r3 = Object.keys(e3);
          if (Object.getOwnPropertySymbols) {
            var n3 = Object.getOwnPropertySymbols(e3);
            t3 && (n3 = n3.filter(function(t4) {
              return Object.getOwnPropertyDescriptor(e3, t4).enumerable;
            })), r3.push.apply(r3, n3);
          }
          return r3;
        }
        function i(e3, t3, r3) {
          return t3 in e3 ? Object.defineProperty(e3, t3, { value: r3, enumerable: true, configurable: true, writable: true }) : e3[t3] = r3, e3;
        }
        function o(e3, t3) {
          for (var r3 = 0; r3 < t3.length; r3++) {
            var n3 = t3[r3];
            n3.enumerable = n3.enumerable || false, n3.configurable = true, "value" in n3 && (n3.writable = true), Object.defineProperty(e3, n3.key, n3);
          }
        }
        var s = r2(8764).Buffer, a = r2(2361).inspect, u = a && a.custom || "inspect";
        e2.exports = function() {
          function e3() {
            !function(e4, t4) {
              if (!(e4 instanceof t4)) throw new TypeError("Cannot call a class as a function");
            }(this, e3), this.head = null, this.tail = null, this.length = 0;
          }
          var t3, r3;
          return t3 = e3, r3 = [{ key: "push", value: function(e4) {
            var t4 = { data: e4, next: null };
            this.length > 0 ? this.tail.next = t4 : this.head = t4, this.tail = t4, ++this.length;
          } }, { key: "unshift", value: function(e4) {
            var t4 = { data: e4, next: this.head };
            0 === this.length && (this.tail = t4), this.head = t4, ++this.length;
          } }, { key: "shift", value: function() {
            if (0 !== this.length) {
              var e4 = this.head.data;
              return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, e4;
            }
          } }, { key: "clear", value: function() {
            this.head = this.tail = null, this.length = 0;
          } }, { key: "join", value: function(e4) {
            if (0 === this.length) return "";
            for (var t4 = this.head, r4 = "" + t4.data; t4 = t4.next; ) r4 += e4 + t4.data;
            return r4;
          } }, { key: "concat", value: function(e4) {
            if (0 === this.length) return s.alloc(0);
            for (var t4, r4, n3, i2 = s.allocUnsafe(e4 >>> 0), o2 = this.head, a2 = 0; o2; ) t4 = o2.data, r4 = i2, n3 = a2, s.prototype.copy.call(t4, r4, n3), a2 += o2.data.length, o2 = o2.next;
            return i2;
          } }, { key: "consume", value: function(e4, t4) {
            var r4;
            return e4 < this.head.data.length ? (r4 = this.head.data.slice(0, e4), this.head.data = this.head.data.slice(e4)) : r4 = e4 === this.head.data.length ? this.shift() : t4 ? this._getString(e4) : this._getBuffer(e4), r4;
          } }, { key: "first", value: function() {
            return this.head.data;
          } }, { key: "_getString", value: function(e4) {
            var t4 = this.head, r4 = 1, n3 = t4.data;
            for (e4 -= n3.length; t4 = t4.next; ) {
              var i2 = t4.data, o2 = e4 > i2.length ? i2.length : e4;
              if (o2 === i2.length ? n3 += i2 : n3 += i2.slice(0, e4), 0 == (e4 -= o2)) {
                o2 === i2.length ? (++r4, t4.next ? this.head = t4.next : this.head = this.tail = null) : (this.head = t4, t4.data = i2.slice(o2));
                break;
              }
              ++r4;
            }
            return this.length -= r4, n3;
          } }, { key: "_getBuffer", value: function(e4) {
            var t4 = s.allocUnsafe(e4), r4 = this.head, n3 = 1;
            for (r4.data.copy(t4), e4 -= r4.data.length; r4 = r4.next; ) {
              var i2 = r4.data, o2 = e4 > i2.length ? i2.length : e4;
              if (i2.copy(t4, t4.length - e4, 0, o2), 0 == (e4 -= o2)) {
                o2 === i2.length ? (++n3, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = i2.slice(o2));
                break;
              }
              ++n3;
            }
            return this.length -= n3, t4;
          } }, { key: u, value: function(e4, t4) {
            return a(this, function(e5) {
              for (var t5 = 1; t5 < arguments.length; t5++) {
                var r4 = null != arguments[t5] ? arguments[t5] : {};
                t5 % 2 ? n2(Object(r4), true).forEach(function(t6) {
                  i(e5, t6, r4[t6]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e5, Object.getOwnPropertyDescriptors(r4)) : n2(Object(r4)).forEach(function(t6) {
                  Object.defineProperty(e5, t6, Object.getOwnPropertyDescriptor(r4, t6));
                });
              }
              return e5;
            }({}, t4, { depth: 0, customInspect: false }));
          } }], r3 && o(t3.prototype, r3), e3;
        }();
      }, 1195: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4155);
        function i(e3, t3) {
          s(e3, t3), o(e3);
        }
        function o(e3) {
          e3._writableState && !e3._writableState.emitClose || e3._readableState && !e3._readableState.emitClose || e3.emit("close");
        }
        function s(e3, t3) {
          e3.emit("error", t3);
        }
        e2.exports = { destroy: function(e3, t3) {
          var r3 = this, a = this._readableState && this._readableState.destroyed, u = this._writableState && this._writableState.destroyed;
          return a || u ? (t3 ? t3(e3) : e3 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, n2.nextTick(s, this, e3)) : n2.nextTick(s, this, e3)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(e3 || null, function(e4) {
            !t3 && e4 ? r3._writableState ? r3._writableState.errorEmitted ? n2.nextTick(o, r3) : (r3._writableState.errorEmitted = true, n2.nextTick(i, r3, e4)) : n2.nextTick(i, r3, e4) : t3 ? (n2.nextTick(o, r3), t3(e4)) : n2.nextTick(o, r3);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(e3, t3) {
          var r3 = e3._readableState, n3 = e3._writableState;
          r3 && r3.autoDestroy || n3 && n3.autoDestroy ? e3.destroy(t3) : e3.emit("error", t3);
        } };
      }, 8610: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4281).q.ERR_STREAM_PREMATURE_CLOSE;
        function i() {
        }
        e2.exports = function e3(t3, r3, o) {
          if ("function" == typeof r3) return e3(t3, null, r3);
          r3 || (r3 = {}), o = /* @__PURE__ */ function(e4) {
            var t4 = false;
            return function() {
              if (!t4) {
                t4 = true;
                for (var r4 = arguments.length, n3 = new Array(r4), i2 = 0; i2 < r4; i2++) n3[i2] = arguments[i2];
                e4.apply(this, n3);
              }
            };
          }(o || i);
          var s = r3.readable || false !== r3.readable && t3.readable, a = r3.writable || false !== r3.writable && t3.writable, u = function() {
            t3.writable || c();
          }, l = t3._writableState && t3._writableState.finished, c = function() {
            a = false, l = true, s || o.call(t3);
          }, h = t3._readableState && t3._readableState.endEmitted, f = function() {
            s = false, h = true, a || o.call(t3);
          }, p = function(e4) {
            o.call(t3, e4);
          }, d = function() {
            var e4;
            return s && !h ? (t3._readableState && t3._readableState.ended || (e4 = new n2()), o.call(t3, e4)) : a && !l ? (t3._writableState && t3._writableState.ended || (e4 = new n2()), o.call(t3, e4)) : void 0;
          }, y = function() {
            t3.req.on("finish", c);
          };
          return function(e4) {
            return e4.setHeader && "function" == typeof e4.abort;
          }(t3) ? (t3.on("complete", c), t3.on("abort", d), t3.req ? y() : t3.on("request", y)) : a && !t3._writableState && (t3.on("end", u), t3.on("close", u)), t3.on("end", f), t3.on("finish", c), false !== r3.error && t3.on("error", p), t3.on("close", d), function() {
            t3.removeListener("complete", c), t3.removeListener("abort", d), t3.removeListener("request", y), t3.req && t3.req.removeListener("finish", c), t3.removeListener("end", u), t3.removeListener("close", u), t3.removeListener("finish", c), t3.removeListener("end", f), t3.removeListener("error", p), t3.removeListener("close", d);
          };
        };
      }, 5167: function(e2) {
        e2.exports = function() {
          throw new Error("Readable.from is not available in the browser");
        };
      }, 9946: function(e2, t2, r2) {
        "use strict";
        var n2, i = r2(4281).q, o = i.ERR_MISSING_ARGS, s = i.ERR_STREAM_DESTROYED;
        function a(e3) {
          if (e3) throw e3;
        }
        function u(e3, t3, i2, o2) {
          o2 = /* @__PURE__ */ function(e4) {
            var t4 = false;
            return function() {
              t4 || (t4 = true, e4.apply(void 0, arguments));
            };
          }(o2);
          var a2 = false;
          e3.on("close", function() {
            a2 = true;
          }), void 0 === n2 && (n2 = r2(8610)), n2(e3, { readable: t3, writable: i2 }, function(e4) {
            if (e4) return o2(e4);
            a2 = true, o2();
          });
          var u2 = false;
          return function(t4) {
            if (!a2 && !u2) return u2 = true, function(e4) {
              return e4.setHeader && "function" == typeof e4.abort;
            }(e3) ? e3.abort() : "function" == typeof e3.destroy ? e3.destroy() : void o2(t4 || new s("pipe"));
          };
        }
        function l(e3) {
          e3();
        }
        function c(e3, t3) {
          return e3.pipe(t3);
        }
        function h(e3) {
          return e3.length ? "function" != typeof e3[e3.length - 1] ? a : e3.pop() : a;
        }
        e2.exports = function() {
          for (var e3 = arguments.length, t3 = new Array(e3), r3 = 0; r3 < e3; r3++) t3[r3] = arguments[r3];
          var n3, i2 = h(t3);
          if (Array.isArray(t3[0]) && (t3 = t3[0]), t3.length < 2) throw new o("streams");
          var s2 = t3.map(function(e4, r4) {
            var o2 = r4 < t3.length - 1;
            return u(e4, o2, r4 > 0, function(e5) {
              n3 || (n3 = e5), e5 && s2.forEach(l), o2 || (s2.forEach(l), i2(n3));
            });
          });
          return t3.reduce(c);
        };
      }, 2457: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4281).q.ERR_INVALID_OPT_VALUE;
        e2.exports = { getHighWaterMark: function(e3, t3, r3, i) {
          var o = function(e4, t4, r4) {
            return null != e4.highWaterMark ? e4.highWaterMark : t4 ? e4[r4] : null;
          }(t3, i, r3);
          if (null != o) {
            if (!isFinite(o) || Math.floor(o) !== o || o < 0) throw new n2(i ? r3 : "highWaterMark", o);
            return Math.floor(o);
          }
          return e3.objectMode ? 16 : 16384;
        } };
      }, 2503: function(e2, t2, r2) {
        e2.exports = r2(7187).EventEmitter;
      }, 8473: function(e2, t2, r2) {
        (t2 = e2.exports = r2(9481)).Stream = t2, t2.Readable = t2, t2.Writable = r2(4229), t2.Duplex = r2(6753), t2.Transform = r2(4605), t2.PassThrough = r2(2725), t2.finished = r2(8610), t2.pipeline = r2(9946);
      }, 5408: function(e2) {
        "use strict";
        function t2(e3, t3, r2) {
          var n2 = this;
          this._callback = e3, this._args = r2, this._interval = setInterval(e3, t3, this._args), this.reschedule = function(e4) {
            e4 || (e4 = n2._interval), n2._interval && clearInterval(n2._interval), n2._interval = setInterval(n2._callback, e4, n2._args);
          }, this.clear = function() {
            n2._interval && (clearInterval(n2._interval), n2._interval = void 0);
          }, this.destroy = function() {
            n2._interval && clearInterval(n2._interval), n2._callback = void 0, n2._interval = void 0, n2._args = void 0;
          };
        }
        e2.exports = function() {
          if ("function" != typeof arguments[0]) throw new Error("callback needed");
          if ("number" != typeof arguments[1]) throw new Error("interval needed");
          var e3;
          if (arguments.length > 0) {
            e3 = new Array(arguments.length - 2);
            for (var r2 = 0; r2 < e3.length; r2++) e3[r2] = arguments[r2 + 2];
          }
          return new t2(arguments[0], arguments[1], e3);
        };
      }, 1697: function(e2, t2, r2) {
        "use strict";
        e2.exports = r2(3188)();
      }, 3188: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(8764).Buffer;
        function i(e3) {
          return e3 instanceof n2 ? n2.from(e3) : new e3.constructor(e3.buffer.slice(), e3.byteOffset, e3.length);
        }
        e2.exports = function(e3) {
          return (e3 = e3 || {}).circles ? function(e4) {
            var t4 = [], r3 = [];
            return e4.proto ? function e5(o) {
              if ("object" != typeof o || null === o) return o;
              if (o instanceof Date) return new Date(o);
              if (Array.isArray(o)) return n3(o, e5);
              if (o instanceof Map) return new Map(n3(Array.from(o), e5));
              if (o instanceof Set) return new Set(n3(Array.from(o), e5));
              var s = {};
              for (var a in t4.push(o), r3.push(s), o) {
                var u = o[a];
                if ("object" != typeof u || null === u) s[a] = u;
                else if (u instanceof Date) s[a] = new Date(u);
                else if (u instanceof Map) s[a] = new Map(n3(Array.from(u), e5));
                else if (u instanceof Set) s[a] = new Set(n3(Array.from(u), e5));
                else if (ArrayBuffer.isView(u)) s[a] = i(u);
                else {
                  var l = t4.indexOf(u);
                  s[a] = -1 !== l ? r3[l] : e5(u);
                }
              }
              return t4.pop(), r3.pop(), s;
            } : function e5(o) {
              if ("object" != typeof o || null === o) return o;
              if (o instanceof Date) return new Date(o);
              if (Array.isArray(o)) return n3(o, e5);
              if (o instanceof Map) return new Map(n3(Array.from(o), e5));
              if (o instanceof Set) return new Set(n3(Array.from(o), e5));
              var s = {};
              for (var a in t4.push(o), r3.push(s), o) if (false !== Object.hasOwnProperty.call(o, a)) {
                var u = o[a];
                if ("object" != typeof u || null === u) s[a] = u;
                else if (u instanceof Date) s[a] = new Date(u);
                else if (u instanceof Map) s[a] = new Map(n3(Array.from(u), e5));
                else if (u instanceof Set) s[a] = new Set(n3(Array.from(u), e5));
                else if (ArrayBuffer.isView(u)) s[a] = i(u);
                else {
                  var l = t4.indexOf(u);
                  s[a] = -1 !== l ? r3[l] : e5(u);
                }
              }
              return t4.pop(), r3.pop(), s;
            };
            function n3(e5, n4) {
              for (var o = Object.keys(e5), s = new Array(o.length), a = 0; a < o.length; a++) {
                var u = o[a], l = e5[u];
                if ("object" != typeof l || null === l) s[u] = l;
                else if (l instanceof Date) s[u] = new Date(l);
                else if (ArrayBuffer.isView(l)) s[u] = i(l);
                else {
                  var c = t4.indexOf(l);
                  s[u] = -1 !== c ? r3[c] : n4(l);
                }
              }
              return s;
            }
          }(e3) : e3.proto ? function e4(r3) {
            if ("object" != typeof r3 || null === r3) return r3;
            if (r3 instanceof Date) return new Date(r3);
            if (Array.isArray(r3)) return t3(r3, e4);
            if (r3 instanceof Map) return new Map(t3(Array.from(r3), e4));
            if (r3 instanceof Set) return new Set(t3(Array.from(r3), e4));
            var n3 = {};
            for (var o in r3) {
              var s = r3[o];
              "object" != typeof s || null === s ? n3[o] = s : s instanceof Date ? n3[o] = new Date(s) : s instanceof Map ? n3[o] = new Map(t3(Array.from(s), e4)) : s instanceof Set ? n3[o] = new Set(t3(Array.from(s), e4)) : ArrayBuffer.isView(s) ? n3[o] = i(s) : n3[o] = e4(s);
            }
            return n3;
          } : function e4(r3) {
            if ("object" != typeof r3 || null === r3) return r3;
            if (r3 instanceof Date) return new Date(r3);
            if (Array.isArray(r3)) return t3(r3, e4);
            if (r3 instanceof Map) return new Map(t3(Array.from(r3), e4));
            if (r3 instanceof Set) return new Set(t3(Array.from(r3), e4));
            var n3 = {};
            for (var o in r3) if (false !== Object.hasOwnProperty.call(r3, o)) {
              var s = r3[o];
              "object" != typeof s || null === s ? n3[o] = s : s instanceof Date ? n3[o] = new Date(s) : s instanceof Map ? n3[o] = new Map(t3(Array.from(s), e4)) : s instanceof Set ? n3[o] = new Set(t3(Array.from(s), e4)) : ArrayBuffer.isView(s) ? n3[o] = i(s) : n3[o] = e4(s);
            }
            return n3;
          };
          function t3(e4, t4) {
            for (var r3 = Object.keys(e4), n3 = new Array(r3.length), o = 0; o < r3.length; o++) {
              var s = r3[o], a = e4[s];
              "object" != typeof a || null === a ? n3[s] = a : a instanceof Date ? n3[s] = new Date(a) : ArrayBuffer.isView(a) ? n3[s] = i(a) : n3[s] = t4(a);
            }
            return n3;
          }
        };
      }, 9509: function(e2, t2, r2) {
        var n2 = r2(8764), i = n2.Buffer;
        function o(e3, t3) {
          for (var r3 in e3) t3[r3] = e3[r3];
        }
        function s(e3, t3, r3) {
          return i(e3, t3, r3);
        }
        i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e2.exports = n2 : (o(n2, t2), t2.Buffer = s), s.prototype = Object.create(i.prototype), o(i, s), s.from = function(e3, t3, r3) {
          if ("number" == typeof e3) throw new TypeError("Argument must not be a number");
          return i(e3, t3, r3);
        }, s.alloc = function(e3, t3, r3) {
          if ("number" != typeof e3) throw new TypeError("Argument must be a number");
          var n3 = i(e3);
          return void 0 !== t3 ? "string" == typeof r3 ? n3.fill(t3, r3) : n3.fill(t3) : n3.fill(0), n3;
        }, s.allocUnsafe = function(e3) {
          if ("number" != typeof e3) throw new TypeError("Argument must be a number");
          return i(e3);
        }, s.allocUnsafeSlow = function(e3) {
          if ("number" != typeof e3) throw new TypeError("Argument must be a number");
          return n2.SlowBuffer(e3);
        };
      }, 1852: function(e2) {
        e2.exports = function(e3) {
          var t2, r2 = e3._readableState;
          return r2 ? r2.objectMode || "number" == typeof e3._duplexState ? e3.read() : e3.read((t2 = r2).buffer.length ? t2.buffer.head ? t2.buffer.head.data.length : t2.buffer[0].length : t2.length) : null;
        };
      }, 2553: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(9509).Buffer, i = n2.isEncoding || function(e3) {
          switch ((e3 = "" + e3) && e3.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw":
              return true;
            default:
              return false;
          }
        };
        function o(e3) {
          var t3;
          switch (this.encoding = function(e4) {
            var t4 = function(e5) {
              if (!e5) return "utf8";
              for (var t5; ; ) switch (e5) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return e5;
                default:
                  if (t5) return;
                  e5 = ("" + e5).toLowerCase(), t5 = true;
              }
            }(e4);
            if ("string" != typeof t4 && (n2.isEncoding === i || !i(e4))) throw new Error("Unknown encoding: " + e4);
            return t4 || e4;
          }(e3), this.encoding) {
            case "utf16le":
              this.text = u, this.end = l, t3 = 4;
              break;
            case "utf8":
              this.fillLast = a, t3 = 4;
              break;
            case "base64":
              this.text = c, this.end = h, t3 = 3;
              break;
            default:
              return this.write = f, void (this.end = p);
          }
          this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n2.allocUnsafe(t3);
        }
        function s(e3) {
          return e3 <= 127 ? 0 : e3 >> 5 == 6 ? 2 : e3 >> 4 == 14 ? 3 : e3 >> 3 == 30 ? 4 : e3 >> 6 == 2 ? -1 : -2;
        }
        function a(e3) {
          var t3 = this.lastTotal - this.lastNeed, r3 = function(e4, t4, r4) {
            if (128 != (192 & t4[0])) return e4.lastNeed = 0, "�";
            if (e4.lastNeed > 1 && t4.length > 1) {
              if (128 != (192 & t4[1])) return e4.lastNeed = 1, "�";
              if (e4.lastNeed > 2 && t4.length > 2 && 128 != (192 & t4[2])) return e4.lastNeed = 2, "�";
            }
          }(this, e3);
          return void 0 !== r3 ? r3 : this.lastNeed <= e3.length ? (e3.copy(this.lastChar, t3, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (e3.copy(this.lastChar, t3, 0, e3.length), void (this.lastNeed -= e3.length));
        }
        function u(e3, t3) {
          if ((e3.length - t3) % 2 == 0) {
            var r3 = e3.toString("utf16le", t3);
            if (r3) {
              var n3 = r3.charCodeAt(r3.length - 1);
              if (n3 >= 55296 && n3 <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = e3[e3.length - 2], this.lastChar[1] = e3[e3.length - 1], r3.slice(0, -1);
            }
            return r3;
          }
          return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = e3[e3.length - 1], e3.toString("utf16le", t3, e3.length - 1);
        }
        function l(e3) {
          var t3 = e3 && e3.length ? this.write(e3) : "";
          if (this.lastNeed) {
            var r3 = this.lastTotal - this.lastNeed;
            return t3 + this.lastChar.toString("utf16le", 0, r3);
          }
          return t3;
        }
        function c(e3, t3) {
          var r3 = (e3.length - t3) % 3;
          return 0 === r3 ? e3.toString("base64", t3) : (this.lastNeed = 3 - r3, this.lastTotal = 3, 1 === r3 ? this.lastChar[0] = e3[e3.length - 1] : (this.lastChar[0] = e3[e3.length - 2], this.lastChar[1] = e3[e3.length - 1]), e3.toString("base64", t3, e3.length - r3));
        }
        function h(e3) {
          var t3 = e3 && e3.length ? this.write(e3) : "";
          return this.lastNeed ? t3 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : t3;
        }
        function f(e3) {
          return e3.toString(this.encoding);
        }
        function p(e3) {
          return e3 && e3.length ? this.write(e3) : "";
        }
        t2.s = o, o.prototype.write = function(e3) {
          if (0 === e3.length) return "";
          var t3, r3;
          if (this.lastNeed) {
            if (void 0 === (t3 = this.fillLast(e3))) return "";
            r3 = this.lastNeed, this.lastNeed = 0;
          } else r3 = 0;
          return r3 < e3.length ? t3 ? t3 + this.text(e3, r3) : this.text(e3, r3) : t3 || "";
        }, o.prototype.end = function(e3) {
          var t3 = e3 && e3.length ? this.write(e3) : "";
          return this.lastNeed ? t3 + "�" : t3;
        }, o.prototype.text = function(e3, t3) {
          var r3 = function(e4, t4, r4) {
            var n4 = t4.length - 1;
            if (n4 < r4) return 0;
            var i2 = s(t4[n4]);
            return i2 >= 0 ? (i2 > 0 && (e4.lastNeed = i2 - 1), i2) : --n4 < r4 || -2 === i2 ? 0 : (i2 = s(t4[n4])) >= 0 ? (i2 > 0 && (e4.lastNeed = i2 - 2), i2) : --n4 < r4 || -2 === i2 ? 0 : (i2 = s(t4[n4])) >= 0 ? (i2 > 0 && (2 === i2 ? i2 = 0 : e4.lastNeed = i2 - 3), i2) : 0;
          }(this, e3, t3);
          if (!this.lastNeed) return e3.toString("utf8", t3);
          this.lastTotal = r3;
          var n3 = e3.length - (r3 - this.lastNeed);
          return e3.copy(this.lastChar, 0, n3), e3.toString("utf8", t3, n3);
        }, o.prototype.fillLast = function(e3) {
          if (this.lastNeed <= e3.length) return e3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
          e3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, e3.length), this.lastNeed -= e3.length;
        };
      }, 2511: function(e2, t2, r2) {
        var n2;
        e2 = r2.nmd(e2), function(i) {
          t2 && t2.nodeType, e2 && e2.nodeType;
          var o = "object" == typeof r2.g && r2.g;
          o.global !== o && o.window !== o && o.self;
          var s, a = 2147483647, u = 36, l = /^xn--/, c = /[^\x20-\x7E]/, h = /[\x2E\u3002\uFF0E\uFF61]/g, f = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, p = Math.floor, d = String.fromCharCode;
          function y(e3) {
            throw RangeError(f[e3]);
          }
          function g(e3, t3) {
            for (var r3 = e3.length, n3 = []; r3--; ) n3[r3] = t3(e3[r3]);
            return n3;
          }
          function b(e3, t3) {
            var r3 = e3.split("@"), n3 = "";
            return r3.length > 1 && (n3 = r3[0] + "@", e3 = r3[1]), n3 + g((e3 = e3.replace(h, ".")).split("."), t3).join(".");
          }
          function m(e3) {
            for (var t3, r3, n3 = [], i2 = 0, o2 = e3.length; i2 < o2; ) (t3 = e3.charCodeAt(i2++)) >= 55296 && t3 <= 56319 && i2 < o2 ? 56320 == (64512 & (r3 = e3.charCodeAt(i2++))) ? n3.push(((1023 & t3) << 10) + (1023 & r3) + 65536) : (n3.push(t3), i2--) : n3.push(t3);
            return n3;
          }
          function v(e3) {
            return g(e3, function(e4) {
              var t3 = "";
              return e4 > 65535 && (t3 += d((e4 -= 65536) >>> 10 & 1023 | 55296), e4 = 56320 | 1023 & e4), t3 + d(e4);
            }).join("");
          }
          function w(e3, t3) {
            return e3 + 22 + 75 * (e3 < 26) - ((0 != t3) << 5);
          }
          function _(e3, t3, r3) {
            var n3 = 0;
            for (e3 = r3 ? p(e3 / 700) : e3 >> 1, e3 += p(e3 / t3); e3 > 455; n3 += u) e3 = p(e3 / 35);
            return p(n3 + 36 * e3 / (e3 + 38));
          }
          function E(e3) {
            var t3, r3, n3, i2, o2, s2, l2, c2, h2, f2, d2, g2 = [], b2 = e3.length, m2 = 0, w2 = 128, E2 = 72;
            for ((r3 = e3.lastIndexOf("-")) < 0 && (r3 = 0), n3 = 0; n3 < r3; ++n3) e3.charCodeAt(n3) >= 128 && y("not-basic"), g2.push(e3.charCodeAt(n3));
            for (i2 = r3 > 0 ? r3 + 1 : 0; i2 < b2; ) {
              for (o2 = m2, s2 = 1, l2 = u; i2 >= b2 && y("invalid-input"), ((c2 = (d2 = e3.charCodeAt(i2++)) - 48 < 10 ? d2 - 22 : d2 - 65 < 26 ? d2 - 65 : d2 - 97 < 26 ? d2 - 97 : u) >= u || c2 > p((a - m2) / s2)) && y("overflow"), m2 += c2 * s2, !(c2 < (h2 = l2 <= E2 ? 1 : l2 >= E2 + 26 ? 26 : l2 - E2)); l2 += u) s2 > p(a / (f2 = u - h2)) && y("overflow"), s2 *= f2;
              E2 = _(m2 - o2, t3 = g2.length + 1, 0 == o2), p(m2 / t3) > a - w2 && y("overflow"), w2 += p(m2 / t3), m2 %= t3, g2.splice(m2++, 0, w2);
            }
            return v(g2);
          }
          function k(e3) {
            var t3, r3, n3, i2, o2, s2, l2, c2, h2, f2, g2, b2, v2, E2, k2, S = [];
            for (b2 = (e3 = m(e3)).length, t3 = 128, r3 = 0, o2 = 72, s2 = 0; s2 < b2; ++s2) (g2 = e3[s2]) < 128 && S.push(d(g2));
            for (n3 = i2 = S.length, i2 && S.push("-"); n3 < b2; ) {
              for (l2 = a, s2 = 0; s2 < b2; ++s2) (g2 = e3[s2]) >= t3 && g2 < l2 && (l2 = g2);
              for (l2 - t3 > p((a - r3) / (v2 = n3 + 1)) && y("overflow"), r3 += (l2 - t3) * v2, t3 = l2, s2 = 0; s2 < b2; ++s2) if ((g2 = e3[s2]) < t3 && ++r3 > a && y("overflow"), g2 == t3) {
                for (c2 = r3, h2 = u; !(c2 < (f2 = h2 <= o2 ? 1 : h2 >= o2 + 26 ? 26 : h2 - o2)); h2 += u) k2 = c2 - f2, E2 = u - f2, S.push(d(w(f2 + k2 % E2, 0))), c2 = p(k2 / E2);
                S.push(d(w(c2, 0))), o2 = _(r3, v2, n3 == i2), r3 = 0, ++n3;
              }
              ++r3, ++t3;
            }
            return S.join("");
          }
          s = { version: "1.3.2", ucs2: { decode: m, encode: v }, decode: E, encode: k, toASCII: function(e3) {
            return b(e3, function(e4) {
              return c.test(e4) ? "xn--" + k(e4) : e4;
            });
          }, toUnicode: function(e3) {
            return b(e3, function(e4) {
              return l.test(e4) ? E(e4.slice(4).toLowerCase()) : e4;
            });
          } }, void 0 === (n2 = (function() {
            return s;
          }).call(t2, r2, t2, e2)) || (e2.exports = n2);
        }();
      }, 8575: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(2511), i = r2(2502);
        function o() {
          this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
        }
        t2.parse = v, t2.resolve = function(e3, t3) {
          return v(e3, false, true).resolve(t3);
        }, t2.resolveObject = function(e3, t3) {
          return e3 ? v(e3, false, true).resolveObject(t3) : t3;
        }, t2.format = function(e3) {
          return i.isString(e3) && (e3 = v(e3)), e3 instanceof o ? e3.format() : o.prototype.format.call(e3);
        }, t2.Url = o;
        var s = /^([a-z0-9.+-]+:)/i, a = /:[0-9]*$/, u = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, l = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", "\n", "	"]), c = ["'"].concat(l), h = ["%", "/", "?", ";", "#"].concat(c), f = ["/", "?", "#"], p = /^[+a-z0-9A-Z_-]{0,63}$/, d = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, y = { javascript: true, "javascript:": true }, g = { javascript: true, "javascript:": true }, b = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, m = r2(7673);
        function v(e3, t3, r3) {
          if (e3 && i.isObject(e3) && e3 instanceof o) return e3;
          var n3 = new o();
          return n3.parse(e3, t3, r3), n3;
        }
        o.prototype.parse = function(e3, t3, r3) {
          if (!i.isString(e3)) throw new TypeError("Parameter 'url' must be a string, not " + typeof e3);
          var o2 = e3.indexOf("?"), a2 = -1 !== o2 && o2 < e3.indexOf("#") ? "?" : "#", l2 = e3.split(a2);
          l2[0] = l2[0].replace(/\\/g, "/");
          var v2 = e3 = l2.join(a2);
          if (v2 = v2.trim(), !r3 && 1 === e3.split("#").length) {
            var w = u.exec(v2);
            if (w) return this.path = v2, this.href = v2, this.pathname = w[1], w[2] ? (this.search = w[2], this.query = t3 ? m.parse(this.search.substr(1)) : this.search.substr(1)) : t3 && (this.search = "", this.query = {}), this;
          }
          var _ = s.exec(v2);
          if (_) {
            var E = (_ = _[0]).toLowerCase();
            this.protocol = E, v2 = v2.substr(_.length);
          }
          if (r3 || _ || v2.match(/^\/\/[^@\/]+@[^@\/]+/)) {
            var k = "//" === v2.substr(0, 2);
            !k || _ && g[_] || (v2 = v2.substr(2), this.slashes = true);
          }
          if (!g[_] && (k || _ && !b[_])) {
            for (var S, C, T = -1, A = 0; A < f.length; A++) -1 !== (I = v2.indexOf(f[A])) && (-1 === T || I < T) && (T = I);
            for (-1 !== (C = -1 === T ? v2.lastIndexOf("@") : v2.lastIndexOf("@", T)) && (S = v2.slice(0, C), v2 = v2.slice(C + 1), this.auth = decodeURIComponent(S)), T = -1, A = 0; A < h.length; A++) {
              var I;
              -1 !== (I = v2.indexOf(h[A])) && (-1 === T || I < T) && (T = I);
            }
            -1 === T && (T = v2.length), this.host = v2.slice(0, T), v2 = v2.slice(T), this.parseHost(), this.hostname = this.hostname || "";
            var x = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
            if (!x) for (var B = this.hostname.split(/\./), R = (A = 0, B.length); A < R; A++) {
              var O = B[A];
              if (O && !O.match(p)) {
                for (var P = "", N = 0, M = O.length; N < M; N++) O.charCodeAt(N) > 127 ? P += "x" : P += O[N];
                if (!P.match(p)) {
                  var L = B.slice(0, A), U = B.slice(A + 1), j = O.match(d);
                  j && (L.push(j[1]), U.unshift(j[2])), U.length && (v2 = "/" + U.join(".") + v2), this.hostname = L.join(".");
                  break;
                }
              }
            }
            this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), x || (this.hostname = n2.toASCII(this.hostname));
            var q = this.port ? ":" + this.port : "", z = this.hostname || "";
            this.host = z + q, this.href += this.host, x && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), "/" !== v2[0] && (v2 = "/" + v2));
          }
          if (!y[E]) for (A = 0, R = c.length; A < R; A++) {
            var D = c[A];
            if (-1 !== v2.indexOf(D)) {
              var F = encodeURIComponent(D);
              F === D && (F = escape(D)), v2 = v2.split(D).join(F);
            }
          }
          var V = v2.indexOf("#");
          -1 !== V && (this.hash = v2.substr(V), v2 = v2.slice(0, V));
          var W = v2.indexOf("?");
          if (-1 !== W ? (this.search = v2.substr(W), this.query = v2.substr(W + 1), t3 && (this.query = m.parse(this.query)), v2 = v2.slice(0, W)) : t3 && (this.search = "", this.query = {}), v2 && (this.pathname = v2), b[E] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
            q = this.pathname || "";
            var H = this.search || "";
            this.path = q + H;
          }
          return this.href = this.format(), this;
        }, o.prototype.format = function() {
          var e3 = this.auth || "";
          e3 && (e3 = (e3 = encodeURIComponent(e3)).replace(/%3A/i, ":"), e3 += "@");
          var t3 = this.protocol || "", r3 = this.pathname || "", n3 = this.hash || "", o2 = false, s2 = "";
          this.host ? o2 = e3 + this.host : this.hostname && (o2 = e3 + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]"), this.port && (o2 += ":" + this.port)), this.query && i.isObject(this.query) && Object.keys(this.query).length && (s2 = m.stringify(this.query));
          var a2 = this.search || s2 && "?" + s2 || "";
          return t3 && ":" !== t3.substr(-1) && (t3 += ":"), this.slashes || (!t3 || b[t3]) && false !== o2 ? (o2 = "//" + (o2 || ""), r3 && "/" !== r3.charAt(0) && (r3 = "/" + r3)) : o2 || (o2 = ""), n3 && "#" !== n3.charAt(0) && (n3 = "#" + n3), a2 && "?" !== a2.charAt(0) && (a2 = "?" + a2), t3 + o2 + (r3 = r3.replace(/[?#]/g, function(e4) {
            return encodeURIComponent(e4);
          })) + (a2 = a2.replace("#", "%23")) + n3;
        }, o.prototype.resolve = function(e3) {
          return this.resolveObject(v(e3, false, true)).format();
        }, o.prototype.resolveObject = function(e3) {
          if (i.isString(e3)) {
            var t3 = new o();
            t3.parse(e3, false, true), e3 = t3;
          }
          for (var r3 = new o(), n3 = Object.keys(this), s2 = 0; s2 < n3.length; s2++) {
            var a2 = n3[s2];
            r3[a2] = this[a2];
          }
          if (r3.hash = e3.hash, "" === e3.href) return r3.href = r3.format(), r3;
          if (e3.slashes && !e3.protocol) {
            for (var u2 = Object.keys(e3), l2 = 0; l2 < u2.length; l2++) {
              var c2 = u2[l2];
              "protocol" !== c2 && (r3[c2] = e3[c2]);
            }
            return b[r3.protocol] && r3.hostname && !r3.pathname && (r3.path = r3.pathname = "/"), r3.href = r3.format(), r3;
          }
          if (e3.protocol && e3.protocol !== r3.protocol) {
            if (!b[e3.protocol]) {
              for (var h2 = Object.keys(e3), f2 = 0; f2 < h2.length; f2++) {
                var p2 = h2[f2];
                r3[p2] = e3[p2];
              }
              return r3.href = r3.format(), r3;
            }
            if (r3.protocol = e3.protocol, e3.host || g[e3.protocol]) r3.pathname = e3.pathname;
            else {
              for (var d2 = (e3.pathname || "").split("/"); d2.length && !(e3.host = d2.shift()); ) ;
              e3.host || (e3.host = ""), e3.hostname || (e3.hostname = ""), "" !== d2[0] && d2.unshift(""), d2.length < 2 && d2.unshift(""), r3.pathname = d2.join("/");
            }
            if (r3.search = e3.search, r3.query = e3.query, r3.host = e3.host || "", r3.auth = e3.auth, r3.hostname = e3.hostname || e3.host, r3.port = e3.port, r3.pathname || r3.search) {
              var y2 = r3.pathname || "", m2 = r3.search || "";
              r3.path = y2 + m2;
            }
            return r3.slashes = r3.slashes || e3.slashes, r3.href = r3.format(), r3;
          }
          var v2 = r3.pathname && "/" === r3.pathname.charAt(0), w = e3.host || e3.pathname && "/" === e3.pathname.charAt(0), _ = w || v2 || r3.host && e3.pathname, E = _, k = r3.pathname && r3.pathname.split("/") || [], S = (d2 = e3.pathname && e3.pathname.split("/") || [], r3.protocol && !b[r3.protocol]);
          if (S && (r3.hostname = "", r3.port = null, r3.host && ("" === k[0] ? k[0] = r3.host : k.unshift(r3.host)), r3.host = "", e3.protocol && (e3.hostname = null, e3.port = null, e3.host && ("" === d2[0] ? d2[0] = e3.host : d2.unshift(e3.host)), e3.host = null), _ = _ && ("" === d2[0] || "" === k[0])), w) r3.host = e3.host || "" === e3.host ? e3.host : r3.host, r3.hostname = e3.hostname || "" === e3.hostname ? e3.hostname : r3.hostname, r3.search = e3.search, r3.query = e3.query, k = d2;
          else if (d2.length) k || (k = []), k.pop(), k = k.concat(d2), r3.search = e3.search, r3.query = e3.query;
          else if (!i.isNullOrUndefined(e3.search)) return S && (r3.hostname = r3.host = k.shift(), (x = !!(r3.host && r3.host.indexOf("@") > 0) && r3.host.split("@")) && (r3.auth = x.shift(), r3.host = r3.hostname = x.shift())), r3.search = e3.search, r3.query = e3.query, i.isNull(r3.pathname) && i.isNull(r3.search) || (r3.path = (r3.pathname ? r3.pathname : "") + (r3.search ? r3.search : "")), r3.href = r3.format(), r3;
          if (!k.length) return r3.pathname = null, r3.search ? r3.path = "/" + r3.search : r3.path = null, r3.href = r3.format(), r3;
          for (var C = k.slice(-1)[0], T = (r3.host || e3.host || k.length > 1) && ("." === C || ".." === C) || "" === C, A = 0, I = k.length; I >= 0; I--) "." === (C = k[I]) ? k.splice(I, 1) : ".." === C ? (k.splice(I, 1), A++) : A && (k.splice(I, 1), A--);
          if (!_ && !E) for (; A--; A) k.unshift("..");
          !_ || "" === k[0] || k[0] && "/" === k[0].charAt(0) || k.unshift(""), T && "/" !== k.join("/").substr(-1) && k.push("");
          var x, B = "" === k[0] || k[0] && "/" === k[0].charAt(0);
          return S && (r3.hostname = r3.host = B ? "" : k.length ? k.shift() : "", (x = !!(r3.host && r3.host.indexOf("@") > 0) && r3.host.split("@")) && (r3.auth = x.shift(), r3.host = r3.hostname = x.shift())), (_ = _ || r3.host && k.length) && !B && k.unshift(""), k.length ? r3.pathname = k.join("/") : (r3.pathname = null, r3.path = null), i.isNull(r3.pathname) && i.isNull(r3.search) || (r3.path = (r3.pathname ? r3.pathname : "") + (r3.search ? r3.search : "")), r3.auth = e3.auth || r3.auth, r3.slashes = r3.slashes || e3.slashes, r3.href = r3.format(), r3;
        }, o.prototype.parseHost = function() {
          var e3 = this.host, t3 = a.exec(e3);
          t3 && (":" !== (t3 = t3[0]) && (this.port = t3.substr(1)), e3 = e3.substr(0, e3.length - t3.length)), e3 && (this.hostname = e3);
        };
      }, 2502: function(e2) {
        "use strict";
        e2.exports = { isString: function(e3) {
          return "string" == typeof e3;
        }, isObject: function(e3) {
          return "object" == typeof e3 && null !== e3;
        }, isNull: function(e3) {
          return null === e3;
        }, isNullOrUndefined: function(e3) {
          return null == e3;
        } };
      }, 4927: function(e2, t2, r2) {
        function n2(e3) {
          try {
            if (!r2.g.localStorage) return false;
          } catch (e4) {
            return false;
          }
          var t3 = r2.g.localStorage[e3];
          return null != t3 && "true" === String(t3).toLowerCase();
        }
        e2.exports = function(e3, t3) {
          if (n2("noDeprecation")) return e3;
          var r3 = false;
          return function() {
            if (!r3) {
              if (n2("throwDeprecation")) throw new Error(t3);
              n2("traceDeprecation") ? console.trace(t3) : console.warn(t3), r3 = true;
            }
            return e3.apply(this, arguments);
          };
        };
      }, 2479: function(e2) {
        e2.exports = function e3(t2, r2) {
          if (t2 && r2) return e3(t2)(r2);
          if ("function" != typeof t2) throw new TypeError("need wrapper function");
          return Object.keys(t2).forEach(function(e4) {
            n2[e4] = t2[e4];
          }), n2;
          function n2() {
            for (var e4 = new Array(arguments.length), r3 = 0; r3 < e4.length; r3++) e4[r3] = arguments[r3];
            var n3 = t2.apply(this, e4), i = e4[e4.length - 1];
            return "function" == typeof n3 && n3 !== i && Object.keys(i).forEach(function(e5) {
              n3[e5] = i[e5];
            }), n3;
          }
        };
      }, 7026: function(e2) {
        "use strict";
        e2.exports = function() {
          throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object");
        };
      }, 7529: function(e2) {
        e2.exports = function() {
          for (var e3 = {}, r2 = 0; r2 < arguments.length; r2++) {
            var n2 = arguments[r2];
            for (var i in n2) t2.call(n2, i) && (e3[i] = n2[i]);
          }
          return e3;
        };
        var t2 = Object.prototype.hasOwnProperty;
      }, 9602: function(e2) {
        "use strict";
        e2.exports = function(e3) {
          e3.prototype[Symbol.iterator] = function* () {
            for (let e4 = this.head; e4; e4 = e4.next) yield e4.value;
          };
        };
      }, 4411: function(e2, t2, r2) {
        "use strict";
        function n2(e3) {
          var t3 = this;
          if (t3 instanceof n2 || (t3 = new n2()), t3.tail = null, t3.head = null, t3.length = 0, e3 && "function" == typeof e3.forEach) e3.forEach(function(e4) {
            t3.push(e4);
          });
          else if (arguments.length > 0) for (var r3 = 0, i2 = arguments.length; r3 < i2; r3++) t3.push(arguments[r3]);
          return t3;
        }
        function i(e3, t3) {
          e3.tail = new s(t3, e3.tail, null, e3), e3.head || (e3.head = e3.tail), e3.length++;
        }
        function o(e3, t3) {
          e3.head = new s(t3, null, e3.head, e3), e3.tail || (e3.tail = e3.head), e3.length++;
        }
        function s(e3, t3, r3, n3) {
          if (!(this instanceof s)) return new s(e3, t3, r3, n3);
          this.list = n3, this.value = e3, t3 ? (t3.next = this, this.prev = t3) : this.prev = null, r3 ? (r3.prev = this, this.next = r3) : this.next = null;
        }
        e2.exports = n2, n2.Node = s, n2.create = n2, n2.prototype.removeNode = function(e3) {
          if (e3.list !== this) throw new Error("removing node which does not belong to this list");
          var t3 = e3.next, r3 = e3.prev;
          return t3 && (t3.prev = r3), r3 && (r3.next = t3), e3 === this.head && (this.head = t3), e3 === this.tail && (this.tail = r3), e3.list.length--, e3.next = null, e3.prev = null, e3.list = null, t3;
        }, n2.prototype.unshiftNode = function(e3) {
          if (e3 !== this.head) {
            e3.list && e3.list.removeNode(e3);
            var t3 = this.head;
            e3.list = this, e3.next = t3, t3 && (t3.prev = e3), this.head = e3, this.tail || (this.tail = e3), this.length++;
          }
        }, n2.prototype.pushNode = function(e3) {
          if (e3 !== this.tail) {
            e3.list && e3.list.removeNode(e3);
            var t3 = this.tail;
            e3.list = this, e3.prev = t3, t3 && (t3.next = e3), this.tail = e3, this.head || (this.head = e3), this.length++;
          }
        }, n2.prototype.push = function() {
          for (var e3 = 0, t3 = arguments.length; e3 < t3; e3++) i(this, arguments[e3]);
          return this.length;
        }, n2.prototype.unshift = function() {
          for (var e3 = 0, t3 = arguments.length; e3 < t3; e3++) o(this, arguments[e3]);
          return this.length;
        }, n2.prototype.pop = function() {
          if (this.tail) {
            var e3 = this.tail.value;
            return this.tail = this.tail.prev, this.tail ? this.tail.next = null : this.head = null, this.length--, e3;
          }
        }, n2.prototype.shift = function() {
          if (this.head) {
            var e3 = this.head.value;
            return this.head = this.head.next, this.head ? this.head.prev = null : this.tail = null, this.length--, e3;
          }
        }, n2.prototype.forEach = function(e3, t3) {
          t3 = t3 || this;
          for (var r3 = this.head, n3 = 0; null !== r3; n3++) e3.call(t3, r3.value, n3, this), r3 = r3.next;
        }, n2.prototype.forEachReverse = function(e3, t3) {
          t3 = t3 || this;
          for (var r3 = this.tail, n3 = this.length - 1; null !== r3; n3--) e3.call(t3, r3.value, n3, this), r3 = r3.prev;
        }, n2.prototype.get = function(e3) {
          for (var t3 = 0, r3 = this.head; null !== r3 && t3 < e3; t3++) r3 = r3.next;
          if (t3 === e3 && null !== r3) return r3.value;
        }, n2.prototype.getReverse = function(e3) {
          for (var t3 = 0, r3 = this.tail; null !== r3 && t3 < e3; t3++) r3 = r3.prev;
          if (t3 === e3 && null !== r3) return r3.value;
        }, n2.prototype.map = function(e3, t3) {
          t3 = t3 || this;
          for (var r3 = new n2(), i2 = this.head; null !== i2; ) r3.push(e3.call(t3, i2.value, this)), i2 = i2.next;
          return r3;
        }, n2.prototype.mapReverse = function(e3, t3) {
          t3 = t3 || this;
          for (var r3 = new n2(), i2 = this.tail; null !== i2; ) r3.push(e3.call(t3, i2.value, this)), i2 = i2.prev;
          return r3;
        }, n2.prototype.reduce = function(e3, t3) {
          var r3, n3 = this.head;
          if (arguments.length > 1) r3 = t3;
          else {
            if (!this.head) throw new TypeError("Reduce of empty list with no initial value");
            n3 = this.head.next, r3 = this.head.value;
          }
          for (var i2 = 0; null !== n3; i2++) r3 = e3(r3, n3.value, i2), n3 = n3.next;
          return r3;
        }, n2.prototype.reduceReverse = function(e3, t3) {
          var r3, n3 = this.tail;
          if (arguments.length > 1) r3 = t3;
          else {
            if (!this.tail) throw new TypeError("Reduce of empty list with no initial value");
            n3 = this.tail.prev, r3 = this.tail.value;
          }
          for (var i2 = this.length - 1; null !== n3; i2--) r3 = e3(r3, n3.value, i2), n3 = n3.prev;
          return r3;
        }, n2.prototype.toArray = function() {
          for (var e3 = new Array(this.length), t3 = 0, r3 = this.head; null !== r3; t3++) e3[t3] = r3.value, r3 = r3.next;
          return e3;
        }, n2.prototype.toArrayReverse = function() {
          for (var e3 = new Array(this.length), t3 = 0, r3 = this.tail; null !== r3; t3++) e3[t3] = r3.value, r3 = r3.prev;
          return e3;
        }, n2.prototype.slice = function(e3, t3) {
          (t3 = t3 || this.length) < 0 && (t3 += this.length), (e3 = e3 || 0) < 0 && (e3 += this.length);
          var r3 = new n2();
          if (t3 < e3 || t3 < 0) return r3;
          e3 < 0 && (e3 = 0), t3 > this.length && (t3 = this.length);
          for (var i2 = 0, o2 = this.head; null !== o2 && i2 < e3; i2++) o2 = o2.next;
          for (; null !== o2 && i2 < t3; i2++, o2 = o2.next) r3.push(o2.value);
          return r3;
        }, n2.prototype.sliceReverse = function(e3, t3) {
          (t3 = t3 || this.length) < 0 && (t3 += this.length), (e3 = e3 || 0) < 0 && (e3 += this.length);
          var r3 = new n2();
          if (t3 < e3 || t3 < 0) return r3;
          e3 < 0 && (e3 = 0), t3 > this.length && (t3 = this.length);
          for (var i2 = this.length, o2 = this.tail; null !== o2 && i2 > t3; i2--) o2 = o2.prev;
          for (; null !== o2 && i2 > e3; i2--, o2 = o2.prev) r3.push(o2.value);
          return r3;
        }, n2.prototype.splice = function(e3, t3, ...r3) {
          e3 > this.length && (e3 = this.length - 1), e3 < 0 && (e3 = this.length + e3);
          for (var n3 = 0, i2 = this.head; null !== i2 && n3 < e3; n3++) i2 = i2.next;
          var o2, a, u, l, c = [];
          for (n3 = 0; i2 && n3 < t3; n3++) c.push(i2.value), i2 = this.removeNode(i2);
          for (null === i2 && (i2 = this.tail), i2 !== this.head && i2 !== this.tail && (i2 = i2.prev), n3 = 0; n3 < r3.length; n3++) o2 = this, a = i2, u = r3[n3], l = void 0, null === (l = a === o2.head ? new s(u, null, a, o2) : new s(u, a, a.next, o2)).next && (o2.tail = l), null === l.prev && (o2.head = l), o2.length++, i2 = l;
          return c;
        }, n2.prototype.reverse = function() {
          for (var e3 = this.head, t3 = this.tail, r3 = e3; null !== r3; r3 = r3.prev) {
            var n3 = r3.prev;
            r3.prev = r3.next, r3.next = n3;
          }
          return this.head = t3, this.tail = e3, this;
        };
        try {
          r2(9602)(n2);
        } catch (e3) {
        }
      }, 10: function() {
      }, 4995: function() {
      }, 2361: function() {
      }, 4616: function() {
      }, 3518: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4155);
        const i = r2(7187).EventEmitter, o = r2(2681), s = r2(8254), a = r2(226), u = r2(1772), l = r2(298), c = r2(8473).Writable, h = r2(5717), f = r2(5408), p = r2(1697), d = r2(3380), y = r2(7529), g = r2(1227)("mqttjs:client"), b = n2 ? n2.nextTick : function(e3) {
          setTimeout(e3, 0);
        }, m = r2.g.setImmediate || function(e3) {
          b(e3);
        }, v = { keepalive: 60, reschedulePings: true, protocolId: "MQTT", protocolVersion: 4, reconnectPeriod: 1e3, connectTimeout: 3e4, clean: true, resubscribe: true }, w = ["ECONNREFUSED", "EADDRINUSE", "ECONNRESET", "ENOTFOUND"], _ = { 0: "", 1: "Unacceptable protocol version", 2: "Identifier rejected", 3: "Server unavailable", 4: "Bad username or password", 5: "Not authorized", 16: "No matching subscribers", 17: "No subscription existed", 128: "Unspecified error", 129: "Malformed Packet", 130: "Protocol Error", 131: "Implementation specific error", 132: "Unsupported Protocol Version", 133: "Client Identifier not valid", 134: "Bad User Name or Password", 135: "Not authorized", 136: "Server unavailable", 137: "Server busy", 138: "Banned", 139: "Server shutting down", 140: "Bad authentication method", 141: "Keep Alive timeout", 142: "Session taken over", 143: "Topic Filter invalid", 144: "Topic Name invalid", 145: "Packet identifier in use", 146: "Packet Identifier not found", 147: "Receive Maximum exceeded", 148: "Topic Alias invalid", 149: "Packet too large", 150: "Message rate too high", 151: "Quota exceeded", 152: "Administrative action", 153: "Payload format invalid", 154: "Retain not supported", 155: "QoS not supported", 156: "Use another server", 157: "Server moved", 158: "Shared Subscriptions not supported", 159: "Connection rate exceeded", 160: "Maximum connect time", 161: "Subscription Identifiers not supported", 162: "Wildcard Subscriptions not supported" };
        function E(e3, t3) {
          let r3;
          t3.properties && (r3 = t3.properties.topicAlias);
          let n3 = t3.topic.toString();
          if (0 === n3.length) {
            if (void 0 === r3) return new Error("Unregistered Topic Alias");
            if (n3 = e3.topicAliasSend.getTopicByAlias(r3), void 0 === n3) return new Error("Unregistered Topic Alias");
            t3.topic = n3;
          }
          r3 && delete t3.properties.topicAlias;
        }
        function k(e3, t3, r3) {
          g("sendPacket :: packet: %O", t3), g("sendPacket :: emitting `packetsend`"), e3.emit("packetsend", t3), g("sendPacket :: writing to stream");
          const n3 = u.writeToStream(t3, e3.stream, e3.options);
          g("sendPacket :: writeToStream result %s", n3), !n3 && r3 && r3 !== T ? (g("sendPacket :: handle events on `drain` once through callback."), e3.stream.once("drain", r3)) : r3 && (g("sendPacket :: invoking cb"), r3());
        }
        function S(e3) {
          e3 && (g("flush: queue exists? %b", !!e3), Object.keys(e3).forEach(function(t3) {
            "function" == typeof e3[t3].cb && (e3[t3].cb(new Error("Connection closed")), delete e3[t3]);
          }));
        }
        function C(e3, t3, r3, n3) {
          g("storeAndSend :: store packet with cmd %s to outgoingStore", t3.cmd);
          let i2, o2 = t3;
          if ("publish" === o2.cmd && (o2 = p(t3), i2 = E(e3, o2), i2)) return r3 && r3(i2);
          e3.outgoingStore.put(o2, function(i3) {
            if (i3) return r3 && r3(i3);
            n3(), k(e3, t3, r3);
          });
        }
        function T(e3) {
          g("nop ::", e3);
        }
        function A(e3, t3) {
          let r3;
          const n3 = this;
          if (!(this instanceof A)) return new A(e3, t3);
          for (r3 in this.options = t3 || {}, v) void 0 === this.options[r3] ? this.options[r3] = v[r3] : this.options[r3] = t3[r3];
          g("MqttClient :: options.protocol", t3.protocol), g("MqttClient :: options.protocolVersion", t3.protocolVersion), g("MqttClient :: options.username", t3.username), g("MqttClient :: options.keepalive", t3.keepalive), g("MqttClient :: options.reconnectPeriod", t3.reconnectPeriod), g("MqttClient :: options.rejectUnauthorized", t3.rejectUnauthorized), g("MqttClient :: options.topicAliasMaximum", t3.topicAliasMaximum), this.options.clientId = "string" == typeof t3.clientId ? t3.clientId : "mqttjs_" + Math.random().toString(16).substr(2, 8), g("MqttClient :: clientId", this.options.clientId), this.options.customHandleAcks = 5 === t3.protocolVersion && t3.customHandleAcks ? t3.customHandleAcks : function() {
            arguments[3](0);
          }, this.streamBuilder = e3, this.messageIdProvider = void 0 === this.options.messageIdProvider ? new l() : this.options.messageIdProvider, this.outgoingStore = t3.outgoingStore || new o(), this.incomingStore = t3.incomingStore || new o(), this.queueQoSZero = void 0 === t3.queueQoSZero || t3.queueQoSZero, this._resubscribeTopics = {}, this.messageIdToTopic = {}, this.pingTimer = null, this.connected = false, this.disconnecting = false, this.queue = [], this.connackTimer = null, this.reconnectTimer = null, this._storeProcessing = false, this._packetIdsDuringStoreProcessing = {}, this._storeProcessingQueue = [], this.outgoing = {}, this._firstConnection = true, t3.topicAliasMaximum > 0 && (t3.topicAliasMaximum > 65535 ? g("MqttClient :: options.topicAliasMaximum is out of range") : this.topicAliasRecv = new s(t3.topicAliasMaximum)), this.on("connect", function() {
            const e4 = this.queue;
            g("connect :: sending queued packets"), function t4() {
              const r4 = e4.shift();
              g("deliver :: entry %o", r4);
              let i2 = null;
              if (!r4) return void n3._resubscribe();
              i2 = r4.packet, g("deliver :: call _sendPacket for %o", i2);
              let o2 = true;
              i2.messageId && 0 !== i2.messageId && (n3.messageIdProvider.register(i2.messageId) || (o2 = false)), o2 ? n3._sendPacket(i2, function(e5) {
                r4.cb && r4.cb(e5), t4();
              }) : (g("messageId: %d has already used. The message is skipped and removed.", i2.messageId), t4());
            }();
          }), this.on("close", function() {
            g("close :: connected set to `false`"), this.connected = false, g("close :: clearing connackTimer"), clearTimeout(this.connackTimer), g("close :: clearing ping timer"), null !== n3.pingTimer && (n3.pingTimer.clear(), n3.pingTimer = null), this.topicAliasRecv && this.topicAliasRecv.clear(), g("close :: calling _setupReconnect"), this._setupReconnect();
          }), i.call(this), g("MqttClient :: setting up stream"), this._setupStream();
        }
        h(A, i), A.prototype._setupStream = function() {
          const e3 = this, t3 = new c(), r3 = u.parser(this.options);
          let n3 = null;
          const i2 = [];
          function o2() {
            if (i2.length) b(s2);
            else {
              const e4 = n3;
              n3 = null, e4();
            }
          }
          function s2() {
            g("work :: getting next packet in queue");
            const t4 = i2.shift();
            if (t4) g("work :: packet pulled from queue"), e3._handlePacket(t4, o2);
            else {
              g("work :: no packets in queue");
              const e4 = n3;
              n3 = null, g("work :: done flag is %s", !!e4), e4 && e4();
            }
          }
          g("_setupStream :: calling method to clear reconnect"), this._clearReconnect(), g("_setupStream :: using streamBuilder provided to client to create stream"), this.stream = this.streamBuilder(this), r3.on("packet", function(e4) {
            g("parser :: on packet push to packets array."), i2.push(e4);
          }), t3._write = function(e4, t4, i3) {
            n3 = i3, g("writable stream :: parsing buffer"), r3.parse(e4), s2();
          }, g("_setupStream :: pipe stream to writable stream"), this.stream.pipe(t3), this.stream.on("error", function(t4) {
            g("streamErrorHandler :: error", t4.message), w.includes(t4.code) ? (g("streamErrorHandler :: emitting error"), e3.emit("error", t4)) : T(t4);
          }), this.stream.on("close", function() {
            var t4;
            g("(%s)stream :: on close", e3.options.clientId), (t4 = e3.outgoing) && (g("flushVolatile :: deleting volatile messages from the queue and setting their callbacks as error function"), Object.keys(t4).forEach(function(e4) {
              t4[e4].volatile && "function" == typeof t4[e4].cb && (t4[e4].cb(new Error("Connection closed")), delete t4[e4]);
            })), g("stream: emit close to MqttClient"), e3.emit("close");
          }), g("_setupStream: sending packet `connect`");
          const a2 = Object.create(this.options);
          if (a2.cmd = "connect", this.topicAliasRecv && (a2.properties || (a2.properties = {}), this.topicAliasRecv && (a2.properties.topicAliasMaximum = this.topicAliasRecv.max)), k(this, a2), r3.on("error", this.emit.bind(this, "error")), this.options.properties) {
            if (!this.options.properties.authenticationMethod && this.options.properties.authenticationData) return e3.end(() => this.emit("error", new Error("Packet has no Authentication Method"))), this;
            this.options.properties.authenticationMethod && this.options.authPacket && "object" == typeof this.options.authPacket && k(this, y({ cmd: "auth", reasonCode: 0 }, this.options.authPacket));
          }
          this.stream.setMaxListeners(1e3), clearTimeout(this.connackTimer), this.connackTimer = setTimeout(function() {
            g("!!connectTimeout hit!! Calling _cleanUp with force `true`"), e3._cleanUp(true);
          }, this.options.connectTimeout);
        }, A.prototype._handlePacket = function(e3, t3) {
          const r3 = this.options;
          if (5 === r3.protocolVersion && r3.properties && r3.properties.maximumPacketSize && r3.properties.maximumPacketSize < e3.length) return this.emit("error", new Error("exceeding packets size " + e3.cmd)), this.end({ reasonCode: 149, properties: { reasonString: "Maximum packet size was exceeded" } }), this;
          switch (g("_handlePacket :: emitting packetreceive"), this.emit("packetreceive", e3), e3.cmd) {
            case "publish":
              this._handlePublish(e3, t3);
              break;
            case "puback":
            case "pubrec":
            case "pubcomp":
            case "suback":
            case "unsuback":
              this._handleAck(e3), t3();
              break;
            case "pubrel":
              this._handlePubrel(e3, t3);
              break;
            case "connack":
              this._handleConnack(e3), t3();
              break;
            case "auth":
              this._handleAuth(e3), t3();
              break;
            case "pingresp":
              this._handlePingresp(e3), t3();
              break;
            case "disconnect":
              this._handleDisconnect(e3), t3();
          }
        }, A.prototype._checkDisconnecting = function(e3) {
          return this.disconnecting && (e3 && e3 !== T ? e3(new Error("client disconnecting")) : this.emit("error", new Error("client disconnecting"))), this.disconnecting;
        }, A.prototype.publish = function(e3, t3, r3, n3) {
          g("publish :: message `%s` to topic `%s`", t3, e3);
          const i2 = this.options;
          if ("function" == typeof r3 && (n3 = r3, r3 = null), r3 = y({ qos: 0, retain: false, dup: false }, r3), this._checkDisconnecting(n3)) return this;
          const o2 = this, s2 = function() {
            let s3 = 0;
            if ((1 === r3.qos || 2 === r3.qos) && (s3 = o2._nextId(), null === s3)) return g("No messageId left"), false;
            const a2 = { cmd: "publish", topic: e3, payload: t3, qos: r3.qos, retain: r3.retain, messageId: s3, dup: r3.dup };
            switch (5 === i2.protocolVersion && (a2.properties = r3.properties), g("publish :: qos", r3.qos), r3.qos) {
              case 1:
              case 2:
                o2.outgoing[a2.messageId] = { volatile: false, cb: n3 || T }, g("MqttClient:publish: packet cmd: %s", a2.cmd), o2._sendPacket(a2, void 0, r3.cbStorePut);
                break;
              default:
                g("MqttClient:publish: packet cmd: %s", a2.cmd), o2._sendPacket(a2, n3, r3.cbStorePut);
            }
            return true;
          };
          return (this._storeProcessing || this._storeProcessingQueue.length > 0 || !s2()) && this._storeProcessingQueue.push({ invoke: s2, cbStorePut: r3.cbStorePut, callback: n3 }), this;
        }, A.prototype.subscribe = function() {
          const e3 = this, t3 = new Array(arguments.length);
          for (let e4 = 0; e4 < arguments.length; e4++) t3[e4] = arguments[e4];
          const r3 = [];
          let n3 = t3.shift();
          const i2 = n3.resubscribe;
          let o2 = t3.pop() || T, s2 = t3.pop();
          const a2 = this.options.protocolVersion;
          delete n3.resubscribe, "string" == typeof n3 && (n3 = [n3]), "function" != typeof o2 && (s2 = o2, o2 = T);
          const u2 = d.validateTopics(n3);
          if (null !== u2) return m(o2, new Error("Invalid topic " + u2)), this;
          if (this._checkDisconnecting(o2)) return g("subscribe: discconecting true"), this;
          const l2 = { qos: 0 };
          if (5 === a2 && (l2.nl = false, l2.rap = false, l2.rh = 0), s2 = y(l2, s2), Array.isArray(n3) ? n3.forEach(function(t4) {
            if (g("subscribe: array topic %s", t4), !Object.prototype.hasOwnProperty.call(e3._resubscribeTopics, t4) || e3._resubscribeTopics[t4].qos < s2.qos || i2) {
              const e4 = { topic: t4, qos: s2.qos };
              5 === a2 && (e4.nl = s2.nl, e4.rap = s2.rap, e4.rh = s2.rh, e4.properties = s2.properties), g("subscribe: pushing topic `%s` and qos `%s` to subs list", e4.topic, e4.qos), r3.push(e4);
            }
          }) : Object.keys(n3).forEach(function(t4) {
            if (g("subscribe: object topic %s", t4), !Object.prototype.hasOwnProperty.call(e3._resubscribeTopics, t4) || e3._resubscribeTopics[t4].qos < n3[t4].qos || i2) {
              const e4 = { topic: t4, qos: n3[t4].qos };
              5 === a2 && (e4.nl = n3[t4].nl, e4.rap = n3[t4].rap, e4.rh = n3[t4].rh, e4.properties = s2.properties), g("subscribe: pushing `%s` to subs list", e4), r3.push(e4);
            }
          }), !r3.length) return o2(null, []), this;
          const c2 = function() {
            const t4 = e3._nextId();
            if (null === t4) return g("No messageId left"), false;
            const n4 = { cmd: "subscribe", subscriptions: r3, qos: 1, retain: false, dup: false, messageId: t4 };
            if (s2.properties && (n4.properties = s2.properties), e3.options.resubscribe) {
              g("subscribe :: resubscribe true");
              const t5 = [];
              r3.forEach(function(r4) {
                if (e3.options.reconnectPeriod > 0) {
                  const n5 = { qos: r4.qos };
                  5 === a2 && (n5.nl = r4.nl || false, n5.rap = r4.rap || false, n5.rh = r4.rh || 0, n5.properties = r4.properties), e3._resubscribeTopics[r4.topic] = n5, t5.push(r4.topic);
                }
              }), e3.messageIdToTopic[n4.messageId] = t5;
            }
            return e3.outgoing[n4.messageId] = { volatile: true, cb: function(e4, t5) {
              if (!e4) {
                const e5 = t5.granted;
                for (let t6 = 0; t6 < e5.length; t6 += 1) r3[t6].qos = e5[t6];
              }
              o2(e4, r3);
            } }, g("subscribe :: call _sendPacket"), e3._sendPacket(n4), true;
          };
          return (this._storeProcessing || this._storeProcessingQueue.length > 0 || !c2()) && this._storeProcessingQueue.push({ invoke: c2, callback: o2 }), this;
        }, A.prototype.unsubscribe = function() {
          const e3 = this, t3 = new Array(arguments.length);
          for (let e4 = 0; e4 < arguments.length; e4++) t3[e4] = arguments[e4];
          let r3 = t3.shift(), n3 = t3.pop() || T, i2 = t3.pop();
          "string" == typeof r3 && (r3 = [r3]), "function" != typeof n3 && (i2 = n3, n3 = T);
          const o2 = d.validateTopics(r3);
          if (null !== o2) return m(n3, new Error("Invalid topic " + o2)), this;
          if (e3._checkDisconnecting(n3)) return this;
          const s2 = function() {
            const t4 = e3._nextId();
            if (null === t4) return g("No messageId left"), false;
            const o3 = { cmd: "unsubscribe", qos: 1, messageId: t4 };
            return "string" == typeof r3 ? o3.unsubscriptions = [r3] : Array.isArray(r3) && (o3.unsubscriptions = r3), e3.options.resubscribe && o3.unsubscriptions.forEach(function(t5) {
              delete e3._resubscribeTopics[t5];
            }), "object" == typeof i2 && i2.properties && (o3.properties = i2.properties), e3.outgoing[o3.messageId] = { volatile: true, cb: n3 }, g("unsubscribe: call _sendPacket"), e3._sendPacket(o3), true;
          };
          return (this._storeProcessing || this._storeProcessingQueue.length > 0 || !s2()) && this._storeProcessingQueue.push({ invoke: s2, callback: n3 }), this;
        }, A.prototype.end = function(e3, t3, r3) {
          const n3 = this;
          function i2() {
            g("end :: closeStores: closing incoming and outgoing stores"), n3.disconnected = true, n3.incomingStore.close(function(e4) {
              n3.outgoingStore.close(function(t4) {
                if (g("end :: closeStores: emitting end"), n3.emit("end"), r3) {
                  const n4 = e4 || t4;
                  g("end :: closeStores: invoking callback with args"), r3(n4);
                }
              });
            }), n3._deferredReconnect && n3._deferredReconnect();
          }
          function o2() {
            g("end :: (%s) :: finish :: calling _cleanUp with force %s", n3.options.clientId, e3), n3._cleanUp(e3, () => {
              g("end :: finish :: calling process.nextTick on closeStores"), b(i2.bind(n3));
            }, t3);
          }
          return g("end :: (%s)", this.options.clientId), null != e3 && "boolean" == typeof e3 || (r3 = t3 || T, t3 = e3, e3 = false, "object" != typeof t3 && (r3 = t3, t3 = null, "function" != typeof r3 && (r3 = T))), "object" != typeof t3 && (r3 = t3, t3 = null), g("end :: cb? %s", !!r3), r3 = r3 || T, this.disconnecting ? (r3(), this) : (this._clearReconnect(), this.disconnecting = true, !e3 && Object.keys(this.outgoing).length > 0 ? (g("end :: (%s) :: calling finish in 10ms once outgoing is empty", n3.options.clientId), this.once("outgoingEmpty", setTimeout.bind(null, o2, 10))) : (g("end :: (%s) :: immediately calling finish", n3.options.clientId), o2()), this);
        }, A.prototype.removeOutgoingMessage = function(e3) {
          const t3 = this.outgoing[e3] ? this.outgoing[e3].cb : null;
          return delete this.outgoing[e3], this.outgoingStore.del({ messageId: e3 }, function() {
            t3(new Error("Message removed"));
          }), this;
        }, A.prototype.reconnect = function(e3) {
          g("client reconnect");
          const t3 = this, r3 = function() {
            e3 ? (t3.options.incomingStore = e3.incomingStore, t3.options.outgoingStore = e3.outgoingStore) : (t3.options.incomingStore = null, t3.options.outgoingStore = null), t3.incomingStore = t3.options.incomingStore || new o(), t3.outgoingStore = t3.options.outgoingStore || new o(), t3.disconnecting = false, t3.disconnected = false, t3._deferredReconnect = null, t3._reconnect();
          };
          return this.disconnecting && !this.disconnected ? this._deferredReconnect = r3 : r3(), this;
        }, A.prototype._reconnect = function() {
          g("_reconnect: emitting reconnect to client"), this.emit("reconnect"), this.connected ? (this.end(() => {
            this._setupStream();
          }), g("client already connected. disconnecting first.")) : (g("_reconnect: calling _setupStream"), this._setupStream());
        }, A.prototype._setupReconnect = function() {
          const e3 = this;
          !e3.disconnecting && !e3.reconnectTimer && e3.options.reconnectPeriod > 0 ? (this.reconnecting || (g("_setupReconnect :: emit `offline` state"), this.emit("offline"), g("_setupReconnect :: set `reconnecting` to `true`"), this.reconnecting = true), g("_setupReconnect :: setting reconnectTimer for %d ms", e3.options.reconnectPeriod), e3.reconnectTimer = setInterval(function() {
            g("reconnectTimer :: reconnect triggered!"), e3._reconnect();
          }, e3.options.reconnectPeriod)) : g("_setupReconnect :: doing nothing...");
        }, A.prototype._clearReconnect = function() {
          g("_clearReconnect : clearing reconnect timer"), this.reconnectTimer && (clearInterval(this.reconnectTimer), this.reconnectTimer = null);
        }, A.prototype._cleanUp = function(e3, t3) {
          const r3 = arguments[2];
          if (t3 && (g("_cleanUp :: done callback provided for on stream close"), this.stream.on("close", t3)), g("_cleanUp :: forced? %s", e3), e3) 0 === this.options.reconnectPeriod && this.options.clean && S(this.outgoing), g("_cleanUp :: (%s) :: destroying stream", this.options.clientId), this.stream.destroy();
          else {
            const e4 = y({ cmd: "disconnect" }, r3);
            g("_cleanUp :: (%s) :: call _sendPacket with disconnect packet", this.options.clientId), this._sendPacket(e4, m.bind(null, this.stream.end.bind(this.stream)));
          }
          this.disconnecting || (g("_cleanUp :: client not disconnecting. Clearing and resetting reconnect."), this._clearReconnect(), this._setupReconnect()), null !== this.pingTimer && (g("_cleanUp :: clearing pingTimer"), this.pingTimer.clear(), this.pingTimer = null), t3 && !this.connected && (g("_cleanUp :: (%s) :: removing stream `done` callback `close` listener", this.options.clientId), this.stream.removeListener("close", t3), t3());
        }, A.prototype._sendPacket = function(e3, t3, r3) {
          g("_sendPacket :: (%s) ::  start", this.options.clientId), r3 = r3 || T, t3 = t3 || T;
          const n3 = function(e4, t4) {
            if (5 === e4.options.protocolVersion && "publish" === t4.cmd) {
              let r4;
              t4.properties && (r4 = t4.properties.topicAlias);
              const n4 = t4.topic.toString();
              if (e4.topicAliasSend) if (r4) {
                if (0 !== n4.length && (g("applyTopicAlias :: register topic: %s - alias: %d", n4, r4), !e4.topicAliasSend.put(n4, r4))) return g("applyTopicAlias :: error out of range. topic: %s - alias: %d", n4, r4), new Error("Sending Topic Alias out of range");
              } else 0 !== n4.length && (e4.options.autoAssignTopicAlias ? (r4 = e4.topicAliasSend.getAliasByTopic(n4), r4 ? (t4.topic = "", t4.properties = { ...t4.properties, topicAlias: r4 }, g("applyTopicAlias :: auto assign(use) topic: %s - alias: %d", n4, r4)) : (r4 = e4.topicAliasSend.getLruAlias(), e4.topicAliasSend.put(n4, r4), t4.properties = { ...t4.properties, topicAlias: r4 }, g("applyTopicAlias :: auto assign topic: %s - alias: %d", n4, r4))) : e4.options.autoUseTopicAlias && (r4 = e4.topicAliasSend.getAliasByTopic(n4), r4 && (t4.topic = "", t4.properties = { ...t4.properties, topicAlias: r4 }, g("applyTopicAlias :: auto use topic: %s - alias: %d", n4, r4))));
              else if (r4) return g("applyTopicAlias :: error out of range. topic: %s - alias: %d", n4, r4), new Error("Sending Topic Alias out of range");
            }
          }(this, e3);
          if (n3) t3(n3);
          else {
            if (!this.connected) return "auth" === e3.cmd ? (this._shiftPingInterval(), void k(this, e3, t3)) : (g("_sendPacket :: client not connected. Storing packet offline."), void this._storePacket(e3, t3, r3));
            switch (this._shiftPingInterval(), e3.cmd) {
              case "publish":
                break;
              case "pubrel":
                return void C(this, e3, t3, r3);
              default:
                return void k(this, e3, t3);
            }
            switch (e3.qos) {
              case 2:
              case 1:
                C(this, e3, t3, r3);
                break;
              default:
                k(this, e3, t3);
            }
            g("_sendPacket :: (%s) ::  end", this.options.clientId);
          }
        }, A.prototype._storePacket = function(e3, t3, r3) {
          g("_storePacket :: packet: %o", e3), g("_storePacket :: cb? %s", !!t3), r3 = r3 || T;
          let n3 = e3;
          if ("publish" === n3.cmd) {
            n3 = p(e3);
            const r4 = E(this, n3);
            if (r4) return t3 && t3(r4);
          }
          0 === (n3.qos || 0) && this.queueQoSZero || "publish" !== n3.cmd ? this.queue.push({ packet: n3, cb: t3 }) : n3.qos > 0 ? (t3 = this.outgoing[n3.messageId] ? this.outgoing[n3.messageId].cb : null, this.outgoingStore.put(n3, function(e4) {
            if (e4) return t3 && t3(e4);
            r3();
          })) : t3 && t3(new Error("No connection to broker"));
        }, A.prototype._setupPingTimer = function() {
          g("_setupPingTimer :: keepalive %d (seconds)", this.options.keepalive);
          const e3 = this;
          !this.pingTimer && this.options.keepalive && (this.pingResp = true, this.pingTimer = f(function() {
            e3._checkPing();
          }, 1e3 * this.options.keepalive));
        }, A.prototype._shiftPingInterval = function() {
          this.pingTimer && this.options.keepalive && this.options.reschedulePings && this.pingTimer.reschedule(1e3 * this.options.keepalive);
        }, A.prototype._checkPing = function() {
          g("_checkPing :: checking ping..."), this.pingResp ? (g("_checkPing :: ping response received. Clearing flag and sending `pingreq`"), this.pingResp = false, this._sendPacket({ cmd: "pingreq" })) : (g("_checkPing :: calling _cleanUp with force true"), this._cleanUp(true));
        }, A.prototype._handlePingresp = function() {
          this.pingResp = true;
        }, A.prototype._handleConnack = function(e3) {
          g("_handleConnack");
          const t3 = this.options, r3 = 5 === t3.protocolVersion ? e3.reasonCode : e3.returnCode;
          if (clearTimeout(this.connackTimer), delete this.topicAliasSend, e3.properties) {
            if (e3.properties.topicAliasMaximum) {
              if (e3.properties.topicAliasMaximum > 65535) return void this.emit("error", new Error("topicAliasMaximum from broker is out of range"));
              e3.properties.topicAliasMaximum > 0 && (this.topicAliasSend = new a(e3.properties.topicAliasMaximum));
            }
            e3.properties.serverKeepAlive && t3.keepalive && (t3.keepalive = e3.properties.serverKeepAlive, this._shiftPingInterval()), e3.properties.maximumPacketSize && (t3.properties || (t3.properties = {}), t3.properties.maximumPacketSize = e3.properties.maximumPacketSize);
          }
          if (0 === r3) this.reconnecting = false, this._onConnect(e3);
          else if (r3 > 0) {
            const e4 = new Error("Connection refused: " + _[r3]);
            e4.code = r3, this.emit("error", e4);
          }
        }, A.prototype._handleAuth = function(e3) {
          const t3 = this.options.protocolVersion, r3 = 5 === t3 ? e3.reasonCode : e3.returnCode;
          if (5 !== t3) {
            const e4 = new Error("Protocol error: Auth packets are only supported in MQTT 5. Your version:" + t3);
            return e4.code = r3, void this.emit("error", e4);
          }
          const n3 = this;
          this.handleAuth(e3, function(e4, t4) {
            if (e4) n3.emit("error", e4);
            else if (24 === r3) n3.reconnecting = false, n3._sendPacket(t4);
            else {
              const t5 = new Error("Connection refused: " + _[r3]);
              e4.code = r3, n3.emit("error", t5);
            }
          });
        }, A.prototype.handleAuth = function(e3, t3) {
          t3();
        }, A.prototype._handlePublish = function(e3, t3) {
          g("_handlePublish: packet %o", e3), t3 = void 0 !== t3 ? t3 : T;
          let r3 = e3.topic.toString();
          const n3 = e3.payload, i2 = e3.qos, o2 = e3.messageId, s2 = this, a2 = this.options, u2 = [0, 16, 128, 131, 135, 144, 145, 151, 153];
          if (5 === this.options.protocolVersion) {
            let t4;
            if (e3.properties && (t4 = e3.properties.topicAlias), void 0 !== t4) if (0 === r3.length) {
              if (!(t4 > 0 && t4 <= 65535)) return g("_handlePublish :: topic alias out of range. alias: %d", t4), void this.emit("error", new Error("Received Topic Alias is out of range"));
              {
                const e4 = this.topicAliasRecv.getTopicByAlias(t4);
                if (!e4) return g("_handlePublish :: unregistered topic alias. alias: %d", t4), void this.emit("error", new Error("Received unregistered Topic Alias"));
                r3 = e4, g("_handlePublish :: topic complemented by alias. topic: %s - alias: %d", r3, t4);
              }
            } else {
              if (!this.topicAliasRecv.put(r3, t4)) return g("_handlePublish :: topic alias out of range. alias: %d", t4), void this.emit("error", new Error("Received Topic Alias is out of range"));
              g("_handlePublish :: registered topic: %s - alias: %d", r3, t4);
            }
          }
          switch (g("_handlePublish: qos %d", i2), i2) {
            case 2:
              a2.customHandleAcks(r3, n3, e3, function(r4, n4) {
                return r4 instanceof Error || (n4 = r4, r4 = null), r4 ? s2.emit("error", r4) : -1 === u2.indexOf(n4) ? s2.emit("error", new Error("Wrong reason code for pubrec")) : void (n4 ? s2._sendPacket({ cmd: "pubrec", messageId: o2, reasonCode: n4 }, t3) : s2.incomingStore.put(e3, function() {
                  s2._sendPacket({ cmd: "pubrec", messageId: o2 }, t3);
                }));
              });
              break;
            case 1:
              a2.customHandleAcks(r3, n3, e3, function(i3, a3) {
                return i3 instanceof Error || (a3 = i3, i3 = null), i3 ? s2.emit("error", i3) : -1 === u2.indexOf(a3) ? s2.emit("error", new Error("Wrong reason code for puback")) : (a3 || s2.emit("message", r3, n3, e3), void s2.handleMessage(e3, function(e4) {
                  if (e4) return t3 && t3(e4);
                  s2._sendPacket({ cmd: "puback", messageId: o2, reasonCode: a3 }, t3);
                }));
              });
              break;
            case 0:
              this.emit("message", r3, n3, e3), this.handleMessage(e3, t3);
              break;
            default:
              g("_handlePublish: unknown QoS. Doing nothing.");
          }
        }, A.prototype.handleMessage = function(e3, t3) {
          t3();
        }, A.prototype._handleAck = function(e3) {
          const t3 = e3.messageId, r3 = e3.cmd;
          let n3 = null;
          const i2 = this.outgoing[t3] ? this.outgoing[t3].cb : null, o2 = this;
          let s2;
          if (i2) {
            switch (g("_handleAck :: packet type", r3), r3) {
              case "pubcomp":
              case "puback": {
                const r4 = e3.reasonCode;
                r4 && r4 > 0 && 16 !== r4 && (s2 = new Error("Publish error: " + _[r4]), s2.code = r4, i2(s2, e3)), delete this.outgoing[t3], this.outgoingStore.del(e3, i2), this.messageIdProvider.deallocate(t3), this._invokeStoreProcessingQueue();
                break;
              }
              case "pubrec": {
                n3 = { cmd: "pubrel", qos: 2, messageId: t3 };
                const r4 = e3.reasonCode;
                r4 && r4 > 0 && 16 !== r4 ? (s2 = new Error("Publish error: " + _[r4]), s2.code = r4, i2(s2, e3)) : this._sendPacket(n3);
                break;
              }
              case "suback":
                delete this.outgoing[t3], this.messageIdProvider.deallocate(t3);
                for (let r4 = 0; r4 < e3.granted.length; r4++) if (0 != (128 & e3.granted[r4])) {
                  const e4 = this.messageIdToTopic[t3];
                  e4 && e4.forEach(function(e5) {
                    delete o2._resubscribeTopics[e5];
                  });
                }
                this._invokeStoreProcessingQueue(), i2(null, e3);
                break;
              case "unsuback":
                delete this.outgoing[t3], this.messageIdProvider.deallocate(t3), this._invokeStoreProcessingQueue(), i2(null);
                break;
              default:
                o2.emit("error", new Error("unrecognized packet type"));
            }
            this.disconnecting && 0 === Object.keys(this.outgoing).length && this.emit("outgoingEmpty");
          } else g("_handleAck :: Server sent an ack in error. Ignoring.");
        }, A.prototype._handlePubrel = function(e3, t3) {
          g("handling pubrel packet"), t3 = void 0 !== t3 ? t3 : T;
          const r3 = e3.messageId, n3 = this, i2 = { cmd: "pubcomp", messageId: r3 };
          n3.incomingStore.get(e3, function(e4, r4) {
            e4 ? n3._sendPacket(i2, t3) : (n3.emit("message", r4.topic, r4.payload, r4), n3.handleMessage(r4, function(e5) {
              if (e5) return t3(e5);
              n3.incomingStore.del(r4, T), n3._sendPacket(i2, t3);
            }));
          });
        }, A.prototype._handleDisconnect = function(e3) {
          this.emit("disconnect", e3);
        }, A.prototype._nextId = function() {
          return this.messageIdProvider.allocate();
        }, A.prototype.getLastMessageId = function() {
          return this.messageIdProvider.getLastAllocated();
        }, A.prototype._resubscribe = function() {
          g("_resubscribe");
          const e3 = Object.keys(this._resubscribeTopics);
          if (!this._firstConnection && (this.options.clean || 5 === this.options.protocolVersion && !this.connackPacket.sessionPresent) && e3.length > 0) if (this.options.resubscribe) if (5 === this.options.protocolVersion) {
            g("_resubscribe: protocolVersion 5");
            for (let t3 = 0; t3 < e3.length; t3++) {
              const r3 = {};
              r3[e3[t3]] = this._resubscribeTopics[e3[t3]], r3.resubscribe = true, this.subscribe(r3, { properties: r3[e3[t3]].properties });
            }
          } else this._resubscribeTopics.resubscribe = true, this.subscribe(this._resubscribeTopics);
          else this._resubscribeTopics = {};
          this._firstConnection = false;
        }, A.prototype._onConnect = function(e3) {
          if (this.disconnected) return void this.emit("connect", e3);
          const t3 = this;
          this.connackPacket = e3, this.messageIdProvider.clear(), this._setupPingTimer(), this.connected = true, function r3() {
            let n3 = t3.outgoingStore.createStream();
            function i2() {
              t3._storeProcessing = false, t3._packetIdsDuringStoreProcessing = {};
            }
            function o2() {
              n3.destroy(), n3 = null, t3._flushStoreProcessingQueue(), i2();
            }
            t3.once("close", o2), n3.on("error", function(e4) {
              i2(), t3._flushStoreProcessingQueue(), t3.removeListener("close", o2), t3.emit("error", e4);
            }), n3.on("end", function() {
              let n4 = true;
              for (const e4 in t3._packetIdsDuringStoreProcessing) if (!t3._packetIdsDuringStoreProcessing[e4]) {
                n4 = false;
                break;
              }
              n4 ? (i2(), t3.removeListener("close", o2), t3._invokeAllStoreProcessingQueue(), t3.emit("connect", e3)) : r3();
            }), function e4() {
              if (!n3) return;
              t3._storeProcessing = true;
              const r4 = n3.read(1);
              let i3;
              r4 ? t3._packetIdsDuringStoreProcessing[r4.messageId] ? e4() : t3.disconnecting || t3.reconnectTimer ? n3.destroy && n3.destroy() : (i3 = t3.outgoing[r4.messageId] ? t3.outgoing[r4.messageId].cb : null, t3.outgoing[r4.messageId] = { volatile: false, cb: function(t4, r5) {
                i3 && i3(t4, r5), e4();
              } }, t3._packetIdsDuringStoreProcessing[r4.messageId] = true, t3.messageIdProvider.register(r4.messageId) ? t3._sendPacket(r4) : g("messageId: %d has already used.", r4.messageId)) : n3.once("readable", e4);
            }();
          }();
        }, A.prototype._invokeStoreProcessingQueue = function() {
          if (this._storeProcessingQueue.length > 0) {
            const e3 = this._storeProcessingQueue[0];
            if (e3 && e3.invoke()) return this._storeProcessingQueue.shift(), true;
          }
          return false;
        }, A.prototype._invokeAllStoreProcessingQueue = function() {
          for (; this._invokeStoreProcessingQueue(); ) ;
        }, A.prototype._flushStoreProcessingQueue = function() {
          for (const e3 of this._storeProcessingQueue) e3.cbStorePut && e3.cbStorePut(new Error("Connection closed")), e3.callback && e3.callback(new Error("Connection closed"));
          this._storeProcessingQueue.splice(0);
        }, e2.exports = A;
      }, 9908: function(e2, t2, r2) {
        "use strict";
        const { Buffer: n2 } = r2(8764), i = r2(8473).Transform, o = r2(5981);
        let s, a, u, l = false;
        e2.exports = function(e3, t3) {
          if (t3.hostname = t3.hostname || t3.host, !t3.hostname) throw new Error("Could not determine host. Specify host manually.");
          const r3 = "MQIsdp" === t3.protocolId && 3 === t3.protocolVersion ? "mqttv3.1" : "mqtt";
          !function(e4) {
            e4.hostname || (e4.hostname = "localhost"), e4.path || (e4.path = "/"), e4.wsOptions || (e4.wsOptions = {});
          }(t3);
          const c = function(e4, t4) {
            const r4 = "alis" === e4.protocol ? "wss" : "ws";
            let n3 = r4 + "://" + e4.hostname + e4.path;
            return e4.port && 80 !== e4.port && 443 !== e4.port && (n3 = r4 + "://" + e4.hostname + ":" + e4.port + e4.path), "function" == typeof e4.transformWsUrl && (n3 = e4.transformWsUrl(n3, e4, t4)), n3;
          }(t3, e3);
          return s = t3.my, s.connectSocket({ url: c, protocols: r3 }), a = function() {
            const e4 = new i();
            return e4._write = function(e5, t4, r4) {
              s.sendSocketMessage({ data: e5.buffer, success: function() {
                r4();
              }, fail: function() {
                r4(new Error());
              } });
            }, e4._flush = function(e5) {
              s.closeSocket({ success: function() {
                e5();
              } });
            }, e4;
          }(), u = o.obj(), l || (l = true, s.onSocketOpen(function() {
            u.setReadable(a), u.setWritable(a), u.emit("connect");
          }), s.onSocketMessage(function(e4) {
            if ("string" == typeof e4.data) {
              const t4 = n2.from(e4.data, "base64");
              a.push(t4);
            } else {
              const t4 = new FileReader();
              t4.addEventListener("load", function() {
                let e5 = t4.result;
                e5 = e5 instanceof ArrayBuffer ? n2.from(e5) : n2.from(e5, "utf8"), a.push(e5);
              }), t4.readAsArrayBuffer(e4.data);
            }
          }), s.onSocketClose(function() {
            u.end(), u.destroy();
          }), s.onSocketError(function(e4) {
            u.destroy(e4);
          })), u;
        };
      }, 2878: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4155);
        const i = r2(3518), o = r2(2681), s = r2(8575), a = r2(7529), u = r2(1227)("mqttjs"), l = {};
        function c(e3, t3) {
          if (u("connecting to an MQTT broker..."), "object" != typeof e3 || t3 || (t3 = e3, e3 = null), t3 = t3 || {}, e3) {
            const r4 = s.parse(e3, true);
            if (null != r4.port && (r4.port = Number(r4.port)), null === (t3 = a(r4, t3)).protocol) throw new Error("Missing protocol");
            t3.protocol = t3.protocol.replace(/:$/, "");
          }
          if (function(e4) {
            let t4;
            e4.auth && (t4 = e4.auth.match(/^(.+):(.+)$/), t4 ? (e4.username = t4[1], e4.password = t4[2]) : e4.username = e4.auth);
          }(t3), t3.query && "string" == typeof t3.query.clientId && (t3.clientId = t3.query.clientId), t3.cert && t3.key) {
            if (!t3.protocol) throw new Error("Missing secure protocol key");
            if (-1 === ["mqtts", "wss", "wxs", "alis"].indexOf(t3.protocol)) switch (t3.protocol) {
              case "mqtt":
                t3.protocol = "mqtts";
                break;
              case "ws":
                t3.protocol = "wss";
                break;
              case "wx":
                t3.protocol = "wxs";
                break;
              case "ali":
                t3.protocol = "alis";
                break;
              default:
                throw new Error('Unknown protocol for secure connection: "' + t3.protocol + '"!');
            }
          }
          if (!l[t3.protocol]) {
            const e4 = -1 !== ["mqtts", "wss"].indexOf(t3.protocol);
            t3.protocol = ["mqtt", "mqtts", "ws", "wss", "wx", "wxs", "ali", "alis"].filter(function(t4, r4) {
              return (!e4 || r4 % 2 != 0) && "function" == typeof l[t4];
            })[0];
          }
          if (false === t3.clean && !t3.clientId) throw new Error("Missing clientId for unclean clients");
          t3.protocol && (t3.defaultProtocol = t3.protocol);
          const r3 = new i(function(e4) {
            return t3.servers && (e4._reconnectCount && e4._reconnectCount !== t3.servers.length || (e4._reconnectCount = 0), t3.host = t3.servers[e4._reconnectCount].host, t3.port = t3.servers[e4._reconnectCount].port, t3.protocol = t3.servers[e4._reconnectCount].protocol ? t3.servers[e4._reconnectCount].protocol : t3.defaultProtocol, t3.hostname = t3.host, e4._reconnectCount++), u("calling streambuilder for", t3.protocol), l[t3.protocol](e4, t3);
          }, t3);
          return r3.on("error", function() {
          }), r3;
        }
        void 0 !== n2 && "browser" !== n2.title || "function" != typeof r2 ? (l.mqtt = r2(4983), l.tcp = r2(4983), l.ssl = r2(4606), l.tls = r2(4606), l.mqtts = r2(4606)) : (l.wx = r2(7465), l.wxs = r2(7465), l.ali = r2(9908), l.alis = r2(9908)), l.ws = r2(4574), l.wss = r2(4574), e2.exports = c, e2.exports.connect = c, e2.exports.MqttClient = i, e2.exports.Store = o;
      }, 4983: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(10), i = r2(1227)("mqttjs:tcp");
        e2.exports = function(e3, t3) {
          t3.port = t3.port || 1883, t3.hostname = t3.hostname || t3.host || "localhost";
          const r3 = t3.port, o = t3.hostname;
          return i("port %d and host %s", r3, o), n2.createConnection(r3, o);
        };
      }, 4606: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(4995), i = r2(10), o = r2(1227)("mqttjs:tls");
        e2.exports = function(e3, t3) {
          t3.port = t3.port || 8883, t3.host = t3.hostname || t3.host || "localhost", 0 === i.isIP(t3.host) && (t3.servername = t3.host), t3.rejectUnauthorized = false !== t3.rejectUnauthorized, delete t3.path, o("port %d host %s rejectUnauthorized %b", t3.port, t3.host, t3.rejectUnauthorized);
          const r3 = n2.connect(t3);
          function s(n3) {
            t3.rejectUnauthorized && e3.emit("error", n3), r3.end();
          }
          return r3.on("secureConnect", function() {
            t3.rejectUnauthorized && !r3.authorized ? r3.emit("error", new Error("TLS not authorized")) : r3.removeListener("error", s);
          }), r3.on("error", s), r3;
        };
      }, 4574: function(e2, t2, r2) {
        "use strict";
        var n2 = r2(4155);
        const { Buffer: i } = r2(8764), o = r2(7026), s = r2(1227)("mqttjs:ws"), a = r2(5981), u = r2(8473).Transform, l = ["rejectUnauthorized", "ca", "cert", "key", "pfx", "passphrase"], c = void 0 !== n2 && "browser" === n2.title || "function" == typeof r2;
        function h(e3, t3) {
          let r3 = e3.protocol + "://" + e3.hostname + ":" + e3.port + e3.path;
          return "function" == typeof e3.transformWsUrl && (r3 = e3.transformWsUrl(r3, e3, t3)), r3;
        }
        function f(e3) {
          const t3 = e3;
          return e3.hostname || (t3.hostname = "localhost"), e3.port || ("wss" === e3.protocol ? t3.port = 443 : t3.port = 80), e3.path || (t3.path = "/"), e3.wsOptions || (t3.wsOptions = {}), c || "wss" !== e3.protocol || l.forEach(function(r3) {
            Object.prototype.hasOwnProperty.call(e3, r3) && !Object.prototype.hasOwnProperty.call(e3.wsOptions, r3) && (t3.wsOptions[r3] = e3[r3]);
          }), t3;
        }
        e2.exports = c ? function(e3, t3) {
          let r3;
          s("browserStreamBuilder");
          const n3 = function(e4) {
            const t4 = f(e4);
            if (t4.hostname || (t4.hostname = t4.host), !t4.hostname) {
              if ("undefined" == typeof document) throw new Error("Could not determine host. Specify host manually.");
              const e5 = new URL(document.URL);
              t4.hostname = e5.hostname, t4.port || (t4.port = e5.port);
            }
            return void 0 === t4.objectMode && (t4.objectMode = !(true === t4.binary || void 0 === t4.binary)), t4;
          }(t3), o2 = n3.browserBufferSize || 524288, l2 = t3.browserBufferTimeout || 1e3, c2 = !t3.objectMode, p = function(e4, t4) {
            const r4 = "MQIsdp" === t4.protocolId && 3 === t4.protocolVersion ? "mqttv3.1" : "mqtt", n4 = h(t4, e4), i2 = new WebSocket(n4, [r4]);
            return i2.binaryType = "arraybuffer", i2;
          }(e3, t3), d = function(e4, t4, r4) {
            const n4 = new u({ objectModeMode: e4.objectMode });
            return n4._write = function e5(t5, r5, n5) {
              p.bufferedAmount > o2 && setTimeout(e5, l2, t5, r5, n5), c2 && "string" == typeof t5 && (t5 = i.from(t5, "utf8"));
              try {
                p.send(t5);
              } catch (e6) {
                return n5(e6);
              }
              n5();
            }, n4._flush = function(e5) {
              p.close(), e5();
            }, n4;
          }(t3);
          t3.objectMode || (d._writev = w), d.on("close", () => {
            p.close();
          });
          const y = void 0 !== p.addEventListener;
          function g() {
            r3.setReadable(d), r3.setWritable(d), r3.emit("connect");
          }
          function b() {
            r3.end(), r3.destroy();
          }
          function m(e4) {
            r3.destroy(e4);
          }
          function v(e4) {
            let t4 = e4.data;
            t4 = t4 instanceof ArrayBuffer ? i.from(t4) : i.from(t4, "utf8"), d.push(t4);
          }
          function w(e4, t4) {
            const r4 = new Array(e4.length);
            for (let t5 = 0; t5 < e4.length; t5++) "string" == typeof e4[t5].chunk ? r4[t5] = i.from(e4[t5], "utf8") : r4[t5] = e4[t5].chunk;
            this._write(i.concat(r4), "binary", t4);
          }
          return p.readyState === p.OPEN ? r3 = d : (r3 = r3 = a(void 0, void 0, t3), t3.objectMode || (r3._writev = w), y ? p.addEventListener("open", g) : p.onopen = g), r3.socket = p, y ? (p.addEventListener("close", b), p.addEventListener("error", m), p.addEventListener("message", v)) : (p.onclose = b, p.onerror = m, p.onmessage = v), r3;
        } : function(e3, t3) {
          s("streamBuilder");
          const r3 = f(t3), n3 = h(r3, e3), i2 = function(e4, t4, r4) {
            s("createWebSocket"), s("protocol: " + r4.protocolId + " " + r4.protocolVersion);
            const n4 = "MQIsdp" === r4.protocolId && 3 === r4.protocolVersion ? "mqttv3.1" : "mqtt";
            return s("creating new Websocket for url: " + t4 + " and protocol: " + n4), new o(t4, [n4], r4.wsOptions);
          }(0, n3, r3), a2 = o.createWebSocketStream(i2, r3.wsOptions);
          return a2.url = n3, i2.on("close", () => {
            a2.destroy();
          }), a2;
        };
      }, 7465: function(e2, t2, r2) {
        "use strict";
        const { Buffer: n2 } = r2(8764), i = r2(8473).Transform, o = r2(5981);
        let s, a, u;
        e2.exports = function(e3, t3) {
          if (t3.hostname = t3.hostname || t3.host, !t3.hostname) throw new Error("Could not determine host. Specify host manually.");
          const r3 = "MQIsdp" === t3.protocolId && 3 === t3.protocolVersion ? "mqttv3.1" : "mqtt";
          !function(e4) {
            e4.hostname || (e4.hostname = "localhost"), e4.path || (e4.path = "/"), e4.wsOptions || (e4.wsOptions = {});
          }(t3);
          const l = function(e4, t4) {
            const r4 = "wxs" === e4.protocol ? "wss" : "ws";
            let n3 = r4 + "://" + e4.hostname + e4.path;
            return e4.port && 80 !== e4.port && 443 !== e4.port && (n3 = r4 + "://" + e4.hostname + ":" + e4.port + e4.path), "function" == typeof e4.transformWsUrl && (n3 = e4.transformWsUrl(n3, e4, t4)), n3;
          }(t3, e3);
          s = wx.connectSocket({ url: l, protocols: [r3] }), a = function() {
            const e4 = new i();
            return e4._write = function(e5, t4, r4) {
              s.send({ data: e5.buffer, success: function() {
                r4();
              }, fail: function(e6) {
                r4(new Error(e6));
              } });
            }, e4._flush = function(e5) {
              s.close({ success: function() {
                e5();
              } });
            }, e4;
          }(), u = o.obj(), u._destroy = function(e4, t4) {
            s.close({ success: function() {
              t4 && t4(e4);
            } });
          };
          const c = u.destroy;
          return u.destroy = (function() {
            u.destroy = c;
            const e4 = this;
            setTimeout(function() {
              s.close({ fail: function() {
                e4._destroy(new Error());
              } });
            }, 0);
          }).bind(u), s.onOpen(function() {
            u.setReadable(a), u.setWritable(a), u.emit("connect");
          }), s.onMessage(function(e4) {
            let t4 = e4.data;
            t4 = t4 instanceof ArrayBuffer ? n2.from(t4) : n2.from(t4, "utf8"), a.push(t4);
          }), s.onClose(function() {
            u.end(), u.destroy();
          }), s.onError(function(e4) {
            u.destroy(new Error(e4.errMsg));
          }), u;
        };
      }, 298: function(e2) {
        "use strict";
        function t2() {
          if (!(this instanceof t2)) return new t2();
          this.nextId = Math.max(1, Math.floor(65535 * Math.random()));
        }
        t2.prototype.allocate = function() {
          const e3 = this.nextId++;
          return 65536 === this.nextId && (this.nextId = 1), e3;
        }, t2.prototype.getLastAllocated = function() {
          return 1 === this.nextId ? 65535 : this.nextId - 1;
        }, t2.prototype.register = function(e3) {
          return true;
        }, t2.prototype.deallocate = function(e3) {
        }, t2.prototype.clear = function() {
        }, e2.exports = t2;
      }, 2681: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(7529), i = r2(8473).Readable, o = { objectMode: true }, s = { clean: true };
        function a(e3) {
          if (!(this instanceof a)) return new a(e3);
          this.options = e3 || {}, this.options = n2(s, e3), this._inflights = /* @__PURE__ */ new Map();
        }
        a.prototype.put = function(e3, t3) {
          return this._inflights.set(e3.messageId, e3), t3 && t3(), this;
        }, a.prototype.createStream = function() {
          const e3 = new i(o), t3 = [];
          let r3 = false, n3 = 0;
          return this._inflights.forEach(function(e4, r4) {
            t3.push(e4);
          }), e3._read = function() {
            !r3 && n3 < t3.length ? this.push(t3[n3++]) : this.push(null);
          }, e3.destroy = function() {
            if (r3) return;
            const e4 = this;
            r3 = true, setTimeout(function() {
              e4.emit("close");
            }, 0);
          }, e3;
        }, a.prototype.del = function(e3, t3) {
          return (e3 = this._inflights.get(e3.messageId)) ? (this._inflights.delete(e3.messageId), t3(null, e3)) : t3 && t3(new Error("missing packet")), this;
        }, a.prototype.get = function(e3, t3) {
          return (e3 = this._inflights.get(e3.messageId)) ? t3(null, e3) : t3 && t3(new Error("missing packet")), this;
        }, a.prototype.close = function(e3) {
          this.options.clean && (this._inflights = null), e3 && e3();
        }, e2.exports = a;
      }, 8254: function(e2) {
        "use strict";
        function t2(e3) {
          if (!(this instanceof t2)) return new t2(e3);
          this.aliasToTopic = {}, this.max = e3;
        }
        t2.prototype.put = function(e3, t3) {
          return !(0 === t3 || t3 > this.max || (this.aliasToTopic[t3] = e3, this.length = Object.keys(this.aliasToTopic).length, 0));
        }, t2.prototype.getTopicByAlias = function(e3) {
          return this.aliasToTopic[e3];
        }, t2.prototype.clear = function() {
          this.aliasToTopic = {};
        }, e2.exports = t2;
      }, 226: function(e2, t2, r2) {
        "use strict";
        const n2 = r2(9593), i = r2(423).Q;
        function o(e3) {
          if (!(this instanceof o)) return new o(e3);
          e3 > 0 && (this.aliasToTopic = new n2({ max: e3 }), this.topicToAlias = {}, this.numberAllocator = new i(1, e3), this.max = e3, this.length = 0);
        }
        o.prototype.put = function(e3, t3) {
          if (0 === t3 || t3 > this.max) return false;
          const r3 = this.aliasToTopic.get(t3);
          return r3 && delete this.topicToAlias[r3], this.aliasToTopic.set(t3, e3), this.topicToAlias[e3] = t3, this.numberAllocator.use(t3), this.length = this.aliasToTopic.length, true;
        }, o.prototype.getTopicByAlias = function(e3) {
          return this.aliasToTopic.get(e3);
        }, o.prototype.getAliasByTopic = function(e3) {
          const t3 = this.topicToAlias[e3];
          return void 0 !== t3 && this.aliasToTopic.get(t3), t3;
        }, o.prototype.clear = function() {
          this.aliasToTopic.reset(), this.topicToAlias = {}, this.numberAllocator.clear(), this.length = 0;
        }, o.prototype.getLruAlias = function() {
          return this.numberAllocator.firstVacant() || this.aliasToTopic.keys()[this.aliasToTopic.length - 1];
        }, e2.exports = o;
      }, 3380: function(e2) {
        "use strict";
        function t2(e3) {
          const t3 = e3.split("/");
          for (let e4 = 0; e4 < t3.length; e4++) if ("+" !== t3[e4]) {
            if ("#" === t3[e4]) return e4 === t3.length - 1;
            if (-1 !== t3[e4].indexOf("+") || -1 !== t3[e4].indexOf("#")) return false;
          }
          return true;
        }
        e2.exports = { validateTopics: function(e3) {
          if (0 === e3.length) return "empty_topic_list";
          for (let r2 = 0; r2 < e3.length; r2++) if (!t2(e3[r2])) return e3[r2];
          return null;
        } };
      } }, t = {};
      function r(n2) {
        var i = t[n2];
        if (void 0 !== i) return i.exports;
        var o = t[n2] = { id: n2, loaded: false, exports: {} };
        return e[n2].call(o.exports, o, o.exports, r), o.loaded = true, o.exports;
      }
      r.d = function(e2, t2) {
        for (var n2 in t2) r.o(t2, n2) && !r.o(e2, n2) && Object.defineProperty(e2, n2, { enumerable: true, get: t2[n2] });
      }, r.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
          return this || new Function("return this")();
        } catch (e2) {
          if ("object" == typeof window) return window;
        }
      }(), r.o = function(e2, t2) {
        return Object.prototype.hasOwnProperty.call(e2, t2);
      }, r.nmd = function(e2) {
        return e2.paths = [], e2.children || (e2.children = []), e2;
      };
      var n = r(2878);
      module.exports = n;
    }();
  }
});
export default require_mqtt_browser();
/*! Bundled license information:

precompiled-mqtt/dist/mqtt.browser.js:
  (*! For license information please see mqtt.browser.js.LICENSE.txt *)
*/
//# sourceMappingURL=precompiled-mqtt.js.map
